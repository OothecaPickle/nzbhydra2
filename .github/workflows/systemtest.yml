name: system-test

on:
    push:
    workflow_dispatch:
#    workflow_call:
#        inputs:
#            buildNewNativeImage:
#                required: true
#                type: boolean
#                default: true
#                description: "If false use last built artifact instead of building a new one. Only for testing the build scripts."

jobs:
    build:
        #todo Reenable when it works
        #        if: ${{ github.event.inputs.buildNewNativeImage }}
        #        uses: ./.github/workflows/buildNative.yml
        runs-on: ubuntu-latest
        steps:
            -   uses: dawidd6/action-download-artifact@v2
                name: Download artifact from previous build
                with:
                    workflow: buildNative.yml
                    name: coreLinux
            -   uses: actions/upload-artifact@v3
                name: Upload linux artifact
                with:
                    name: coreLinux
                    path: core
    prepareContainer:
        needs: [ build ]
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                name: "Check out source"
            -   name: "Display structure of working directory"
                run: ls .
            -   uses: actions/download-artifact@v3
                name: "Download native artifacts"
                with:
                    path: ~/artifacts
                    name: coreLinux
            -   name: "Display structure of artifacts folder"
                run: ls -laR ~/artifacts
            -   name: "Display structure of current folder"
                run: ls -la .
            -   name: "Copy artifacts to include folders"
                run: |
                    mv ~/artifacts/core ./docker/nativeTest/
                    chmod +x ./docker/nativeTest/core
            -   name: "Build core container"
                run: |
                    cp other/wrapper/nzbhydra2wrapperPy3.py ./docker/nativeTest/
                    cd ./docker/nativeTest/
                    docker build -t hydradocker .
                    docker save --output hydradocker.tar hydradocker
            -   name: "Save core container image"
                run: |
                    docker save --output hydradocker.tar hydradocker
            -   name: "Upload hydra docker image"
                uses: actions/upload-artifact@v3
                with:
                    name: hydradocker
                    path: hydradocker.tar
                    retention-days: 1
    buildMockserver:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                name: "Check out source"
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: '17'
                    distribution: 'adopt'
                    cache: 'maven'
            -   name: "Build mockserver container"
                run: |
                    mvn --batch-mode install -DskipTests -T 1C
                    cd other/mockserver/
                    mvn --batch-mode spring-boot:build-image
            -   name: "Save core container image"
                run: |
                    docker save --output mockserver.tar mockserver:3.0.0
            -   name: "Upload mockserver docker image"
                uses: actions/upload-artifact@v3
                with:
                    name: mockserver
                    path: mockserver.tar
                    retention-days: 1

    runTests:
        needs: [ prepareContainer, buildMockserver ]
        runs-on: ubuntu-latest
        #todo can't use images uploaded above
        #        services:
        #            core:
        #                image: hydradocker
        #                ports:
        #                    - 5076:5076
        #            mockServer:
        #                image: mockserver:3.0.0
        #                ports:
        #                    - 5080:5080

        steps:
# Run hydra
            -   uses: actions/download-artifact@v3
                name: "Download hydradocker image"
                with:
                    path: .
                    name: hydradocker

            -   name: "Load hydradocker image into docker"
                run: docker load --input hydradocker.tar

            -   name: "Run hydradocker"
                run: docker run -p 5076:5076 -d hydradocker

            # Run mockserver
            -   uses: actions/download-artifact@v3
                name: "Download mockserver image"
                with:
                    path: .
                    name: mockserver

            -   name: "Load mockserver image into docker"
                run: docker load --input mockserver.tar

            -   name: "Run mockserver"
                run: docker run -p 5080:5080 -d mockserver:3.0.0

            # Run tests
            -   uses: actions/checkout@v3
                name: "Check out source"
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: '17'
                    distribution: 'adopt'
                    cache: 'maven'

            -   name: "Run release script"
                run: |
                    cd tests/system
                    mvn --batch-mode test

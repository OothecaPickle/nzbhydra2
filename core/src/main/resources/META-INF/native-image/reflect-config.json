[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Ljava.io.Serializable;"
},
{
  "name":"[Ljava.lang.CharSequence;"
},
{
  "name":"[Ljava.lang.Class;"
},
{
  "name":"[Ljava.lang.Comparable;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.annotation.Annotation;"
},
{
  "name":"[Ljava.lang.constant.Constable;"
},
{
  "name":"[Ljava.lang.constant.ConstantDesc;"
},
{
  "name":"[Ljava.sql.Statement;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lorg.hibernate.event.spi.AutoFlushEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.DeleteEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.DirtyCheckEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.EvictEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.FlushEntityEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.FlushEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.InitializeCollectionEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.LoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.LockEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.MergeEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PersistEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostDeleteEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostInsertEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostLoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PostUpdateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreDeleteEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreInsertEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreLoadEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.PreUpdateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.RefreshEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.ReplicateEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.ResolveNaturalIdEventListener;"
},
{
  "name":"[Lorg.hibernate.event.spi.SaveOrUpdateEventListener;"
},
{
  "name":"[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
},
{
  "name":"[Lorg.springframework.boot.context.config.ConfigDataLocation;"
},
{
  "name":"[Lorg.springframework.core.annotation.AnnotationAttributes;"
},
{
  "name":"[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
},
{
  "name":"[Lorg.springframework.core.io.InputStreamSource;"
},
{
  "name":"[Lorg.springframework.core.io.Resource;",
  "queryAllDeclaredMethods":true
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"
},
{
  "name":"[Lsun.security.pkcs.SignerInfo;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.Tracer"
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.filter.ThresholdFilter",
  "queryAllPublicMethods":true,
  "methods":[
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setLevel",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MarkerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.UnsynchronizedAppenderBase",
  "methods":[{"name":"addFilter","parameterTypes":["ch.qos.logback.core.filter.Filter"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.filter.Filter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "decide",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "isStarted",
          "parameterTypes": []
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "start",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": []
      }
  ]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.pattern.ReplacingCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.rolling.RollingFileAppender",
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setFile",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setRollingPolicy",
          "parameterTypes": [
              "ch.qos.logback.core.rolling.RollingPolicy"
          ]
      }
  ]
},
{
  "name":"ch.qos.logback.core.rolling.RollingPolicyBase",
  "methods": [
      {
          "name": "setFileNamePattern",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setParent",
          "parameterTypes": [
              "ch.qos.logback.core.FileAppender"
          ]
      }
  ]
},
{
  "name":"ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setMaxHistory",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"ch.qos.logback.core.rolling.helper.DateTokenConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.spi.ContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"ch.qos.logback.core.spi.ContextAwareBase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addError",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "addError",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Throwable"
          ]
      },
      {
          "name": "addInfo",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "addInfo",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Throwable"
          ]
      },
      {
          "name": "addStatus",
          "parameterTypes": [
              "ch.qos.logback.core.status.Status"
          ]
      },
      {
          "name": "addWarn",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "addWarn",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Throwable"
          ]
      },
      {
          "name": "getContext",
          "parameterTypes": []
      },
      {
          "name": "getStatusManager",
          "parameterTypes": []
      },
      {
          "name": "setContext",
          "parameterTypes": [
              "ch.qos.logback.core.Context"
          ]
      }
  ]
},
{
  "name":"ch.qos.logback.core.spi.LifeCycle",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"char",
  "queryAllDeclaredMethods":true
},
{
  "name":"co.elastic.clients.elasticsearch.ElasticsearchClient"
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransport"
},
{
  "name":"com.couchbase.client.java.Bucket"
},
{
  "name":"com.couchbase.client.java.Cluster"
},
{
  "name":"com.datastax.oss.driver.api.core.CqlSession"
},
{
  "name":"com.fasterxml.jackson.annotation.JacksonAnnotation",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonFormat",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonFormat$Shape"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnore",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnoreProperties",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Include"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonPropertyOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonSetter",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getJsonFactory",
          "parameterTypes": []
      },
      {
          "name": "readValues",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser",
              "com.fasterxml.jackson.core.type.ResolvedType"
          ]
      },
      {
          "name": "readValues",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser",
              "com.fasterxml.jackson.core.type.TypeReference"
          ]
      }
  ]
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
    {
        "name": "com.fasterxml.jackson.core.Versioned",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.JsonDeserializer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "deserialize",
                "parameterTypes": [
                    "com.fasterxml.jackson.core.JsonParser",
                    "com.fasterxml.jackson.databind.DeserializationContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "deserializeWithType",
                "parameterTypes": [
                    "com.fasterxml.jackson.core.JsonParser",
                    "com.fasterxml.jackson.databind.DeserializationContext",
                    "com.fasterxml.jackson.databind.jsontype.TypeDeserializer"
                ]
            },
            {
                "name": "deserializeWithType",
                "parameterTypes": [
                    "com.fasterxml.jackson.core.JsonParser",
                    "com.fasterxml.jackson.databind.DeserializationContext",
                    "com.fasterxml.jackson.databind.jsontype.TypeDeserializer",
                    "java.lang.Object"
                ]
            },
            {
                "name": "findBackReference",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getAbsentValue",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.DeserializationContext"
                ]
            },
            {
                "name": "getDelegatee",
                "parameterTypes": []
            },
            {
                "name": "getEmptyAccessPattern",
                "parameterTypes": []
            },
            {
                "name": "getEmptyValue",
                "parameterTypes": []
            },
            {
                "name": "getEmptyValue",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.DeserializationContext"
                ]
            },
            {
                "name": "getKnownPropertyNames",
                "parameterTypes": []
            },
            {
                "name": "getNullAccessPattern",
                "parameterTypes": []
            },
            {
                "name": "getNullValue",
                "parameterTypes": []
            },
            {
                "name": "getNullValue",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.DeserializationContext"
                ]
            },
            {
                "name": "getObjectIdReader",
                "parameterTypes": []
            },
            {
                "name": "handledType",
                "parameterTypes": []
            },
            {
                "name": "isCachable",
                "parameterTypes": []
            },
            {
                "name": "logicalType",
                "parameterTypes": []
            },
            {
                "name": "replaceDelegatee",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.JsonDeserializer"
                ]
            },
            {
                "name": "supportsUpdate",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.DeserializationConfig"
                ]
            },
            {
                "name": "unwrappingDeserializer",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.util.NameTransformer"
                ]
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.JsonSerializer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "acceptJsonFormatVisitor",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
                    "com.fasterxml.jackson.databind.JavaType"
                ]
            },
            {
                "name": "getDelegatee",
                "parameterTypes": []
            },
            {
                "name": "handledType",
                "parameterTypes": []
            },
            {
                "name": "isEmpty",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.SerializerProvider",
                    "java.lang.Object"
                ]
            },
            {
                "name": "isEmpty",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "isUnwrappingSerializer",
                "parameterTypes": []
            },
            {
                "name": "properties",
                "parameterTypes": []
            },
            {
                "name": "replaceDelegatee",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.JsonSerializer"
                ]
            },
            {
                "name": "serialize",
                "parameterTypes": [
                    "java.lang.Object",
                    "com.fasterxml.jackson.core.JsonGenerator",
                    "com.fasterxml.jackson.databind.SerializerProvider"
                ]
            },
            {
                "name": "serializeWithType",
                "parameterTypes": [
                    "java.lang.Object",
                    "com.fasterxml.jackson.core.JsonGenerator",
                    "com.fasterxml.jackson.databind.SerializerProvider",
                    "com.fasterxml.jackson.databind.jsontype.TypeSerializer"
                ]
            },
            {
                "name": "unwrappingSerializer",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.util.NameTransformer"
                ]
            },
            {
                "name": "usesObjectId",
                "parameterTypes": []
            },
            {
                "name": "withFilterId",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            }
        ]
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "createArrayNode",
          "parameterTypes": []
      },
      {
          "name": "createObjectNode",
          "parameterTypes": []
      },
      {
          "name": "getFactory",
          "parameterTypes": []
      },
      {
          "name": "missingNode",
          "parameterTypes": []
      },
      {
          "name": "nullNode",
          "parameterTypes": []
      },
      {
          "name": "readTree",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser"
          ]
      },
      {
          "name": "readValue",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser",
              "com.fasterxml.jackson.core.type.ResolvedType"
          ]
      },
      {
          "name": "readValue",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser",
              "com.fasterxml.jackson.core.type.TypeReference"
          ]
      },
      {
          "name": "readValue",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser",
              "java.lang.Class"
          ]
      },
      {
          "name": "readValues",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser",
              "com.fasterxml.jackson.core.type.ResolvedType"
          ]
      },
      {
          "name": "readValues",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser",
              "com.fasterxml.jackson.core.type.TypeReference"
          ]
      },
      {
          "name": "readValues",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonParser",
              "java.lang.Class"
          ]
      },
      {
          "name": "treeAsTokens",
          "parameterTypes": [
              "com.fasterxml.jackson.core.TreeNode"
          ]
      },
      {
          "name": "treeToValue",
          "parameterTypes": [
              "com.fasterxml.jackson.core.TreeNode",
              "java.lang.Class"
          ]
      },
      {
          "name": "version",
          "parameterTypes": []
      },
      {
          "name": "writeTree",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonGenerator",
              "com.fasterxml.jackson.core.TreeNode"
          ]
      },
      {
          "name": "writeValue",
          "parameterTypes": [
              "com.fasterxml.jackson.core.JsonGenerator",
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.SerializationFeature",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.annotation.JacksonStdImpl",
  "queryAllDeclaredMethods":true
},
    {
        "name": "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.annotation.JsonSerialize",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.deser.NullValueProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
        "queryAllDeclaredMethods": true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addAbstractTypeMapping",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Class"
          ]
      },
      {
          "name": "addDeserializer",
          "parameterTypes": [
              "java.lang.Class",
              "com.fasterxml.jackson.databind.JsonDeserializer"
          ]
      },
      {
          "name": "addKeyDeserializer",
          "parameterTypes": [
              "java.lang.Class",
              "com.fasterxml.jackson.databind.KeyDeserializer"
          ]
      },
      {
          "name": "addKeySerializer",
          "parameterTypes": [
              "java.lang.Class",
              "com.fasterxml.jackson.databind.JsonSerializer"
          ]
      },
      {
          "name": "addSerializer",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.JsonSerializer"
          ]
      },
      {
          "name": "addSerializer",
          "parameterTypes": [
              "java.lang.Class",
              "com.fasterxml.jackson.databind.JsonSerializer"
          ]
      },
      {
          "name": "addValueInstantiator",
          "parameterTypes": [
              "java.lang.Class",
              "com.fasterxml.jackson.databind.deser.ValueInstantiator"
          ]
      },
      {
          "name": "getModuleName",
          "parameterTypes": []
      },
      {
          "name": "getTypeId",
          "parameterTypes": []
      },
      {
          "name": "registerSubtypes",
          "parameterTypes": [
              "java.util.Collection"
          ]
      },
      {
          "name": "registerSubtypes",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.jsontype.NamedType[]"
          ]
      },
      {
          "name": "registerSubtypes",
          "parameterTypes": [
              "java.lang.Class[]"
          ]
      },
      {
          "name": "setAbstractTypes",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
          ]
      },
      {
          "name": "setDeserializerModifier",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
          ]
      },
      {
          "name": "setDeserializers",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.module.SimpleDeserializers"
          ]
      },
      {
          "name": "setKeyDeserializers",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
          ]
      },
      {
          "name": "setKeySerializers",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.module.SimpleSerializers"
          ]
      },
      {
          "name": "setMixInAnnotation",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Class"
          ]
      },
      {
          "name": "setSerializerModifier",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
          ]
      },
      {
          "name": "setSerializers",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.module.SimpleSerializers"
          ]
      },
      {
          "name": "setValueInstantiators",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
          ]
      },
      {
          "name": "setupModule",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.Module$SetupContext"
          ]
      },
      {
          "name": "version",
          "parameterTypes": []
      }
  ]
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor$CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile$SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml$XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.kotlin$KotlinModule"
},
{
  "name":"com.fasterxml.jackson.module.kotlin.KotlinModule"
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "setupModule",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.Module$SetupContext"
          ]
      }
  ]
},
{
  "name":"com.gargoylesoftware.htmlunit.BrowserVersionFeatures",
  "fields": [
      {
          "name": "ANCHOR_EMPTY_HREF_NO_FILENAME"
      },
      {
          "name": "ANCHOR_SEND_PING_REQUEST"
      },
      {
          "name": "CONTENT_SECURITY_POLICY_IGNORED"
      },
      {
          "name": "CSS_BACKGROUND_INITIAL"
      },
      {
          "name": "CSS_BACKGROUND_RGBA"
      },
      {
          "name": "CSS_CSSTEXT_IE_STYLE"
      },
      {
          "name": "CSS_DIALOG_NONE"
      },
      {
          "name": "CSS_DISPLAY_BLOCK"
      },
      {
          "name": "CSS_DISPLAY_BLOCK2"
      },
      {
          "name": "CSS_LENGTH_INITIAL"
      },
      {
          "name": "CSS_NOSCRIPT_DISPLAY_INLINE"
      },
      {
          "name": "CSS_OUTLINE_WIDTH_UNIT_NOT_REQUIRED"
      },
      {
          "name": "CSS_PROGRESS_DISPLAY_INLINE"
      },
      {
          "name": "CSS_PSEUDO_SELECTOR_MS_PLACEHHOLDER"
      },
      {
          "name": "CSS_PSEUDO_SELECTOR_PLACEHOLDER_SHOWN"
      },
      {
          "name": "CSS_RP_DISPLAY_NONE"
      },
      {
          "name": "CSS_RT_DISPLAY_RUBY_TEXT_ALWAYS"
      },
      {
          "name": "CSS_RUBY_DISPLAY_INLINE"
      },
      {
          "name": "CSS_SET_NULL_THROWS"
      },
      {
          "name": "CSS_STYLE_PROP_DISCONNECTED_IS_EMPTY"
      },
      {
          "name": "CSS_STYLE_PROP_FONT_DISCONNECTED_IS_EMPTY"
      },
      {
          "name": "CSS_VERTICAL_ALIGN_SUPPORTS_AUTO"
      },
      {
          "name": "CSS_ZINDEX_TYPE_INTEGER"
      },
      {
          "name": "DIALOGWINDOW_REFERER"
      },
      {
          "name": "DOM_NORMALIZE_REMOVE_CHILDREN"
      },
      {
          "name": "EVENT_BEFORE_UNLOAD_RETURN_VALUE_IS_HTML5_LIKE"
      },
      {
          "name": "EVENT_FOCUS_FOCUS_IN_BLUR_OUT"
      },
      {
          "name": "EVENT_FOCUS_IN_FOCUS_OUT_BLUR"
      },
      {
          "name": "EVENT_FOCUS_ON_LOAD"
      },
      {
          "name": "EVENT_HANDLER_NULL_RETURN_IS_MEANINGFUL"
      },
      {
          "name": "EVENT_MOUSE_ON_DISABLED"
      },
      {
          "name": "EVENT_ONANIMATION_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
          "name": "EVENT_ONCHANGE_AFTER_ONCLICK"
      },
      {
          "name": "EVENT_ONCLICK_FOR_SELECT_ONLY"
      },
      {
          "name": "EVENT_ONCLICK_POINTEREVENT_DETAIL_0"
      },
      {
          "name": "EVENT_ONCLICK_USES_POINTEREVENT"
      },
      {
          "name": "EVENT_ONCLOSE_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
          "name": "EVENT_ONDOUBLECLICK_USES_POINTEREVENT"
      },
      {
          "name": "EVENT_ONLOAD_INTERNAL_JAVASCRIPT"
      },
      {
          "name": "EVENT_ONMESSAGE_DEFAULT_DATA_NULL"
      },
      {
          "name": "EVENT_ONMOUSEDOWN_FOR_SELECT_OPTION_TRIGGERS_ADDITIONAL_DOWN_FOR_SELECT"
      },
      {
          "name": "EVENT_ONMOUSEDOWN_NOT_FOR_SELECT_OPTION"
      },
      {
          "name": "EVENT_ONMOUSEOVER_FOR_DISABLED_OPTION"
      },
      {
          "name": "EVENT_ONMOUSEOVER_NEVER_FOR_SELECT_OPTION"
      },
      {
          "name": "EVENT_ONMOUSEUP_FOR_SELECT_OPTION_TRIGGERS_ADDITIONAL_UP_FOR_SELECT"
      },
      {
          "name": "EVENT_ONMOUSEUP_NOT_FOR_SELECT_OPTION"
      },
      {
          "name": "EVENT_ONPOPSTATE_DOCUMENT_CREATE_NOT_SUPPORTED"
      },
      {
          "name": "EVENT_TYPE_BEFOREUNLOADEVENT"
      },
      {
          "name": "EVENT_TYPE_HASHCHANGEEVENT"
      },
      {
          "name": "EVENT_TYPE_MOUSEWHEELEVENT"
      },
      {
          "name": "EVENT_TYPE_POINTEREVENT"
      },
      {
          "name": "EVENT_TYPE_PROGRESSEVENT"
      },
      {
          "name": "EVENT_TYPE_WHEELEVENT"
      },
      {
          "name": "FOCUS_BODY_ELEMENT_AT_START"
      },
      {
          "name": "FORMFIELD_REACHABLE_BY_NEW_NAMES"
      },
      {
          "name": "FORMFIELD_REACHABLE_BY_ORIGINAL_NAME"
      },
      {
          "name": "FORM_FORM_ATTRIBUTE_SUPPORTED"
      },
      {
          "name": "FORM_PARAMETRS_NOT_SUPPORTED_FOR_IMAGE"
      },
      {
          "name": "FORM_SUBMISSION_DOWNLOWDS_ALSO_IF_ONLY_HASH_CHANGED"
      },
      {
          "name": "FORM_SUBMISSION_FORM_ATTRIBUTE"
      },
      {
          "name": "FORM_SUBMISSION_HEADER_CACHE_CONTROL_MAX_AGE"
      },
      {
          "name": "FORM_SUBMISSION_HEADER_CACHE_CONTROL_NO_CACHE"
      },
      {
          "name": "FORM_SUBMISSION_HEADER_ORIGIN"
      },
      {
          "name": "FORM_SUBMISSION_URL_WITHOUT_HASH"
      },
      {
          "name": "FRAME_LOCATION_ABOUT_BLANK_FOR_ABOUT_SCHEME"
      },
      {
          "name": "HTMLABBREVIATED"
      },
      {
          "name": "HTMLALLCOLLECTION_DO_NOT_CONVERT_STRINGS_TO_NUMBER"
      },
      {
          "name": "HTMLALLCOLLECTION_INTEGER_INDEX"
      },
      {
          "name": "HTMLALLCOLLECTION_NO_COLLECTION_FOR_MANY_HITS"
      },
      {
          "name": "HTMLALLCOLLECTION_NULL_IF_NAMED_ITEM_NOT_FOUND"
      },
      {
          "name": "HTMLBASEFONT_END_TAG_FORBIDDEN"
      },
      {
          "name": "HTMLBASE_HREF_DEFAULT_EMPTY"
      },
      {
          "name": "HTMLBUTTON_SUBMIT_IGNORES_DISABLED_STATE"
      },
      {
          "name": "HTMLBUTTON_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
          "name": "HTMLCOLLECTION_ITEM_FUNCT_SUPPORTS_DOUBLE_INDEX_ALSO"
      },
      {
          "name": "HTMLCOLLECTION_ITEM_SUPPORTS_DOUBLE_INDEX_ALSO"
      },
      {
          "name": "HTMLCOLLECTION_ITEM_SUPPORTS_ID_SEARCH_ALSO"
      },
      {
          "name": "HTMLCOLLECTION_NAMED_ITEM_ID_FIRST"
      },
      {
          "name": "HTMLCOLLECTION_NULL_IF_NOT_FOUND"
      },
      {
          "name": "HTMLCOLLECTION_SUPPORTS_PARANTHESES"
      },
      {
          "name": "HTMLDOCUMENT_CHARSET_LOWERCASE"
      },
      {
          "name": "HTMLDOCUMENT_COLOR"
      },
      {
          "name": "HTMLDOCUMENT_COOKIES_IGNORE_BLANK"
      },
      {
          "name": "HTMLDOCUMENT_ELEMENTS_BY_NAME_EMPTY"
      },
      {
          "name": "HTMLDOCUMENT_FUNCTION_DETACHED"
      },
      {
          "name": "HTMLDOCUMENT_GET_ALSO_FRAMES"
      },
      {
          "name": "HTMLDOCUMENT_GET_FOR_ID_AND_OR_NAME"
      },
      {
          "name": "HTMLDOCUMENT_GET_PREFERS_STANDARD_FUNCTIONS"
      },
      {
          "name": "HTMLELEMENT_ALIGN_INVALID"
      },
      {
          "name": "HTMLELEMENT_DETACH_ACTIVE_TRIGGERS_NO_KEYUP_EVENT"
      },
      {
          "name": "HTMLELEMENT_REMOVE_ACTIVE_TRIGGERS_BLUR_EVENT"
      },
      {
          "name": "HTMLIMAGE_BLANK_SRC_AS_EMPTY"
      },
      {
          "name": "HTMLIMAGE_EMPTY_SRC_DISPLAY_FALSE"
      },
      {
          "name": "HTMLIMAGE_HTMLELEMENT"
      },
      {
          "name": "HTMLIMAGE_HTMLUNKNOWNELEMENT"
      },
      {
          "name": "HTMLIMAGE_INVISIBLE_NO_SRC"
      },
      {
          "name": "HTMLIMAGE_NAME_VALUE_PARAMS"
      },
      {
          "name": "HTMLINPUT_ATTRIBUTE_MIN_MAX_LENGTH_SUPPORTED"
      },
      {
          "name": "HTMLINPUT_CHECKBOX_DOES_NOT_CLICK_SURROUNDING_ANCHOR"
      },
      {
          "name": "HTMLINPUT_DOES_NOT_CLICK_SURROUNDING_ANCHOR"
      },
      {
          "name": "HTMLINPUT_FILES_UNDEFINED"
      },
      {
          "name": "HTMLINPUT_FILE_SELECTION_START_END_NULL"
      },
      {
          "name": "HTMLINPUT_TYPE_COLOR_NOT_SUPPORTED"
      },
      {
          "name": "HTMLINPUT_TYPE_DATETIME_LOCAL_SUPPORTED"
      },
      {
          "name": "HTMLINPUT_TYPE_DATETIME_SUPPORTED"
      },
      {
          "name": "HTMLINPUT_TYPE_IMAGE_IGNORES_CUSTOM_VALIDITY"
      },
      {
          "name": "HTMLINPUT_TYPE_MONTH_SUPPORTED"
      },
      {
          "name": "HTMLINPUT_TYPE_WEEK_SUPPORTED"
      },
      {
          "name": "HTMLKEYGEN_END_TAG_FORBIDDEN"
      },
      {
          "name": "HTMLLINK_CHECK_TYPE_FOR_STYLESHEET"
      },
      {
          "name": "HTMLOPTION_PREVENT_DISABLED"
      },
      {
          "name": "HTMLOPTION_REMOVE_SELECTED_ATTRIB_DESELECTS"
      },
      {
          "name": "HTMLSCRIPT_TRIM_TYPE"
      },
      {
          "name": "HTMLSELECT_WILL_VALIDATE_ALWAYS_TRUE"
      },
      {
          "name": "HTMLSELECT_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
          "name": "HTMLTEXTAREA_SET_DEFAULT_VALUE_UPDATES_VALUE"
      },
      {
          "name": "HTMLTEXTAREA_USE_ALL_TEXT_CHILDREN"
      },
      {
          "name": "HTMLTEXTAREA_WILL_VALIDATE_IGNORES_READONLY"
      },
      {
          "name": "HTMLTRACK_END_TAG_FORBIDDEN"
      },
      {
          "name": "HTML_ATTRIBUTE_LOWER_CASE"
      },
      {
          "name": "HTML_COLOR_EXPAND_ZERO"
      },
      {
          "name": "HTML_COLOR_RESTRICT"
      },
      {
          "name": "HTML_COLOR_TO_LOWER"
      },
      {
          "name": "HTML_COMMAND_TAG"
      },
      {
          "name": "HTML_ISINDEX_TAG"
      },
      {
          "name": "HTML_MAIN_TAG"
      },
      {
          "name": "HTML_OBJECT_CLASSID"
      },
      {
          "name": "HTTP_COOKIE_EXTENDED_DATE_PATTERNS_1"
      },
      {
          "name": "HTTP_COOKIE_EXTENDED_DATE_PATTERNS_2"
      },
      {
          "name": "HTTP_COOKIE_EXTRACT_PATH_FROM_LOCATION"
      },
      {
          "name": "HTTP_COOKIE_REMOVE_DOT_FROM_ROOT_DOMAINS"
      },
      {
          "name": "HTTP_COOKIE_START_DATE_1970"
      },
      {
          "name": "HTTP_HEADER_CH_UA"
      },
      {
          "name": "HTTP_HEADER_SEC_FETCH"
      },
      {
          "name": "HTTP_HEADER_UPGRADE_INSECURE_REQUEST"
      },
      {
          "name": "HTTP_REDIRECT_WITHOUT_HASH"
      },
      {
          "name": "JS_ALIGN_ACCEPTS_ARBITRARY_VALUES"
      },
      {
          "name": "JS_ALIGN_FOR_INPUT_IGNORES_VALUES"
      },
      {
          "name": "JS_ANCHORS_REQUIRES_NAME_OR_ID"
      },
      {
          "name": "JS_ANCHOR_HOSTNAME_IGNORE_BLANK"
      },
      {
          "name": "JS_ANCHOR_PATHNAME_DETECT_WIN_DRIVES_URL"
      },
      {
          "name": "JS_ANCHOR_PATHNAME_NONE_FOR_BROKEN_URL"
      },
      {
          "name": "JS_ANCHOR_PATHNAME_NONE_FOR_NONE_HTTP_URL"
      },
      {
          "name": "JS_ANCHOR_PATHNAME_PREFIX_WIN_DRIVES_URL"
      },
      {
          "name": "JS_ANCHOR_PROTOCOL_COLON_FOR_BROKEN_URL"
      },
      {
          "name": "JS_ANCHOR_PROTOCOL_COLON_UPPER_CASE_DRIVE_LETTERS"
      },
      {
          "name": "JS_ANCHOR_PROTOCOL_HTTP_FOR_BROKEN_URL"
      },
      {
          "name": "JS_ANCHOR_PROTOCOL_INVALID_THROWS"
      },
      {
          "name": "JS_API_FETCH"
      },
      {
          "name": "JS_API_PROXY"
      },
      {
          "name": "JS_AREA_WITHOUT_HREF_FOCUSABLE"
      },
      {
          "name": "JS_ARGUMENTS_READ_ONLY_ACCESSED_FROM_FUNCTION"
      },
      {
          "name": "JS_ARRAY_FROM"
      },
      {
          "name": "JS_ATTR_FIRST_LAST_CHILD_RETURNS_NULL"
      },
      {
          "name": "JS_AUDIO_PROCESSING_EVENT_CTOR"
      },
      {
          "name": "JS_BGSOUND_AS_UNKNOWN"
      },
      {
          "name": "JS_BLOB_CONTENT_TYPE_CASE_SENSITIVE"
      },
      {
          "name": "JS_BLOB_EVENT_REQUIRES_DATA"
      },
      {
          "name": "JS_BODY_MARGINS_8"
      },
      {
          "name": "JS_BOUNDINGCLIENTRECT_THROWS_IF_DISCONNECTED"
      },
      {
          "name": "JS_CANVAS_DATA_URL_CHROME_PNG"
      },
      {
          "name": "JS_CANVAS_DATA_URL_IE_PNG"
      },
      {
          "name": "JS_CLEAR_RESTRICT"
      },
      {
          "name": "JS_CLIENTHEIGHT_INPUT_17"
      },
      {
          "name": "JS_CLIENTHEIGHT_INPUT_18"
      },
      {
          "name": "JS_CLIENTHEIGHT_RADIO_CHECKBOX_10"
      },
      {
          "name": "JS_CLIENTRECTLIST_THROWS_IF_ITEM_NOT_FOUND"
      },
      {
          "name": "JS_CLIENTWIDTH_INPUT_TEXT_143"
      },
      {
          "name": "JS_CLIENTWIDTH_INPUT_TEXT_173"
      },
      {
          "name": "JS_CLIENTWIDTH_RADIO_CHECKBOX_10"
      },
      {
          "name": "JS_CONSOLE_TIMESTAMP"
      },
      {
          "name": "JS_CSSRULELIST_ENUM_ITEM_LENGTH"
      },
      {
          "name": "JS_CSS_OBJECT"
      },
      {
          "name": "JS_DATE_LOCALE_DATE_SHORT"
      },
      {
          "name": "JS_DATE_WITH_LEFT_TO_RIGHT_MARK"
      },
      {
          "name": "JS_DOCTYPE_ENTITIES_NULL"
      },
      {
          "name": "JS_DOCTYPE_NOTATIONS_NULL"
      },
      {
          "name": "JS_DOCUMENT_CREATE_ATTRUBUTE_LOWER_CASE"
      },
      {
          "name": "JS_DOCUMENT_DESIGN_MODE_INHERIT"
      },
      {
          "name": "JS_DOCUMENT_FORMS_FUNCTION_SUPPORTED"
      },
      {
          "name": "JS_DOCUMENT_OPEN_OVERWRITES_ABOUT_BLANK_LOCATION"
      },
      {
          "name": "JS_DOCUMENT_SELECTION_RANGE_COUNT"
      },
      {
          "name": "JS_DOCUMENT_SETTING_DOMAIN_THROWS_FOR_ABOUT_BLANK"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_CREATE_HTMLDOCOMENT_REQUIRES_TITLE"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CORE_3"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS2_1"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS2_3"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_1"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_2"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS3_3"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_1"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_2"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_CSS_3"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_EVENTS_1"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_KEYBOARDEVENTS"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_LS"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_MUTATIONNAMEEVENTS"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_RANGE_1"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_RANGE_3"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_STYLESHEETS"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_SVG_BASICSTRUCTURE_1_2"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_TEXTEVENTS"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_UIEVENTS_2"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_VALIDATION"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_VIEWS_1"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_VIEWS_3"
      },
      {
          "name": "JS_DOMIMPLEMENTATION_FEATURE_XPATH"
      },
      {
          "name": "JS_DOMPARSER_EMPTY_STRING_IS_ERROR"
      },
      {
          "name": "JS_DOMPARSER_EXCEPTION_ON_ERROR"
      },
      {
          "name": "JS_DOMPARSER_PARSERERROR_ON_ERROR"
      },
      {
          "name": "JS_DOMTOKENLIST_CONTAINS_RETURNS_FALSE_FOR_BLANK"
      },
      {
          "name": "JS_DOMTOKENLIST_ENHANCED_WHITESPACE_CHARS"
      },
      {
          "name": "JS_DOMTOKENLIST_GET_NULL_IF_OUTSIDE"
      },
      {
          "name": "JS_DOMTOKENLIST_LENGTH_IGNORES_DUPLICATES"
      },
      {
          "name": "JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_ADD"
      },
      {
          "name": "JS_DOMTOKENLIST_REMOVE_WHITESPACE_CHARS_ON_REMOVE"
      },
      {
          "name": "JS_DOM_CDATA_DELETE_THROWS_NEGATIVE_COUNT"
      },
      {
          "name": "JS_ELEMENT_GET_ATTRIBUTE_RETURNS_EMPTY"
      },
      {
          "name": "JS_ERROR_CAPTURE_STACK_TRACE"
      },
      {
          "name": "JS_ERROR_STACK_TRACE_LIMIT"
      },
      {
          "name": "JS_EVENT_INPUT_CTOR_INPUTTYPE"
      },
      {
          "name": "JS_EVENT_KEYBOARD_CTOR_WHICH"
      },
      {
          "name": "JS_EVENT_LOAD_SUPPRESSED_BY_CONTENT_SECURIRY_POLICY"
      },
      {
          "name": "JS_FILEREADER_CONTENT_TYPE"
      },
      {
          "name": "JS_FILEREADER_EMPTY_NULL"
      },
      {
          "name": "JS_FORM_ACTION_EXPANDURL_NOT_DEFINED"
      },
      {
          "name": "JS_FORM_DATA_CONTENT_TYPE_PLAIN_IF_FILE_TYPE_UNKNOWN"
      },
      {
          "name": "JS_FORM_DATA_ITERATOR_SIMPLE_NAME"
      },
      {
          "name": "JS_FORM_DISPATCHEVENT_SUBMITS"
      },
      {
          "name": "JS_FORM_REJECT_INVALID_ENCODING"
      },
      {
          "name": "JS_FORM_SUBMIT_FORCES_DOWNLOAD"
      },
      {
          "name": "JS_FORM_USABLE_AS_FUNCTION"
      },
      {
          "name": "JS_FRAME_CONTENT_DOCUMENT_ACCESS_DENIED_THROWS"
      },
      {
          "name": "JS_GLOBAL_THIS"
      },
      {
          "name": "JS_GROUPINGRULE_INSERTRULE_INDEX_OPTIONAL"
      },
      {
          "name": "JS_HTML_HYPHEN_ELEMENT_CLASS_NAME"
      },
      {
          "name": "JS_HTML_OBJECT_VALIDITYSTATE_ISVALID_IGNORES_CUSTOM_ERROR"
      },
      {
          "name": "JS_HTML_RUBY_ELEMENT_CLASS_NAME"
      },
      {
          "name": "JS_IFRAME_ALWAYS_EXECUTE_ONLOAD"
      },
      {
          "name": "JS_IGNORES_LAST_LINE_CONTAINING_UNCOMMENTED"
      },
      {
          "name": "JS_IGNORES_UTF8_BOM_SOMETIMES"
      },
      {
          "name": "JS_IMAGE_COMPLETE_RETURNS_TRUE_FOR_NO_REQUEST"
      },
      {
          "name": "JS_IMAGE_WIDTH_HEIGHT_EMPTY_SOURCE_RETURNS_0x0"
      },
      {
          "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_16x16_0x0"
      },
      {
          "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_24x24_0x0"
      },
      {
          "name": "JS_IMAGE_WIDTH_HEIGHT_RETURNS_28x30_28x30"
      },
      {
          "name": "JS_INNER_HTML_ADD_CHILD_FOR_NULL_VALUE"
      },
      {
          "name": "JS_INNER_HTML_LF"
      },
      {
          "name": "JS_INNER_TEXT_SCRIPT"
      },
      {
          "name": "JS_INNER_TEXT_SVG_NL"
      },
      {
          "name": "JS_INNER_TEXT_SVG_TITLE"
      },
      {
          "name": "JS_INNER_TEXT_VALUE_NULL"
      },
      {
          "name": "JS_INPUT_IGNORE_NEGATIVE_SELECTION_START"
      },
      {
          "name": "JS_INPUT_NUMBER_ACCEPT_ALL"
      },
      {
          "name": "JS_INPUT_NUMBER_DOT_AT_END_IS_DOUBLE"
      },
      {
          "name": "JS_INPUT_NUMBER_SELECTION_START_END_NULL"
      },
      {
          "name": "JS_INPUT_SET_TYPE_LOWERCASE"
      },
      {
          "name": "JS_INPUT_SET_UNSUPORTED_TYPE_EXCEPTION"
      },
      {
          "name": "JS_INPUT_SET_VALUE_DATE_SUPPORTED"
      },
      {
          "name": "JS_INPUT_SET_VALUE_EMAIL_TRIMMED"
      },
      {
          "name": "JS_INPUT_SET_VALUE_MOVE_SELECTION_TO_START"
      },
      {
          "name": "JS_INPUT_SET_VALUE_URL_TRIMMED"
      },
      {
          "name": "JS_INTL_NAMED_OBJECT"
      },
      {
          "name": "JS_INTL_V8_BREAK_ITERATOR"
      },
      {
          "name": "JS_IS_SEARCH_PROVIDER_INSTALLED_ZERO"
      },
      {
          "name": "JS_LABEL_FORM_OF_SELF"
      },
      {
          "name": "JS_LOCATION_HASH_HASH_IS_ENCODED"
      },
      {
          "name": "JS_LOCATION_HASH_IS_DECODED"
      },
      {
          "name": "JS_LOCATION_HASH_RETURNS_HASH_FOR_EMPTY_DEFINED"
      },
      {
          "name": "JS_LOCATION_HREF_HASH_IS_ENCODED"
      },
      {
          "name": "JS_LOCATION_RELOAD_REFERRER"
      },
      {
          "name": "JS_MEDIA_LIST_ALL"
      },
      {
          "name": "JS_MEDIA_LIST_EMPTY_STRING"
      },
      {
          "name": "JS_MENU_TYPE_EMPTY"
      },
      {
          "name": "JS_MENU_TYPE_PASS"
      },
      {
          "name": "JS_NATIVE_FUNCTION_TOSTRING_COMPACT"
      },
      {
          "name": "JS_NATIVE_FUNCTION_TOSTRING_NEW_LINE"
      },
      {
          "name": "JS_NATIVE_FUNCTION_TOSTRING_NL"
      },
      {
          "name": "JS_NAVIGATOR_DO_NOT_TRACK_UNSPECIFIED"
      },
      {
          "name": "JS_NODE_CONTAINS_RETURNS_FALSE_FOR_INVALID_ARG"
      },
      {
          "name": "JS_NODE_INSERT_BEFORE_REF_OPTIONAL"
      },
      {
          "name": "JS_OBJECT_GET_OWN_PROPERTY_SYMBOLS"
      },
      {
          "name": "JS_OFFSET_PARENT_NULL_IF_FIXED"
      },
      {
          "name": "JS_OUTER_HTML_NULL_AS_STRING"
      },
      {
          "name": "JS_OUTER_HTML_REMOVES_CHILDREN_FOR_DETACHED"
      },
      {
          "name": "JS_OUTER_HTML_THROWS_FOR_DETACHED"
      },
      {
          "name": "JS_PAGERULE_SELECTORTEXT_EMPTY"
      },
      {
          "name": "JS_PHRASE_COMMON_CLASS_NAME"
      },
      {
          "name": "JS_POP_STATE_EVENT_CLONE_STATE"
      },
      {
          "name": "JS_PRE_WIDTH_STRING"
      },
      {
          "name": "JS_PROMISE"
      },
      {
          "name": "JS_PROPERTY_DESCRIPTOR_NAME"
      },
      {
          "name": "JS_PROPERTY_DESCRIPTOR_NEW_LINE"
      },
      {
          "name": "JS_REFLECT"
      },
      {
          "name": "JS_REGEXP_EMPTY_LASTPAREN_IF_TOO_MANY_GROUPS"
      },
      {
          "name": "JS_REGEXP_GROUP0_RETURNS_WHOLE_MATCH"
      },
      {
          "name": "JS_SCRIPT_HANDLE_204_AS_ERROR"
      },
      {
          "name": "JS_SCRIPT_SUPPORTS_FOR_AND_EVENT_WINDOW"
      },
      {
          "name": "JS_SELECTOR_TEXT_LOWERCASE"
      },
      {
          "name": "JS_SELECT_FILE_THROWS"
      },
      {
          "name": "JS_SELECT_OPTIONS_HAS_SELECT_CLASS_NAME"
      },
      {
          "name": "JS_SELECT_OPTIONS_IGNORE_NEGATIVE_LENGTH"
      },
      {
          "name": "JS_SELECT_OPTIONS_IN_ALWAYS_TRUE"
      },
      {
          "name": "JS_SELECT_OPTIONS_NULL_FOR_OUTSIDE"
      },
      {
          "name": "JS_SELECT_OPTIONS_REMOVE_IGNORE_IF_INDEX_NEGATIVE"
      },
      {
          "name": "JS_SELECT_OPTIONS_REMOVE_THROWS_IF_NEGATIV"
      },
      {
          "name": "JS_SELECT_REMOVE_IGNORE_IF_INDEX_OUTSIDE"
      },
      {
          "name": "JS_SELECT_SET_VALUES_CHECKS_ONLY_VALUE_ATTRIBUTE"
      },
      {
          "name": "JS_STORAGE_GET_FROM_ITEMS"
      },
      {
          "name": "JS_STORAGE_PRESERVED_INCLUDED"
      },
      {
          "name": "JS_STYLESHEETLIST_ACTIVE_ONLY"
      },
      {
          "name": "JS_STYLE_UNSUPPORTED_PROPERTY_GETTER"
      },
      {
          "name": "JS_STYLE_WORD_SPACING_ACCEPTS_PERCENT"
      },
      {
          "name": "JS_STYLE_WRONG_INDEX_RETURNS_UNDEFINED"
      },
      {
          "name": "JS_SYMBOL"
      },
      {
          "name": "JS_TABLE_CELL_HEIGHT_DOES_NOT_RETURN_NEGATIVE_VALUES"
      },
      {
          "name": "JS_TABLE_CELL_OFFSET_INCLUDES_BORDER"
      },
      {
          "name": "JS_TABLE_CELL_WIDTH_DOES_NOT_RETURN_NEGATIVE_VALUES"
      },
      {
          "name": "JS_TABLE_COLUMN_WIDTH_NO_NEGATIVE_VALUES"
      },
      {
          "name": "JS_TABLE_COLUMN_WIDTH_NULL_STRING"
      },
      {
          "name": "JS_TABLE_ROW_DELETE_CELL_REQUIRES_INDEX"
      },
      {
          "name": "JS_TABLE_SPAN_SET_ZERO_IF_INVALID"
      },
      {
          "name": "JS_TABLE_SPAN_THROWS_EXCEPTION_IF_INVALID"
      },
      {
          "name": "JS_TABLE_VALIGN_SUPPORTS_IE_VALUES"
      },
      {
          "name": "JS_TEXT_AREA_GET_MAXLENGTH_MAX_INT"
      },
      {
          "name": "JS_TEXT_AREA_SET_COLS_NEGATIVE_THROWS_EXCEPTION"
      },
      {
          "name": "JS_TEXT_AREA_SET_COLS_THROWS_EXCEPTION"
      },
      {
          "name": "JS_TEXT_AREA_SET_MAXLENGTH_NEGATIVE_THROWS_EXCEPTION"
      },
      {
          "name": "JS_TEXT_AREA_SET_ROWS_NEGATIVE_THROWS_EXCEPTION"
      },
      {
          "name": "JS_TEXT_AREA_SET_ROWS_THROWS_EXCEPTION"
      },
      {
          "name": "JS_TEXT_AREA_SET_VALUE_NULL"
      },
      {
          "name": "JS_TREEWALKER_EXPAND_ENTITY_REFERENCES_FALSE"
      },
      {
          "name": "JS_TREEWALKER_FILTER_FUNCTION_ONLY"
      },
      {
          "name": "JS_TYPE_ACCEPTS_ARBITRARY_VALUES"
      },
      {
          "name": "JS_URL_SEARCH_PARMS_ITERATOR_SIMPLE_NAME"
      },
      {
          "name": "JS_VALIGN_CONVERTS_TO_LOWERCASE"
      },
      {
          "name": "JS_WEBGL_CONTEXT_EVENT_CONSTANTS"
      },
      {
          "name": "JS_WIDTH_HEIGHT_ACCEPTS_ARBITRARY_VALUES"
      },
      {
          "name": "JS_WINDOW_ACTIVEXOBJECT_HIDDEN"
      },
      {
          "name": "JS_WINDOW_CHANGE_OPENER_ONLY_WINDOW_OBJECT"
      },
      {
          "name": "JS_WINDOW_COMPUTED_STYLE_PSEUDO_ACCEPT_WITHOUT_COLON"
      },
      {
          "name": "JS_WINDOW_FORMFIELDS_ACCESSIBLE_BY_NAME"
      },
      {
          "name": "JS_WINDOW_FRAMES_ACCESSIBLE_BY_ID"
      },
      {
          "name": "JS_WINDOW_FRAME_BY_ID_RETURNS_WINDOW"
      },
      {
          "name": "JS_WINDOW_INSTALL_TRIGGER_NULL"
      },
      {
          "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_131"
      },
      {
          "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_133"
      },
      {
          "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_86"
      },
      {
          "name": "JS_WINDOW_OUTER_INNER_HEIGHT_DIFF_91"
      },
      {
          "name": "JS_WINDOW_SELECTION_NULL_IF_INVISIBLE"
      },
      {
          "name": "JS_WINDOW_TOP_WRITABLE"
      },
      {
          "name": "JS_WORKER_IMPORT_SCRIPTS_ACCEPTS_ALL"
      },
      {
          "name": "JS_XML"
      },
      {
          "name": "JS_XML_GET_ELEMENTS_BY_TAG_NAME_LOCAL"
      },
      {
          "name": "JS_XML_GET_ELEMENT_BY_ID__ANY_ELEMENT"
      },
      {
          "name": "JS_XML_SERIALIZER_BLANK_BEFORE_SELF_CLOSING"
      },
      {
          "name": "JS_XML_SERIALIZER_HTML_DOCUMENT_FRAGMENT_ALWAYS_EMPTY"
      },
      {
          "name": "JS_XML_SERIALIZER_ROOT_CDATA_AS_ESCAPED_TEXT"
      },
      {
          "name": "JS_XML_SUPPORT_VIA_ACTIVEXOBJECT"
      },
      {
          "name": "JS_XSLT_TRANSFORM_INDENT"
      },
      {
          "name": "KEYBOARD_EVENT_SPECIAL_KEYPRESS"
      },
      {
          "name": "KEYGEN_AS_BLOCK"
      },
      {
          "name": "META_X_UA_COMPATIBLE"
      },
      {
          "name": "MULTICOL_BLOCK"
      },
      {
          "name": "PAGE_SELECTION_RANGE_FROM_SELECTABLE_TEXT_INPUT"
      },
      {
          "name": "QUERYSELECTORALL_NOT_IN_QUIRKS"
      },
      {
          "name": "QUERYSELECTOR_CSS3_PSEUDO_REQUIRE_ATTACHED_NODE"
      },
      {
          "name": "RESETINPUT_DEFAULT_VALUE_IF_VALUE_NOT_DEFINED"
      },
      {
          "name": "SLOT_CONTENTS"
      },
      {
          "name": "STRING_INCLUDES"
      },
      {
          "name": "STRING_REPEAT"
      },
      {
          "name": "STRING_STARTS_ENDS_WITH"
      },
      {
          "name": "STRING_TRIM_LEFT_RIGHT"
      },
      {
          "name": "STYLESHEET_ADD_RULE_RETURNS_POS"
      },
      {
          "name": "STYLESHEET_HREF_EMPTY_IS_NULL"
      },
      {
          "name": "SUBMITINPUT_DEFAULT_VALUE_IF_VALUE_NOT_DEFINED"
      },
      {
          "name": "SVG_UNKNOWN_ARE_DOM"
      },
      {
          "name": "URL_ABOUT_BLANK_HAS_BLANK_PATH"
      },
      {
          "name": "URL_AUTH_CREDENTIALS"
      },
      {
          "name": "URL_MINIMAL_QUERY_ENCODING"
      },
      {
          "name": "URL_MISSING_SLASHES"
      },
      {
          "name": "WEBSOCKET_ORIGIN_SET"
      },
      {
          "name": "WINDOW_EXECUTE_EVENTS"
      },
      {
          "name": "XHR_ALL_RESPONSE_HEADERS_APPEND_SEPARATOR"
      },
      {
          "name": "XHR_ALL_RESPONSE_HEADERS_SEPARATE_BY_LF"
      },
      {
          "name": "XHR_FIRE_STATE_OPENED_AGAIN_IN_ASYNC_MODE"
      },
      {
          "name": "XHR_HANDLE_SYNC_NETWORK_ERRORS"
      },
      {
          "name": "XHR_LENGTH_COMPUTABLE"
      },
      {
          "name": "XHR_LOAD_ALWAYS_AFTER_DONE"
      },
      {
          "name": "XHR_LOAD_START_ASYNC"
      },
      {
          "name": "XHR_NO_CROSS_ORIGIN_TO_ABOUT"
      },
      {
          "name": "XHR_OPEN_ALLOW_EMTPY_URL"
      },
      {
          "name": "XHR_PROGRESS_ON_NETWORK_ERROR_ASYNC"
      },
      {
          "name": "XHR_RESPONSE_TEXT_EMPTY_UNSENT"
      },
      {
          "name": "XHR_RESPONSE_TYPE_THROWS_UNSENT"
      },
      {
          "name": "XHR_SEND_IGNORES_BLOB_MIMETYPE_AS_CONTENTTYPE"
      },
      {
          "name": "XHR_SEND_NETWORK_ERROR_IF_ABORTED"
      },
      {
          "name": "XHR_USE_CONTENT_CHARSET"
      },
      {
          "name": "XPATH_SELECTION_NAMESPACES"
      }
  ]
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.ApplicationCache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.AudioScheduledSourceNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.BarProp",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.BatteryManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.BroadcastChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Cache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.CacheStorage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.ClientRect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.ClientRectList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Element",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.External",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.FontFace",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.FontFaceSet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Gamepad",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.GamepadButton",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.History",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.ImageBitmap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Location",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.MessageChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.MessagePort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.MimeType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.MimeTypeArray",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.NamedNodeMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Navigator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Notification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.PerformanceObserver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.PerformanceObserverEntryList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.PermissionStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Permissions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Plugin",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.PluginArray",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.PushManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.PushSubscription",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.PushSubscriptionOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.ReadableStream",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Screen",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.ScreenOrientation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.SharedWorker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.SimpleArray",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Storage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.StorageManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.TextDecoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.TextEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Touch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.TouchList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.URL",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.URLSearchParams",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.WebSocket",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.Window",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.XPathExpression",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.animations.Animation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.animations.AnimationEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.animations.KeyframeEffect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.arrays.Atomics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.CanvasCaptureMediaStreamTrack",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.CanvasGradient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.CanvasPattern",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.CanvasRenderingContext2D",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.ImageBitmapRenderingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.ImageData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.IntersectionObserver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.IntersectionObserverEntry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.Path2D",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.TextMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGL2RenderingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLActiveInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLBuffer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLFramebuffer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLProgram",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLQuery",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLRenderbuffer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLRenderingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLSampler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLShader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLShaderPrecisionFormat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLSync",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLTexture",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLTransformFeedback",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLUniformLocation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.canvas.WebGLVertexArrayObject",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.crypto.Crypto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.crypto.CryptoKey",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.crypto.SubtleCrypto",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSS",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSConditionRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSCounterStyleRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSFontFaceRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSGroupingRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSImportRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSKeyframeRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSKeyframesRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSMediaRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSNamespaceRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSPageRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSRuleList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSStyleDeclaration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSStyleRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSStyleSheet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.CSSSupportsRule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.MediaList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.MediaQueryList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.StyleMedia",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.StyleSheet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.StyleSheetList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.css.WebKitCSSMatrix",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.AbstractList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.Attr",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.CDATASection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.CharacterData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.Comment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.CustomElementRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMError",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMException",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMImplementation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMMatrix",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMMatrixReadOnly",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMPoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMPointReadOnly",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMRectReadOnly",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMStringList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMStringMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DOMTokenList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.Document",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DocumentFragment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.DocumentType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.IdleDeadline",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.MutationObserver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.MutationRecord",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.Node",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.NodeFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.NodeIterator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.NodeList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.ProcessingInstruction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.RadioNodeList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.Range",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.Selection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.ShadowRoot",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.Text",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.TreeWalker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.WebKitMutationObserver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.XPathEvaluator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.XPathNSResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.dom.XPathResult",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.AudioProcessingEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.BeforeInstallPromptEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.BeforeUnloadEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.BlobEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.ClipboardEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.CloseEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.CompositionEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.CustomEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.DeviceMotionEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.DeviceOrientationEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.DragEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.ErrorEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.Event",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.EventSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.EventTarget",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.FocusEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.GamepadEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.HashChangeEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.IDBVersionChangeEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.InputEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.KeyboardEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MIDIConnectionEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MIDIMessageEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MediaEncryptedEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MediaKeyMessageEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MediaQueryListEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MediaStreamEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MediaStreamTrackEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MessageEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MouseEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.MutationEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.OfflineAudioCompletionEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.PageTransitionEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.PointerEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.PopStateEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.PresentationConnectionAvailableEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.PresentationConnectionCloseEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.ProgressEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.PromiseRejectionEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.RTCDataChannelEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.RTCPeerConnectionIceEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.SecurityPolicyViolationEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.SpeechSynthesisEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.StorageEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.TextEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.TouchEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.TrackEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.TransitionEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.UIEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.WebGLContextEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.WebkitSpeechRecognitionError",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.WebkitSpeechRecognitionEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.event.WheelEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.fetch.Headers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.fetch.Request",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.fetch.Response",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.file.Blob",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.file.DataTransferItem",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.file.DataTransferItemList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.file.File",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.file.FileList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.file.FileReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.geo.Geolocation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.Audio",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.DataTransfer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLAllCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLAnchorElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLAreaElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLAudioElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBGSoundElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBRElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBaseElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBlockElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLBodyElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLButtonElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLCanvasElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDListElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDataElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDataListElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDetailsElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDialogElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDirectoryElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDivElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLDocument",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLEmbedElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFieldSetElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFontElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFormControlsCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFormElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFrameElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLFrameSetElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLHRElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLHeadElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLHeadingElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLHtmlElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLIFrameElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLImageElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLInputElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLLIElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLLabelElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLLegendElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLLinkElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLListElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMapElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMarqueeElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMediaElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMenuElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMetaElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLMeterElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLModElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOListElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLObjectElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOptGroupElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOptionElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOptionsCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLOutputElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLParagraphElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLParamElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLPhraseElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLPictureElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLPreElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLProgressElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLQuoteElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLScriptElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLSelectElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLSlotElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLSourceElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLSpanElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLStyleElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableCaptionElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableCellElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableColElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableComponent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableRowElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTableSectionElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTemplateElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTextAreaElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTimeElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTitleElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLTrackElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLUListElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLUnknownElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.HTMLVideoElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.Image",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.Option",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.RowContainer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.html.ValidityState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBCursor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBCursorWithValue",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBDatabase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBIndex",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBKeyRange",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBObjectStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBOpenDBRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.idb.IDBTransaction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.AnalyserNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.AudioBuffer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.AudioBufferSourceNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.AudioContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.AudioDestinationNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.AudioListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.AudioNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.AudioParam",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.BaseAudioContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.BiquadFilterNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.ChannelMergerNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.ChannelSplitterNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.ConstantSourceNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.ConvolverNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.DelayNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.DynamicsCompressorNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.GainNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.IIRFilterNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.InputDeviceCapabilities",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaDeviceInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaDevices",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaElementAudioSourceNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaError",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaKeySession",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaKeyStatusMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaKeySystemAccess",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaKeys",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaRecorder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaStream",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaStreamAudioDestinationNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaStreamAudioSourceNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.MediaStreamTrack",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.OfflineAudioContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.OscillatorNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.PannerNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.PeriodicSyncManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.PeriodicWave",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.RemotePlayback",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.ScriptProcessorNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.SourceBuffer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.SourceBufferList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.StereoPannerNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.TextTrack",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.TextTrackCue",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.TextTrackCueList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.TextTrackList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.TimeRanges",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.VTTCue",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.VideoPlaybackQuality",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.WaveShaperNode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.WebkitMediaStream",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIAccess",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIInput",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIInputMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIOutput",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIOutputMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.midi.MIDIPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.presentation.Presentation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.presentation.PresentationAvailability",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.presentation.PresentationConnection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.presentation.PresentationRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCCertificate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCIceCandidate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCPeerConnection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCSessionDescription",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.rtc.RTCStatsReport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.media.rtc.WebkitRTCPeerConnection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.network.NetworkInformation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.payment.PaymentAddress",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.payment.PaymentRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.payment.PaymentResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.performance.Performance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceEntry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceMark",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceMeasure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceNavigation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceNavigationTiming",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceResourceTiming",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.performance.PerformanceTiming",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.security.Credential",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.security.CredentialsContainer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.security.FederatedCredential",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.security.PasswordCredential",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.speech.SpeechSynthesis",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.speech.SpeechSynthesisErrorEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.speech.SpeechSynthesisUtterance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.speech.WebkitSpeechGrammar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.speech.WebkitSpeechGrammarList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.speech.WebkitSpeechRecognition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAngle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimateElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimateMotionElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimateTransformElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedAngle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedBoolean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedEnumeration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedInteger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedLength",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedLengthList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedNumber",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedNumberList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedPreserveAspectRatio",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedRect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedString",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimatedTransformList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGAnimationElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGCircleElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGClipPathElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGComponentTransferFunctionElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGDefsElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGDescElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGEllipseElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEBlendElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEColorMatrixElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEComponentTransferElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFECompositeElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEConvolveMatrixElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEDiffuseLightingElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEDisplacementMapElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEDistantLightElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEDropShadowElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFloodElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFuncAElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFuncBElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFuncGElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEFuncRElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEGaussianBlurElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEImageElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEMergeElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEMergeNodeElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEMorphologyElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEOffsetElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFEPointLightElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFESpecularLightingElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFESpotLightElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFETileElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFETurbulenceElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGFilterElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGForeignObjectElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGGElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGGeometryElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGGradientElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGGraphicsElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGImageElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGLength",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGLengthList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGLineElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGLinearGradientElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMPathElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMarkerElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMaskElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMatrix",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGMetadataElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGNumber",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGNumberList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPathElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPatternElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPointList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPolygonElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPolylineElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGPreserveAspectRatio",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGRadialGradientElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGRect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGRectElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGSVGElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGScriptElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGSetElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGStopElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGStringList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGStyleElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGSwitchElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGSymbolElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTSpanElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTextContentElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTextElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTextPathElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTextPositioningElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTitleElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTransform",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGTransformList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGUnitTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGUseElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.svg.SVGViewElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.webkitURL",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.worker.ServiceWorker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.worker.ServiceWorkerContainer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.worker.ServiceWorkerRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.worker.SyncManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.worker.Worker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.xml.FormData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.xml.XMLDocument",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.xml.XMLHttpRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.xml.XMLHttpRequestEventTarget",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.xml.XMLHttpRequestUpload",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.xml.XMLSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.javascript.host.xml.XSLTProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgAltGlyph",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgAltGlyphDef",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgAltGlyphItem",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgAnchor",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgAnimate",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgAnimateColor",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgAnimateMotion",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgAnimateTransform",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgCircle",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgClipPath",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgColorProfile",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgCursor",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgDefs",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgDesc",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgEllipse",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeBlend",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeColorMatrix",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeComponentTransfer",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeComposite",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeConvolveMatrix",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeDiffuseLighting",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeDisplacementMap",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeDistantLight",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeFlood",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeFuncA",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeFuncB",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeFuncG",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeFuncR",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeGaussianBlur",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeImage",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeMerge",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeMergeNode",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeMorphology",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeOffset",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFePointLight",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeSpecularLighting",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeSpotLight",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeTile",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFeTurbulence",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFilter",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFont",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFontFace",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFontFaceFormat",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFontFaceName",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFontFaceSrc",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgFontFaceURI",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgForeignObject",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgGlyph",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgGlyphRef",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgGroup",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgHKern",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgImage",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgLine",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgLinearGradient",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgMPath",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgMarker",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgMask",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgMetadata",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgMissingGlyph",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgPath",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgPattern",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgPolygon",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgPolyline",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgRadialGradient",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgRect",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgScript",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgSet",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgStop",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgStyle",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgSwitch",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgSymbol",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgTRef",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgTSpan",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgText",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgTextPath",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgTitle",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgUse",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgVKern",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.gargoylesoftware.htmlunit.svg.SvgView",
  "fields":[{"name":"TAG_NAME"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.Cache"
},
{
  "name":"com.github.benmanes.caffeine.cache.UnboundedLocalCache",
  "fields":[{"name":"refreshes"}]
},
{
    "name": "com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect"
},
    {
        "name": "com.google.common.base.Optional"
    },
    {
        "name": "com.google.common.cache.ElementTypesAreNonnullByDefault",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.google.common.collect.Multimap"
    },
    {
        "name": "com.google.errorprone.annotations.CheckReturnValue",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.google.gson.Gson",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
{
  "name":"com.google.gson.GsonBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.hazelcast.core.Hazelcast"
},
{
  "name":"com.hazelcast.core.HazelcastInstance"
},
{
  "name":"com.hazelcast.spring.cache.HazelcastCache"
},
{
  "name":"com.ibm.icu.text.Collator"
},
{
  "name":"com.ibm.lang.management.OperatingSystemMXBean"
},
{
  "name":"com.ibm.websphere.wsoc$WsWsocServerContainer"
},
{
  "name":"com.ibm.websphere.wsoc.WsWsocServerContainer"
},
{
  "name":"com.mongodb.MongoClientSettings"
},
{
  "name":"com.mongodb.client.MongoClient"
},
{
  "name":"com.mongodb.reactivestreams.client.MongoClient"
},
{
  "name":"com.querydsl.core.types$Predicate"
},
{
  "name":"com.querydsl.core.types.Predicate"
},
{
  "name":"com.rabbitmq.client.Channel"
},
{
  "name":"com.rabbitmq.client.ConnectionFactory"
},
{
  "name":"com.rometools.rome.feed$WireFeed"
},
{
  "name":"com.rometools.rome.feed.WireFeed"
},
{
  "name":"com.samskivert.mustache$Template"
},
{
  "name":"com.samskivert.mustache.Mustache"
},
{
  "name":"com.samskivert.mustache.Template"
},
{
  "name":"com.sendgrid.SendGrid"
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsKeyMaterialGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsPrfGenerator$V12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields": [
      {
          "name": "builder"
      },
      {
          "name": "extAttributes"
      }
  ],
  "methods":[{"name":"getMemoryUsageBeforeGc","parameterTypes":[] }]
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getCpuLoad",
          "parameterTypes": []
      },
      {
          "name": "getProcessCpuLoad",
          "parameterTypes": []
      }
  ]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean"
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.unboundid.ldap.listener.InMemoryDirectoryServer"
},
{
  "name":"com.uwetrottmann.tmdb2.Tmdb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "apiKey",
          "parameterTypes": []
      },
      {
          "name": "apiKey",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "collectionService",
          "parameterTypes": []
      },
      {
          "name": "configurationService",
          "parameterTypes": []
      },
      {
          "name": "discoverMovie",
          "parameterTypes": []
      },
      {
          "name": "discoverService",
          "parameterTypes": []
      },
      {
          "name": "discoverTv",
          "parameterTypes": []
      },
      {
          "name": "findService",
          "parameterTypes": []
      },
      {
          "name": "genreService",
          "parameterTypes": []
      },
      {
          "name": "moviesService",
          "parameterTypes": []
      },
      {
          "name": "personService",
          "parameterTypes": []
      },
      {
          "name": "reviewsService",
          "parameterTypes": []
      },
      {
          "name": "searchService",
          "parameterTypes": []
      },
      {
          "name": "tvEpisodesService",
          "parameterTypes": []
      },
      {
          "name": "tvSeasonsService",
          "parameterTypes": []
      },
      {
          "name": "tvService",
          "parameterTypes": []
      }
  ]
},
{
  "name":"com.wavefront.sdk.common.WavefrontSender"
},
{
  "name":"com.wavefront.sdk.common.application.ApplicationTags"
},
{
  "name":"com.zaxxer.hikari.HikariConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addDataSourceProperty",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object"
          ]
      },
      {
          "name": "addHealthCheckProperty",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "copyStateTo",
          "parameterTypes": [
              "com.zaxxer.hikari.HikariConfig"
          ]
      },
      {
          "name": "getCatalog",
          "parameterTypes": []
      },
      {
          "name": "getConnectionInitSql",
          "parameterTypes": []
      },
      {
          "name": "getConnectionTestQuery",
          "parameterTypes": []
      },
      {
          "name": "getConnectionTimeout",
          "parameterTypes": []
      },
      {
          "name": "getDataSource",
          "parameterTypes": []
      },
      {
          "name": "getDataSourceClassName",
          "parameterTypes": []
      },
      {
          "name": "getDataSourceJNDI",
          "parameterTypes": []
      },
      {
          "name": "getDataSourceProperties",
          "parameterTypes": []
      },
      {
          "name": "getDriverClassName",
          "parameterTypes": []
      },
      {
          "name": "getExceptionOverrideClassName",
          "parameterTypes": []
      },
      {
          "name": "getHealthCheckProperties",
          "parameterTypes": []
      },
      {
          "name": "getHealthCheckRegistry",
          "parameterTypes": []
      },
      {
          "name": "getIdleTimeout",
          "parameterTypes": []
      },
      {
          "name": "getInitializationFailTimeout",
          "parameterTypes": []
      },
      {
          "name": "getJdbcUrl",
          "parameterTypes": []
      },
      {
          "name": "getKeepaliveTime",
          "parameterTypes": []
      },
      {
          "name": "getLeakDetectionThreshold",
          "parameterTypes": []
      },
      {
          "name": "getMaxLifetime",
          "parameterTypes": []
      },
      {
          "name": "getMaximumPoolSize",
          "parameterTypes": []
      },
      {
          "name": "getMetricRegistry",
          "parameterTypes": []
      },
      {
          "name": "getMetricsTrackerFactory",
          "parameterTypes": []
      },
      {
          "name": "getMinimumIdle",
          "parameterTypes": []
      },
      {
          "name": "getPassword",
          "parameterTypes": []
      },
      {
          "name": "getPoolName",
          "parameterTypes": []
      },
      {
          "name": "getScheduledExecutor",
          "parameterTypes": []
      },
      {
          "name": "getSchema",
          "parameterTypes": []
      },
      {
          "name": "getThreadFactory",
          "parameterTypes": []
      },
      {
          "name": "getTransactionIsolation",
          "parameterTypes": []
      },
      {
          "name": "getUsername",
          "parameterTypes": []
      },
      {
          "name": "getValidationTimeout",
          "parameterTypes": []
      },
      {
          "name": "isAllowPoolSuspension",
          "parameterTypes": []
      },
      {
          "name": "isAutoCommit",
          "parameterTypes": []
      },
      {
          "name": "isIsolateInternalQueries",
          "parameterTypes": []
      },
      {
          "name": "isReadOnly",
          "parameterTypes": []
      },
      {
          "name": "isRegisterMbeans",
          "parameterTypes": []
      },
      {
          "name": "setAllowPoolSuspension",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setAutoCommit",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setCatalog",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setConnectionInitSql",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setConnectionTestQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setConnectionTimeout",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "setDataSource",
          "parameterTypes": [
              "javax.sql.DataSource"
          ]
      },
      {
          "name": "setDataSourceClassName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDataSourceJNDI",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDataSourceProperties",
          "parameterTypes": [
              "java.util.Properties"
          ]
      },
      {
          "name": "setDriverClassName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setExceptionOverrideClassName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setHealthCheckProperties",
          "parameterTypes": [
              "java.util.Properties"
          ]
      },
      {
          "name": "setIdleTimeout",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "setInitializationFailTimeout",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "setIsolateInternalQueries",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setJdbcUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setKeepaliveTime",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "setLeakDetectionThreshold",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "setMaxLifetime",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "setMaximumPoolSize",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setMinimumIdle",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setPassword",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPoolName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setReadOnly",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRegisterMbeans",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setScheduledExecutor",
          "parameterTypes": [
              "java.util.concurrent.ScheduledExecutorService"
          ]
      },
      {
          "name": "setSchema",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setThreadFactory",
          "parameterTypes": [
              "java.util.concurrent.ThreadFactory"
          ]
      },
      {
          "name": "setTransactionIsolation",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUsername",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setValidationTimeout",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "validate",
          "parameterTypes": []
      }
  ]
},
{
  "name":"com.zaxxer.hikari.HikariConfigMXBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.zaxxer.hikari.HikariDataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "close",
          "parameterTypes": []
      },
      {
          "name": "getConnection",
          "parameterTypes": []
      },
      {
          "name": "getConnection",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "getLogWriter",
          "parameterTypes": []
      },
      {
          "name": "getLoginTimeout",
          "parameterTypes": []
      },
      {
          "name": "getParentLogger",
          "parameterTypes": []
      },
      {
          "name": "isWrapperFor",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "setHealthCheckRegistry",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setLogWriter",
          "parameterTypes": [
              "java.io.PrintWriter"
          ]
      },
      {
          "name": "setLoginTimeout",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setMetricRegistry",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setMetricsTrackerFactory",
          "parameterTypes": [
              "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      },
      {
          "name": "unwrap",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"com.zaxxer.hikari.pool.HikariProxyConnection",
  "methods":[{"name":"getSchema","parameterTypes":[] }]
},
{
  "name":"float",
  "queryAllDeclaredMethods":true
},
{
  "name":"freemarker.template$Configuration"
},
{
  "name":"freemarker.template.Configuration"
},
{
  "name":"graphql.GraphQL"
},
{
  "name":"groovy.lang$MetaClass"
},
{
  "name":"groovy.lang.MetaClass"
},
{
  "name":"groovy.text$TemplateEngine"
},
{
  "name":"groovy.text.TemplateEngine"
},
{
  "name":"groovy.text.markup.MarkupTemplateEngine"
},
{
  "name":"io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
},
{
  "name":"io.micrometer.appoptics.AppOpticsMeterRegistry"
},
{
  "name":"io.micrometer.atlas.AtlasMeterRegistry"
},
{
  "name":"io.micrometer.common.lang.NonNullApi",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.NonNullFields",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.context$ContextSnapshot"
},
{
  "name":"io.micrometer.context.ContextSnapshot"
},
{
  "name":"io.micrometer.core.annotation.Timed"
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "monotonicTime",
          "parameterTypes": []
      },
      {
          "name": "wallTime",
          "parameterTypes": []
      }
  ]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "clear",
          "parameterTypes": []
      },
      {
          "name": "close",
          "parameterTypes": []
      },
      {
          "name": "config",
          "parameterTypes": []
      },
      {
          "name": "counter",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Iterable"
          ]
      },
      {
          "name": "counter",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String[]"
          ]
      },
      {
          "name": "find",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "forEachMeter",
          "parameterTypes": [
              "java.util.function.Consumer"
          ]
      },
      {
          "name": "gauge",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Iterable",
              "java.lang.Number"
          ]
      },
      {
          "name": "gauge",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Iterable",
              "java.lang.Object",
              "java.util.function.ToDoubleFunction"
          ]
      },
      {
          "name": "gauge",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Number"
          ]
      },
      {
          "name": "gauge",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.util.function.ToDoubleFunction"
          ]
      },
      {
          "name": "gaugeCollectionSize",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Iterable",
              "java.util.Collection"
          ]
      },
      {
          "name": "gaugeMapSize",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Iterable",
              "java.util.Map"
          ]
      },
      {
          "name": "get",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getMeters",
          "parameterTypes": []
      },
      {
          "name": "isClosed",
          "parameterTypes": []
      },
      {
          "name": "more",
          "parameterTypes": []
      },
      {
          "name": "remove",
          "parameterTypes": [
              "io.micrometer.core.instrument.Meter$Id"
          ]
      },
      {
          "name": "remove",
          "parameterTypes": [
              "io.micrometer.core.instrument.Meter"
          ]
      },
      {
          "name": "removeByPreFilterId",
          "parameterTypes": [
              "io.micrometer.core.instrument.Meter$Id"
          ]
      },
      {
          "name": "summary",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Iterable"
          ]
      },
      {
          "name": "summary",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String[]"
          ]
      },
      {
          "name": "timer",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Iterable"
          ]
      },
      {
          "name": "timer",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String[]"
          ]
      }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener"
},
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "bindTo",
          "parameterTypes": [
              "io.micrometer.core.instrument.MeterRegistry"
          ]
      },
      {
          "name": "close",
          "parameterTypes": []
      }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "bindTo",
          "parameterTypes": [
              "io.micrometer.core.instrument.MeterRegistry"
          ]
      },
      {
          "name": "close",
          "parameterTypes": []
      }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "bindTo",
          "parameterTypes": [
              "io.micrometer.core.instrument.MeterRegistry"
          ]
      },
      {
          "name": "close",
          "parameterTypes": []
      }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
},
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "accept",
          "parameterTypes": [
              "io.micrometer.core.instrument.Meter$Id"
          ]
      },
      {
          "name": "configure",
          "parameterTypes": [
              "io.micrometer.core.instrument.Meter$Id",
              "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
          ]
      }
  ]
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"requireValid","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "onEvent",
          "parameterTypes": [
              "io.micrometer.observation.Observation$Event",
              "io.micrometer.observation.Observation$Context"
          ]
      },
      {
          "name": "onStart",
          "parameterTypes": [
              "io.micrometer.observation.Observation$Context"
          ]
      },
      {
          "name": "onStop",
          "parameterTypes": [
              "io.micrometer.observation.Observation$Context"
          ]
      }
  ]
},
{
  "name":"io.micrometer.core.instrument.observation.MeterObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"validate","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.datadog.DatadogMeterRegistry"
},
{
  "name":"io.micrometer.dynatrace.DynatraceMeterRegistry"
},
{
  "name":"io.micrometer.elastic.ElasticMeterRegistry"
},
{
  "name":"io.micrometer.ganglia.GangliaMeterRegistry"
},
{
  "name":"io.micrometer.graphite.GraphiteMeterRegistry"
},
{
  "name":"io.micrometer.humio.HumioMeterRegistry"
},
{
  "name":"io.micrometer.influx.InfluxMeterRegistry"
},
{
  "name":"io.micrometer.jmx.JmxMeterRegistry"
},
{
  "name":"io.micrometer.kairos.KairosMeterRegistry"
},
{
  "name":"io.micrometer.newrelic.NewRelicMeterRegistry"
},
{
  "name":"io.micrometer.observation.Observation"
},
{
  "name":"io.micrometer.observation.ObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "onError",
          "parameterTypes": [
              "io.micrometer.observation.Observation$Context"
          ]
      },
      {
          "name": "onScopeClosed",
          "parameterTypes": [
              "io.micrometer.observation.Observation$Context"
          ]
      },
      {
          "name": "onScopeOpened",
          "parameterTypes": [
              "io.micrometer.observation.Observation$Context"
          ]
      }
  ]
},
{
  "name":"io.micrometer.observation.ObservationRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.SimpleObservationRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getCurrentObservation",
          "parameterTypes": []
      },
      {
          "name": "getCurrentObservationScope",
          "parameterTypes": []
      },
      {
          "name": "isNoop",
          "parameterTypes": []
      },
      {
          "name": "observationConfig",
          "parameterTypes": []
      },
      {
          "name": "setCurrentObservationScope",
          "parameterTypes": [
              "io.micrometer.observation.Observation$Scope"
          ]
      }
  ]
},
{
  "name":"io.micrometer.prometheus.PrometheusMeterRegistry"
},
{
  "name":"io.micrometer.registry.otlp.OtlpMeterRegistry"
},
{
  "name":"io.micrometer.signalfx.SignalFxMeterRegistry"
},
{
  "name":"io.micrometer.stackdriver.StackdriverMeterRegistry"
},
{
  "name":"io.micrometer.statsd.StatsdMeterRegistry"
},
{
  "name":"io.micrometer.tracing.Tracer"
},
{
  "name":"io.micrometer.tracing.otel.bridge.OtelTracer"
},
{
  "name":"io.netty.buffer.PooledByteBufAllocator"
},
{
  "name":"io.netty.util.NettyRuntime"
},
{
  "name":"io.r2dbc.pool.ConnectionPool"
},
{
  "name":"io.r2dbc.spi.ConnectionFactory"
},
{
  "name":"io.reactivex.rxjava3.core$Flowable"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.rsocket.RSocket"
},
{
  "name":"io.rsocket.core.RSocketServer"
},
{
  "name":"io.smallrye.mutiny$Multi"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"io.undertow.Undertow"
},
{
  "name":"io.undertow.websockets.jsr$ServerWebSocketContainer"
},
{
  "name":"io.undertow.websockets.jsr.Bootstrap"
},
{
  "name":"io.undertow.websockets.jsr.ServerWebSocketContainer"
},
{
  "name":"io.vavr.control$Option"
},
{
  "name":"io.vavr.control$Try"
},
{
  "name":"io.vavr.control.Option"
},
{
  "name":"io.vavr.control.Try"
},
{
  "name":"jakarta.activation.MimeType"
},
{
  "name":"jakarta.annotation.ManagedBean"
},
{
  "name":"jakarta.annotation.PostConstruct",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.annotation.PreDestroy",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.ejb$Asynchronous"
},
{
  "name":"jakarta.ejb$EJB"
},
{
  "name":"jakarta.ejb$TransactionAttribute"
},
{
  "name":"jakarta.ejb.Asynchronous"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.ejb.TransactionAttribute"
},
{
  "name":"jakarta.enterprise.concurrent$Asynchronous"
},
{
  "name":"jakarta.enterprise.concurrent$ManagedExecutorService"
},
{
  "name":"jakarta.enterprise.concurrent$ManagedScheduledExecutorService"
},
{
  "name":"jakarta.enterprise.concurrent.Asynchronous"
},
{
  "name":"jakarta.enterprise.concurrent.ManagedExecutorService"
},
{
  "name":"jakarta.enterprise.concurrent.ManagedScheduledExecutorService"
},
{
  "name":"jakarta.faces.context$FacesContext"
},
{
  "name":"jakarta.faces.context.FacesContext"
},
{
  "name":"jakarta.inject.Inject"
},
{
  "name":"jakarta.inject.Named"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.jms.ConnectionFactory"
},
{
  "name":"jakarta.jms.Message"
},
{
  "name":"jakarta.json.bind$Jsonb"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.mail.internet.MimeMessage"
},
{
  "name":"jakarta.persistence.AttributeConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.persistence.Column",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"updatable","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.Convert",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.Converter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.Entity",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.EntityManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "clear",
          "parameterTypes": []
      },
      {
          "name": "close",
          "parameterTypes": []
      },
      {
          "name": "contains",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "createEntityGraph",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "createEntityGraph",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNamedQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNamedQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "createNamedStoredProcedureQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNativeQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNativeQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "createNativeQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaDelete"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaQuery"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaUpdate"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "createStoredProcedureQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createStoredProcedureQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class[]"
          ]
      },
      {
          "name": "createStoredProcedureQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String[]"
          ]
      },
      {
          "name": "detach",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "find",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object"
          ]
      },
      {
          "name": "find",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object",
              "jakarta.persistence.LockModeType"
          ]
      },
      {
          "name": "find",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object",
              "jakarta.persistence.LockModeType",
              "java.util.Map"
          ]
      },
      {
          "name": "find",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object",
              "java.util.Map"
          ]
      },
      {
          "name": "flush",
          "parameterTypes": []
      },
      {
          "name": "getCriteriaBuilder",
          "parameterTypes": []
      },
      {
          "name": "getDelegate",
          "parameterTypes": []
      },
      {
          "name": "getEntityGraph",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getEntityGraphs",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getEntityManagerFactory",
          "parameterTypes": []
      },
      {
          "name": "getFlushMode",
          "parameterTypes": []
      },
      {
          "name": "getLockMode",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getMetamodel",
          "parameterTypes": []
      },
      {
          "name": "getProperties",
          "parameterTypes": []
      },
      {
          "name": "getReference",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object"
          ]
      },
      {
          "name": "getTransaction",
          "parameterTypes": []
      },
      {
          "name": "isJoinedToTransaction",
          "parameterTypes": []
      },
      {
          "name": "isOpen",
          "parameterTypes": []
      },
      {
          "name": "joinTransaction",
          "parameterTypes": []
      },
      {
          "name": "lock",
          "parameterTypes": [
              "java.lang.Object",
              "jakarta.persistence.LockModeType"
          ]
      },
      {
          "name": "lock",
          "parameterTypes": [
              "java.lang.Object",
              "jakarta.persistence.LockModeType",
              "java.util.Map"
          ]
      },
      {
          "name": "merge",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "persist",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "refresh",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "refresh",
          "parameterTypes": [
              "java.lang.Object",
              "jakarta.persistence.LockModeType"
          ]
      },
      {
          "name": "refresh",
          "parameterTypes": [
              "java.lang.Object",
              "jakarta.persistence.LockModeType",
              "java.util.Map"
          ]
      },
      {
          "name": "refresh",
          "parameterTypes": [
              "java.lang.Object",
              "java.util.Map"
          ]
      },
      {
          "name": "remove",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setFlushMode",
          "parameterTypes": [
              "jakarta.persistence.FlushModeType"
          ]
      },
      {
          "name": "setProperty",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object"
          ]
      },
      {
          "name": "unwrap",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"jakarta.persistence.EntityManagerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "addNamedEntityGraph",
          "parameterTypes": [
              "java.lang.String",
              "jakarta.persistence.EntityGraph"
          ]
      },
      {
          "name": "addNamedQuery",
          "parameterTypes": [
              "java.lang.String",
              "jakarta.persistence.Query"
          ]
      },
      {
          "name": "createEntityManager",
          "parameterTypes": []
      },
      {
          "name": "createEntityManager",
          "parameterTypes": [
              "jakarta.persistence.SynchronizationType"
          ]
      },
      {
          "name": "createEntityManager",
          "parameterTypes": [
              "jakarta.persistence.SynchronizationType",
              "java.util.Map"
          ]
      },
      {
          "name": "createEntityManager",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "getCriteriaBuilder",
          "parameterTypes": []
      },
      {
          "name": "getMetamodel",
          "parameterTypes": []
      },
      {
          "name": "getPersistenceUnitUtil",
          "parameterTypes": []
      },
      {
          "name": "getProperties",
          "parameterTypes": []
      },
      {
          "name": "isOpen",
          "parameterTypes": []
      },
      {
          "name": "unwrap",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"jakarta.persistence.Enumerated",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.ForeignKey",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.GeneratedValue",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.Id",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.Index",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.JoinColumn",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.ManyToOne",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "optional",
          "parameterTypes": []
      },
      {
          "name": "targetEntity",
          "parameterTypes": []
      }
  ]
},
{
  "name":"jakarta.persistence.OneToMany",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"targetEntity","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.OneToOne",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "mappedBy",
          "parameterTypes": []
      },
      {
          "name": "targetEntity",
          "parameterTypes": []
      }
  ]
},
{
  "name":"jakarta.persistence.Persistence",
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getPersistenceUtil",
          "parameterTypes": []
      }
  ]
},
{
  "name":"jakarta.persistence.PersistenceContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.PersistenceProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.Query",
  "methods":[{"name":"getParameters","parameterTypes":[] }]
},
{
  "name":"jakarta.persistence.SequenceGenerator",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.Table",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.persistence.UniqueConstraint",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.Filter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.GenericFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.GenericServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getInitParameter",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getInitParameterNames",
          "parameterTypes": []
      },
      {
          "name": "getServletConfig",
          "parameterTypes": []
      },
      {
          "name": "getServletContext",
          "parameterTypes": []
      },
      {
          "name": "getServletInfo",
          "parameterTypes": []
      },
      {
          "name": "log",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "log",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Throwable"
          ]
      }
  ]
},
{
  "name":"jakarta.servlet.MultipartConfigElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.Servlet",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletRegistration"
},
{
  "name":"jakarta.servlet.ServletRequest"
},
{
  "name":"jakarta.servlet.http.HttpServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "init",
          "parameterTypes": [
              "jakarta.servlet.ServletConfig"
          ]
      },
      {
          "name": "service",
          "parameterTypes": [
              "jakarta.servlet.ServletRequest",
              "jakarta.servlet.ServletResponse"
          ]
      }
  ]
},
{
  "name":"jakarta.servlet.http.PushBuilder"
},
{
  "name":"jakarta.transaction.Transaction"
},
{
  "name":"jakarta.transaction.TransactionManager"
},
{
  "name":"jakarta.transaction.Transactional"
},
{
  "name":"jakarta.validation.Constraint",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.ConstraintViolation"
},
{
  "name":"jakarta.validation.Validator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.ValidatorFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.bootstrap.GenericBootstrap"
},
{
  "name":"jakarta.validation.constraints.NotEmpty",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "groups",
          "parameterTypes": []
      },
      {
          "name": "message",
          "parameterTypes": []
      },
      {
          "name": "payload",
          "parameterTypes": []
      }
  ]
},
{
  "name":"jakarta.validation.constraints.NotNull",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "groups",
          "parameterTypes": []
      },
      {
          "name": "message",
          "parameterTypes": []
      },
      {
          "name": "payload",
          "parameterTypes": []
      }
  ]
},
{
  "name":"jakarta.validation.executable.ExecutableValidator"
},
{
  "name":"jakarta.websocket.server.ServerContainer"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"jakarta.xml.bind.annotation.XmlAccessType"
},
{
  "name":"jakarta.xml.bind.annotation.XmlAccessorType",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.xml.bind.annotation.XmlElement",
  "methods":[{"name":"type","parameterTypes":[] }]
},
{
  "name":"jakarta.xml.bind.annotation.XmlNs",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.xml.bind.annotation.XmlNsForm"
},
{
  "name":"jakarta.xml.bind.annotation.XmlRootElement",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.xml.bind.annotation.XmlSchema",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.xml.bind.annotation.XmlSeeAlso",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.xml.bind.annotation.XmlType",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"factoryClass","parameterTypes":[] }]
},
{
  "name":"jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
  "methods": [
      {
          "name": "type",
          "parameterTypes": []
      },
      {
          "name": "value",
          "parameterTypes": []
      }
  ]
},
{
  "name":"jakarta.xml.ws.WebServiceRef"
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getAnnotatedInterfaces",
          "parameterTypes": []
      },
      {
          "name": "getAnnotatedSuperclass",
          "parameterTypes": []
      },
      {
          "name": "getDeclaredMethod",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class[]"
          ]
      },
      {
          "name": "getMethod",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class[]"
          ]
      },
      {
          "name": "getModule",
          "parameterTypes": []
      },
      {
          "name": "getNestHost",
          "parameterTypes": []
      },
      {
          "name": "getNestMembers",
          "parameterTypes": []
      },
      {
          "name": "getPermittedSubclasses",
          "parameterTypes": []
      },
      {
          "name": "getRecordComponents",
          "parameterTypes": []
      },
      {
          "name": "isNestmateOf",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "isRecord",
          "parameterTypes": []
      },
      {
          "name": "isSealed",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.ClassLoader",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "defineClass",
          "parameterTypes": [
              "java.lang.String",
              "byte[]",
              "int",
              "int",
              "java.security.ProtectionDomain"
          ]
      },
      {
          "name": "getUnnamedModule",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.Comparable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "forEach",
          "parameterTypes": [
              "java.util.function.Consumer"
          ]
      },
      {
          "name": "spliterator",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addExports",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Module"
          ]
      },
      {
          "name": "isExported",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "isNamed",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "clone",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getClass",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "notify",
          "parameterTypes": []
      },
      {
          "name": "notifyAll",
          "parameterTypes": []
      },
      {
          "name": "toString",
          "parameterTypes": []
      },
      {
          "name": "wait",
          "parameterTypes": []
      },
      {
          "name": "wait",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "wait",
          "parameterTypes": [
              "long",
              "int"
          ]
      }
  ]
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"major","parameterTypes":[] }]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.System",
  "methods":[{"name":"getSecurityManager","parameterTypes":[] }]
},
{
  "name":"java.lang.Throwable",
  "allDeclaredFields":true
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.WrongThreadException"
},
{
  "name":"java.lang.annotation.Annotation",
  "methods":[{"name":"annotationType","parameterTypes":[] }]
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.constant.Constable",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.invoke.MethodHandles",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods": [
      {
          "name": "defineClass",
          "parameterTypes": [
              "byte[]"
          ]
      },
      {
          "name": "lookupClass",
          "parameterTypes": []
      },
      {
          "name": "lookupModes",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.invoke.TypeDescriptor$OfField",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getLoggerLevel",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getLoggerNames",
          "parameterTypes": []
      },
      {
          "name": "getParentLoggerName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setLoggerLevel",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.AnnotatedArrayType",
  "methods":[{"name":"getAnnotatedGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.AnnotatedParameterizedType",
  "methods":[{"name":"getAnnotatedActualTypeArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedType",
  "methods":[{"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Executable",
  "methods": [
      {
          "name": "getAnnotatedExceptionTypes",
          "parameterTypes": []
      },
      {
          "name": "getAnnotatedParameterTypes",
          "parameterTypes": []
      },
      {
          "name": "getAnnotatedReceiverType",
          "parameterTypes": []
      },
      {
          "name": "getParameterCount",
          "parameterTypes": []
      },
      {
          "name": "getParameters",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Method",
  "methods":[{"name":"getAnnotatedReturnType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods": [
      {
          "name": "getModifiers",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "isNamePresent",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods": [
      {
          "name": "getActualTypeArguments",
          "parameterTypes": []
      },
      {
          "name": "getOwnerType",
          "parameterTypes": []
      },
      {
          "name": "getRawType",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.reflect.Proxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.reflect.Type",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods": [
      {
          "name": "getBounds",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.lang.reflect.WildcardType",
  "methods": [
      {
          "name": "getLowerBounds",
          "parameterTypes": []
      },
      {
          "name": "getUpperBounds",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.UnixDomainSocketAddress",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.nio.channels.ServerSocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.SocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.security.AccessController",
  "methods":[{"name":"doPrivileged","parameterTypes":["java.security.PrivilegedExceptionAction"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.SecureClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.interfaces.ECPrivateKey"
},
{
  "name":"java.security.interfaces.ECPublicKey"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.sql.Connection",
  "methods": [
      {
          "name": "createClob",
          "parameterTypes": []
      },
      {
          "name": "getMetaData",
          "parameterTypes": []
      }
  ]
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Driver"
},
{
  "name":"java.sql.DriverManager"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.sql.Types",
  "allPublicFields":true
},
{
  "name":"java.sql.Wrapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.time.Instant"
},
{
  "name":"java.util.ArrayList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.Enumeration"
},
{
  "name":"java.util.EventListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.HashMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
    "name": "java.util.HashSet"
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.concurrent.Callable",
  "methods":[{"name":"call","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.Executor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.concurrent.ScheduledExecutorService"
},
{
  "name":"java.util.concurrent.ThreadFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.Supplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.SimpleFormatter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javafx.beans.value.ObservableValue"
},
{
  "name":"javax.annotation$PostConstruct"
},
{
  "name":"javax.annotation.Nonnull",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.PostConstruct"
},
{
  "name":"javax.annotation.meta.TypeQualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.cache$Cache"
},
{
  "name":"javax.cache.Cache"
},
{
  "name":"javax.cache.CacheManager"
},
{
  "name":"javax.inject$Inject"
},
{
  "name":"javax.inject.Inject"
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.money$MonetaryAmount"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.naming.Referenceable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getReference","parameterTypes":[] }]
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"javax.sql.CommonDataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createShardingKeyBuilder","parameterTypes":[] }]
},
{
  "name":"javax.sql.DataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createConnectionBuilder","parameterTypes":[] }]
},
{
  "name":"javax.sql.XADataSource"
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"kotlin.Metadata"
},
{
  "name":"kotlin.coroutines.Continuation"
},
{
  "name":"kotlin.reflect.full$KClasses"
},
{
  "name":"kotlin.reflect.full.KClasses"
},
{
  "name":"kotlinx.coroutines.reactor$MonoKt"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor$Cbor"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json$Json"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf$ProtoBuf"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"liquibase.change.DatabaseChange"
},
{
  "name":"liquibase.integration.spring.SpringLiquibase"
},
{
  "name":"net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.AllArguments",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "includeSelf",
          "parameterTypes": []
      },
      {
          "name": "nullIfEmpty",
          "parameterTypes": []
      },
      {
          "name": "value",
          "parameterTypes": []
      }
  ]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Argument",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.BindingPriority",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Default",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "declaringType",
          "parameterTypes": []
      },
      {
          "name": "value",
          "parameterTypes": []
      }
  ]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Origin",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "cache",
          "parameterTypes": []
      },
      {
          "name": "privileged",
          "parameterTypes": []
      }
  ]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.StubValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Super",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.This",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.utility.Invoker",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.Invoker$Dispatcher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.logstash.logback.encoder.LogstashEncoder",
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setIncludeContext",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"net.sf.jsqlparser.parser.JSqlParser"
},
{
  "name":"net.sourceforge.htmlunit.corejs.javascript.ScriptableObject",
  "methods":[{"name":"getExternalArrayLength","parameterTypes":[] }]
},
{
  "name":"nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect"
},
{
  "name":"oracle.jdbc.OracleConnection"
},
{
  "name":"oracle.ucp.jdbc.PoolDataSource"
},
{
  "name":"oracle.ucp.jdbc.PoolDataSourceImpl"
},
{
  "name":"org.aopalliance.aop.Advice",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.Interceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.MethodInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.catalina.Manager"
},
{
  "name":"org.apache.catalina.core.ApplicationContextFacade",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addFilter",
          "parameterTypes": [
              "java.lang.String",
              "jakarta.servlet.Filter"
          ]
      },
      {
          "name": "addFilter",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "addFilter",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "addJspFile",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "addListener",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "addListener",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "addListener",
          "parameterTypes": [
              "java.util.EventListener"
          ]
      },
      {
          "name": "addServlet",
          "parameterTypes": [
              "java.lang.String",
              "jakarta.servlet.Servlet"
          ]
      },
      {
          "name": "addServlet",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "addServlet",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "createFilter",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "createListener",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "createServlet",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "declareRoles",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      },
      {
          "name": "getAttribute",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getAttributeNames",
          "parameterTypes": []
      },
      {
          "name": "getClassLoader",
          "parameterTypes": []
      },
      {
          "name": "getContext",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getContextPath",
          "parameterTypes": []
      },
      {
          "name": "getDefaultSessionTrackingModes",
          "parameterTypes": []
      },
      {
          "name": "getEffectiveMajorVersion",
          "parameterTypes": []
      },
      {
          "name": "getEffectiveMinorVersion",
          "parameterTypes": []
      },
      {
          "name": "getEffectiveSessionTrackingModes",
          "parameterTypes": []
      },
      {
          "name": "getFilterRegistration",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getFilterRegistrations",
          "parameterTypes": []
      },
      {
          "name": "getInitParameter",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getInitParameterNames",
          "parameterTypes": []
      },
      {
          "name": "getJspConfigDescriptor",
          "parameterTypes": []
      },
      {
          "name": "getMajorVersion",
          "parameterTypes": []
      },
      {
          "name": "getMimeType",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getMinorVersion",
          "parameterTypes": []
      },
      {
          "name": "getNamedDispatcher",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getRealPath",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getRequestCharacterEncoding",
          "parameterTypes": []
      },
      {
          "name": "getRequestDispatcher",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getResource",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getResourceAsStream",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getResourcePaths",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getResponseCharacterEncoding",
          "parameterTypes": []
      },
      {
          "name": "getServerInfo",
          "parameterTypes": []
      },
      {
          "name": "getServletContextName",
          "parameterTypes": []
      },
      {
          "name": "getServletRegistration",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getServletRegistrations",
          "parameterTypes": []
      },
      {
          "name": "getSessionCookieConfig",
          "parameterTypes": []
      },
      {
          "name": "getSessionTimeout",
          "parameterTypes": []
      },
      {
          "name": "getVirtualServerName",
          "parameterTypes": []
      },
      {
          "name": "log",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "log",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Throwable"
          ]
      },
      {
          "name": "removeAttribute",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setAttribute",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object"
          ]
      },
      {
          "name": "setInitParameter",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "setRequestCharacterEncoding",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setResponseCharacterEncoding",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSessionTimeout",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setSessionTrackingModes",
          "parameterTypes": [
              "java.util.Set"
          ]
      }
  ]
},
{
  "name":"org.apache.catalina.loader.JdbcLeakPrevention",
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "clearJdbcDriverRegistrations",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.apache.catalina.startup.Tomcat"
},
{
  "name":"org.apache.catalina.util.CharsetMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.dbcp2.BasicDataSource"
},
{
  "name":"org.apache.coyote.AbstractProtocol",
  "methods": [
      {
          "name": "getAddress",
          "parameterTypes": []
      },
      {
          "name": "getLocalPort",
          "parameterTypes": []
      },
      {
          "name": "setPort",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setProperty",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.apache.coyote.UpgradeProtocol"
},
{
  "name":"org.apache.coyote.http11.AbstractHttp11Protocol",
  "methods":[{"name":"isSSLEnabled","parameterTypes":[] }]
},
{
  "name":"org.apache.coyote.http11.Http11NioProtocol",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.http.impl.client.HttpClientBuilder",
  "fields": [
      {
          "name": "connTimeToLive"
      },
      {
          "name": "connTimeToLiveTimeUnit"
      },
      {
          "name": "defaultConnectionConfig"
      },
      {
          "name": "defaultSocketConfig"
      },
      {
          "name": "dnsResolver"
      },
      {
          "name": "hostnameVerifier"
      },
      {
          "name": "maxConnPerRoute"
      },
      {
          "name": "maxConnTotal"
      },
      {
          "name": "publicSuffixMatcher"
      },
      {
          "name": "sslContext"
      },
      {
          "name": "sslSocketFactory"
      },
      {
          "name": "systemProperties"
      }
  ]
},
{
  "name":"org.apache.logging.log4j.core.LoggerContext"
},
{
  "name":"org.apache.logging.log4j.core.impl$Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.tomcat.jdbc.pool.DataSource"
},
{
  "name":"org.apache.tomcat.util.net.AbstractEndpoint",
  "methods":[{"name":"setBindOnInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.apache.tomcat.util.net.NioEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsFilter",
  "queryAllDeclaredMethods":true
},
{
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
},
{
  "name":"org.apache.tomcat.websocket.server.WsSci"
},
{
  "name":"org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.xerces.parsers.XIncludeAwareParserConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.cache2k.Cache2kBuilder"
},
{
  "name":"org.cache2k.extra.micrometer.Cache2kCacheMetrics"
},
{
  "name":"org.cache2k.extra.spring.SpringCache2kCache"
},
{
  "name":"org.eclipse.collections.api.list$ImmutableList"
},
{
  "name":"org.eclipse.collections.api.list.ImmutableList"
},
{
  "name":"org.eclipse.core.runtime$FileLocator"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.eclipse.jetty.server.Server"
},
{
  "name":"org.eclipse.jetty.util.Loader"
},
{
  "name":"org.eclipse.jetty.webapp.WebAppContext"
},
{
  "name":"org.eclipse.jetty.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
},
{
  "name":"org.eclipse.jetty.websocket.server$JettyWebSocketServerContainer"
},
{
  "name":"org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer"
},
{
  "name":"org.eclipse.persistence.internal.jpa.deployment$JavaSECMPInitializerAgent"
},
{
  "name":"org.eclipse.persistence.internal.jpa.deployment.JavaSECMPInitializerAgent"
},
{
  "name":"org.elasticsearch.client.RestClient"
},
{
  "name":"org.elasticsearch.client.RestClientBuilder"
},
{
  "name":"org.flywaydb.core.Flyway",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jaxb.core.v2.model.nav.ReflectionNavigator",
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.glassfish.jaxb.runtime.v2.runtime.property.ArrayElementLeafProperty",
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jaxb.runtime.v2.runtime.property.ArrayElementNodeProperty",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl","org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"] }]
},
{
  "name":"org.glassfish.jaxb.runtime.v2.runtime.property.ArrayReferenceNodeProperty",
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jaxb.runtime.v2.runtime.property.SingleElementLeafProperty",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl","org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"] }]
},
{
  "name":"org.glassfish.jaxb.runtime.v2.runtime.property.SingleElementNodeProperty",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl","org.glassfish.jaxb.runtime.v2.model.runtime.RuntimeElementPropertyInfo"] }]
},
{
  "name":"org.glassfish.jaxb.runtime.v2.runtime.property.SingleMapNodeProperty",
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jaxb.runtime.v2.runtime.property.SingleReferenceNodeProperty",
  "queryAllPublicConstructors":true
},
{
  "name":"org.glassfish.jersey.server.ResourceConfig"
},
{
  "name":"org.glassfish.jersey.server.spring.SpringComponentProvider"
},
{
  "name":"org.glassfish.tyrus.servlet$TyrusHttpUpgradeHandler"
},
{
  "name":"org.glassfish.tyrus.servlet.TyrusHttpUpgradeHandler"
},
{
  "name":"org.graalvm.nativeimage.ImageInfo",
  "methods":[{"name":"inImageCode","parameterTypes":[] }]
},
{
  "name":"org.h2.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.jdbc.JdbcClob"
},
{
  "name":"org.h2.jdbc.JdbcLob",
  "methods":[{"name":"free","parameterTypes":[] }]
},
{
  "name":"org.h2.server.web.JakartaWebServlet"
},
{
  "name":"org.hibernate.Session",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "clear",
          "parameterTypes": []
      },
      {
          "name": "createEntityGraph",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "createEntityGraph",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNamedQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNamedQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaDelete"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaQuery"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaUpdate"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "detach",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "flush",
          "parameterTypes": []
      },
      {
          "name": "getEntityGraph",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getEntityGraphs",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getFlushMode",
          "parameterTypes": []
      },
      {
          "name": "getReference",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object"
          ]
      },
      {
          "name": "load",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object"
          ]
      },
      {
          "name": "merge",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "persist",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "refresh",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "remove",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setFlushMode",
          "parameterTypes": [
              "jakarta.persistence.FlushModeType"
          ]
      }
  ]
},
{
  "name":"org.hibernate.SessionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "close",
          "parameterTypes": []
      },
      {
          "name": "getCache",
          "parameterTypes": []
      },
      {
          "name": "openSession",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.hibernate.SharedSessionContract",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "beginTransaction",
          "parameterTypes": []
      },
      {
          "name": "close",
          "parameterTypes": []
      },
      {
          "name": "createNamedStoredProcedureQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createStoredProcedureCall",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createStoredProcedureCall",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class[]"
          ]
      },
      {
          "name": "createStoredProcedureCall",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String[]"
          ]
      },
      {
          "name": "createStoredProcedureQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createStoredProcedureQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class[]"
          ]
      },
      {
          "name": "createStoredProcedureQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String[]"
          ]
      },
      {
          "name": "doReturningWork",
          "parameterTypes": [
              "org.hibernate.jdbc.ReturningWork"
          ]
      },
      {
          "name": "doWork",
          "parameterTypes": [
              "org.hibernate.jdbc.Work"
          ]
      },
      {
          "name": "getCriteriaBuilder",
          "parameterTypes": []
      },
      {
          "name": "getJdbcBatchSize",
          "parameterTypes": []
      },
      {
          "name": "getNamedProcedureCall",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getTenantIdentifier",
          "parameterTypes": []
      },
      {
          "name": "getTransaction",
          "parameterTypes": []
      },
      {
          "name": "isConnected",
          "parameterTypes": []
      },
      {
          "name": "isOpen",
          "parameterTypes": []
      },
      {
          "name": "setJdbcBatchSize",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      }
  ]
},
{
  "name":"org.hibernate.annotations.GenericGenerator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.hibernate.annotations.LazyCollection",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.hibernate.annotations.OnDelete",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.hibernate.annotations.Parameter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.hibernate.boot.archive.scan.internal.DisabledScanner",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en"
},
{
  "name":"org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en_US"
},
{
  "name":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.DisabledCaching",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.NoCachingRegionFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.cfg.beanvalidation.TypeSafeActivator",
  "methods":[{"name":"activate","parameterTypes":["org.hibernate.cfg.beanvalidation.ActivationContext"] }]
},
{
  "name":"org.hibernate.engine.config.internal.ConfigurationServiceImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
  "queryAllPublicMethods":true,
  "methods":[{"name":"setJndiService","parameterTypes":["org.hibernate.engine.jndi.spi.JndiService"] }]
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
  "queryAllPublicMethods":true
},
    {
        "name": "org.hibernate.engine.jndi.internal.JndiServiceImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.spi.PrimeAmongSecondarySupertypes",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.hibernate.engine.spi.SessionImplementor"
    },
    {
        "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.event.spi.EventType",
        "allDeclaredFields": true
},
{
  "name":"org.hibernate.id.Assigned",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.enhanced.NoopOptimizer",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","int"] }]
},
{
  "name":"org.hibernate.id.enhanced.PooledOptimizer",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","int"] }]
},
{
  "name":"org.hibernate.id.enhanced.SequenceStyleGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.enhanced.StandardNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger_en"
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger_en_US"
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger_en"
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger_en_US"
},
{
  "name":"org.hibernate.internal.log.DeprecationLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.log.DeprecationLogger_$logger_en"
},
{
  "name":"org.hibernate.internal.log.DeprecationLogger_$logger_en_US"
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger_en"
},
{
  "name":"org.hibernate.metamodel.mapping.MappingModelCreationLogger_$logger_en_US"
},
{
  "name":"org.hibernate.metamodel.model.domain.JpaMetamodel"
},
{
  "name":"org.hibernate.persister.collection.BasicCollectionPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.Collection","org.hibernate.cache.spi.access.CollectionDataAccess","org.hibernate.metamodel.spi.RuntimeModelCreationContext"] }]
},
{
  "name":"org.hibernate.persister.entity.SingleTableEntityPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.PersistentClass","org.hibernate.cache.spi.access.EntityDataAccess","org.hibernate.cache.spi.access.NaturalIdDataAccess","org.hibernate.metamodel.spi.RuntimeModelCreationContext"] }]
},
{
  "name":"org.hibernate.persister.internal.PersisterFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.persister.internal.StandardPersisterClassResolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.proxy.HibernateProxy",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "getHibernateLazyInitializer",
          "parameterTypes": []
      },
      {
          "name": "writeReplace",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.hibernate.query.Query",
  "methods": [
      {
          "name": "getResultList",
          "parameterTypes": []
      },
      {
          "name": "getSingleResult",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.hibernate.query.QueryLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.query.QueryLogging_$logger_en"
},
{
  "name":"org.hibernate.query.QueryLogging_$logger_en_US"
},
{
  "name":"org.hibernate.query.QueryProducer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "createMutationQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaDelete"
          ]
      },
      {
          "name": "createMutationQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaUpdate"
          ]
      },
      {
          "name": "createMutationQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createMutationQuery",
          "parameterTypes": [
              "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
          ]
      },
      {
          "name": "createNamedMutationQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNamedSelectionQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNamedSelectionQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "createNativeMutationQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNativeQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createNativeQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "createNativeQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class",
              "java.lang.String"
          ]
      },
      {
          "name": "createNativeQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "createNativeQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "createSelectionQuery",
          "parameterTypes": [
              "jakarta.persistence.criteria.CriteriaQuery"
          ]
      },
      {
          "name": "createSelectionQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "createSelectionQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "getNamedNativeQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getNamedNativeQuery",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "getNamedQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.hibernate.query.TypedParameterValue"
},
{
  "name":"org.hibernate.query.hql.HqlLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.query.hql.HqlLogging_$logger_en"
},
{
  "name":"org.hibernate.query.hql.HqlLogging_$logger_en_US"
},
{
  "name":"org.hibernate.resource.beans.container.spi.BeanContainer"
},
{
  "name":"org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en_US"
},
{
  "name":"org.hibernate.sql.exec.SqlExecLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.exec.SqlExecLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.exec.SqlExecLogger_$logger_en_US"
},
{
  "name":"org.hibernate.sql.results.LoadingLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.results.LoadingLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.results.LoadingLogger_$logger_en_US"
},
{
  "name":"org.hibernate.sql.results.ResultsLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.sql.results.ResultsLogger_$logger_en"
},
{
  "name":"org.hibernate.sql.results.ResultsLogger_$logger_en_US"
},
{
  "name":"org.hibernate.stat.HibernateMetrics"
},
{
  "name":"org.hibernate.stat.internal.StatisticsImpl",
  "queryAllPublicMethods":true
},
{
  "name":"org.hibernate.type.SqlTypes",
  "allPublicFields":true
},
{
  "name":"org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCharSequence",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
  "methods":[{"name":"externalClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.hibernate.validator.internal.engine.ConfigurationImpl"
},
{
  "name":"org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_en"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
    {
        "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
    },
    {
        "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
    },
    {
        "name": "org.influxdb.InfluxDB"
    },
    {
        "name": "org.javers.core.JaversCore",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.diff.DiffFactory",
                    "org.javers.core.metamodel.type.TypeMapper",
                    "org.javers.core.json.JsonConverter",
                    "org.javers.core.commit.CommitFactory",
                    "org.javers.repository.api.JaversExtendedRepository",
                    "org.javers.repository.jql.QueryRunner",
                    "org.javers.core.metamodel.object.GlobalIdFactory",
                    "org.javers.core.CoreConfiguration"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.commit.CommitFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.diff.DiffFactory",
                    "org.javers.repository.api.JaversExtendedRepository",
                    "org.javers.common.date.DateProvider",
                    "org.javers.core.graph.LiveGraphFactory",
                    "org.javers.core.snapshot.SnapshotFactory",
                    "org.javers.core.snapshot.SnapshotGraphFactory",
                    "org.javers.core.snapshot.ChangedCdoSnapshotsFactory",
                    "org.javers.core.commit.CommitIdFactory"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.commit.CommitIdFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.CoreConfiguration",
                    "org.javers.repository.api.JaversExtendedRepository",
                    "org.javers.core.commit.CommitSeqGenerator",
                    "org.javers.core.commit.DistributedCommitSeqGenerator"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.commit.CommitSeqGenerator",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.commit.DistributedCommitSeqGenerator",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.diff.DiffFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper",
                    "java.util.List",
                    "java.util.List",
                    "org.javers.core.graph.LiveGraphFactory",
                    "org.javers.core.CoreConfiguration"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.ArrayChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.diff.appenders.MapChangeAppender"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.CollectionAsListChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.diff.appenders.MapChangeAppender"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.MapChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.NewObjectAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.ObjectRemovedAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.OptionalChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.ReferenceChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.SetChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.SimpleListChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.diff.appenders.MapChangeAppender"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.diff.appenders.ValueChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.graph.CollectionsCdoFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.scanner.ClassScanner",
                    "org.javers.core.graph.TailoredJaversMemberFactory",
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.graph.LiveCdoFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.object.GlobalIdFactory",
                    "org.javers.core.graph.ObjectAccessHook",
                    "org.javers.core.metamodel.type.TypeMapper",
                    "org.javers.core.graph.ObjectHasher"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.graph.LiveGraphFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper",
                    "org.javers.core.graph.LiveCdoFactory",
                    "org.javers.core.graph.CollectionsCdoFactory"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.graph.ObjectAccessHookDoNothingImpl",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.graph.ObjectHasher",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.snapshot.SnapshotFactory",
                    "org.javers.core.json.JsonConverter"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.graph.TailoredJaversFieldFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.json.JsonConverterBuilder",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.ArrayChangeTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.ChangeTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.ListChangeTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.MapChangeTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.NewObjectTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.ObjectRemovedTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.ReferenceChangeTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.SetChangeTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.change.ValueChangeTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.commit.CdoSnapshotStateTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.commit.CdoSnapshotTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.commit.CommitIdTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.commit.CommitMetadataTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.commit.GlobalIdTypeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.json.typeadapter.commit.JsonElementFakeAdapter",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.annotation.DiffIgnore",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.javers.core.metamodel.object.GlobalIdFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper",
                    "org.javers.core.graph.ObjectAccessHook"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.scanner.AnnotationNamesProvider",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.scanner.ClassAnnotationsScanner",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.scanner.AnnotationNamesProvider"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.scanner.ClassScanner",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.scanner.PropertyScanner",
                    "org.javers.core.metamodel.scanner.ClassAnnotationsScanner"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.scanner.FieldBasedPropertyScanner",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.scanner.AnnotationNamesProvider"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.type.ListType",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.reflect.Type",
                    "org.javers.core.metamodel.type.TypeMapperLazy"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.type.MapType",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.reflect.Type",
                    "org.javers.core.metamodel.type.TypeMapperLazy"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.type.PrimitiveType",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.reflect.Type"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.metamodel.type.TypeMapper",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.scanner.ClassScanner",
                    "org.javers.core.CoreConfiguration",
                    "org.javers.core.metamodel.type.DynamicMappingStrategy"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.snapshot.ChangedCdoSnapshotsFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.snapshot.SnapshotFactory"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.snapshot.SnapshotDiffer",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.diff.DiffFactory",
                    "org.javers.core.CoreConfiguration"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.snapshot.SnapshotFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.core.snapshot.SnapshotGraphFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.repository.api.JaversExtendedRepository"
                ]
            }
        ]
    },
    {
        "name": "org.javers.guava.MultimapChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.javers.guava.MultisetChangeAppender",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.javers.repository.api.JaversExtendedRepository",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.repository.api.JaversRepository",
                    "org.javers.core.snapshot.SnapshotDiffer"
                ]
            }
        ]
    },
    {
        "name": "org.javers.repository.jql.ChangesQueryRunner",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.repository.jql.QueryCompiler",
                    "org.javers.repository.api.JaversExtendedRepository"
                ]
            }
        ]
    },
    {
        "name": "org.javers.repository.jql.QueryCompiler",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.metamodel.object.GlobalIdFactory",
                    "org.javers.core.metamodel.type.TypeMapper",
                    "org.javers.core.CoreConfiguration"
                ]
            }
        ]
    },
    {
        "name": "org.javers.repository.jql.QueryRunner",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.repository.jql.ChangesQueryRunner",
                    "org.javers.repository.jql.SnapshotQueryRunner",
                    "org.javers.repository.jql.ShadowStreamQueryRunner"
                ]
            }
        ]
    },
    {
        "name": "org.javers.repository.jql.ShadowQueryRunner",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.repository.jql.SnapshotQueryRunner",
                    "org.javers.repository.api.JaversExtendedRepository",
                    "org.javers.shadow.ShadowFactory",
                    "org.javers.core.CoreConfiguration"
                ]
            }
        ]
    },
    {
        "name": "org.javers.repository.jql.ShadowStreamQueryRunner",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.repository.jql.ShadowQueryRunner",
                    "org.javers.repository.jql.QueryCompiler"
                ]
            }
        ]
    },
    {
        "name": "org.javers.repository.jql.SnapshotQueryRunner",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.repository.jql.QueryCompiler",
                    "org.javers.core.metamodel.object.GlobalIdFactory",
                    "org.javers.repository.api.JaversExtendedRepository"
                ]
            }
        ]
    },
    {
        "name": "org.javers.shadow.ShadowFactory",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.javers.core.json.JsonConverter",
                    "org.javers.core.metamodel.type.TypeMapper"
                ]
            }
        ]
    },
    {
        "name": "org.jboss.logging.Logger"
    },
    {
        "name": "org.jmolecules.ddd.annotation$Identity"
    },
    {
        "name": "org.jmolecules.ddd.annotation.Identity"
    },
    {
        "name": "org.jmolecules.ddd.types$Association"
    },
    {
        "name": "org.jmolecules.ddd.types.Association"
    },
    {
        "name": "org.joda.time.LocalDate"
    },
    {
        "name": "org.joda.time.ReadableInstant"
    },
    {
        "name": "org.jooq.DSLContext"
    },
    {
        "name": "org.locationtech.jts.geom.Geometry"
    },
    {
        "name": "org.neo4j.driver.Driver"
},
{
  "name":"org.nzbhydra.DevEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.DevEndpoint$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.GenericResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "getMessage",
          "parameterTypes": []
      },
      {
          "name": "isSuccessful",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.InstanceCounter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "downloadInstanceCounter",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.NzbHydra",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "getCacheManager",
          "parameterTypes": []
      },
      {
          "name": "loadBaseConfig",
          "parameterTypes": []
      },
      {
          "name": "main",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      },
      {
          "name": "startupDone",
          "parameterTypes": [
              "org.springframework.boot.context.event.ApplicationReadyEvent"
          ]
      },
      {
          "name": "warnIfSettingsOverwritten",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.NzbHydraNativeEntrypoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "main",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.NzbHydraNativeEntrypoint$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "CGLIB$SET_THREAD_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.api.CapsGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.api.CategoryConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "convertToDatabaseColumn",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "convertToEntityAttribute",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setCategoryProvider",
          "parameterTypes": [
              "org.nzbhydra.searching.CategoryProvider"
          ]
      }
  ]
},
    {
        "name": "org.nzbhydra.api.ExternalApi",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "api",
                "parameterTypes": [
                    "org.nzbhydra.mapping.newznab.NewznabParameters",
                    "java.lang.String",
                    "java.lang.String"
                ]
            },
            {
                "name": "handler",
                "parameterTypes": [
                    "org.nzbhydra.api.ExternalApiException"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.api.MockSearch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.api.NewznabJsonTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.api.NewznabXmlTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.api.stats.ExternalApiStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.auth.AsyncSupportFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.auth.AuthAndAccessEventHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "handle",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "org.springframework.security.access.AccessDeniedException"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.auth.AuthWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.auth.HydraAnonymousAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigProvider"
          ]
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "doFilter",
          "parameterTypes": [
              "jakarta.servlet.ServletRequest",
              "jakarta.servlet.ServletResponse",
              "jakarta.servlet.FilterChain"
          ]
      },
      {
          "name": "getAuthorities",
          "parameterTypes": []
      },
      {
          "name": "getPrincipal",
          "parameterTypes": []
      },
      {
          "name": "handleConfigChangedEvent",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      },
      {
          "name": "setAuthenticationDetailsSource",
          "parameterTypes": [
              "org.springframework.security.authentication.AuthenticationDetailsSource"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.auth.HydraEmbeddedServletContainer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.boot.web.server.WebServerFactory"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "methodSecurityMetadataSource",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "CGLIB$SET_THREAD_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "methodSecurityInterceptor",
          "parameterTypes": [
              "org.springframework.security.access.method.MethodSecurityMetadataSource"
          ]
      },
      {
          "name": "methodSecurityMetadataSource",
          "parameterTypes": []
      },
      {
          "name": "preInvocationAuthorizationAdvice",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.auth.HydraUserDetailsManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.nzbhydra.config.BaseConfig"
          ]
      },
      {
          "name": "changePassword",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "createUser",
          "parameterTypes": [
              "org.springframework.security.core.userdetails.UserDetails"
          ]
      },
      {
          "name": "deleteUser",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "handleConfigChangedEvent",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      },
      {
          "name": "loadUserByUsername",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "updateUser",
          "parameterTypes": [
              "org.springframework.security.core.userdetails.UserDetails"
          ]
      },
      {
          "name": "userExists",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.auth.LoginAndAccessAttemptService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.auth.PersistentLoginsEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getSeries",
          "parameterTypes": []
      },
      {
          "name": "setSeries",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.auth.PersistentLoginsEntity_"
},
{
  "name":"org.nzbhydra.auth.SecurityConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "authManager",
          "parameterTypes": [
              "org.springframework.security.config.annotation.web.builders.HttpSecurity"
          ]
      },
      {
          "name": "defaultHttpFirewall",
          "parameterTypes": []
      },
      {
          "name": "filterChain",
          "parameterTypes": [
              "org.springframework.security.config.annotation.web.builders.HttpSecurity",
              "org.springframework.security.authentication.AuthenticationManager"
          ]
      },
      {
          "name": "handleNewConfig",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "CGLIB$SET_THREAD_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "authManager",
          "parameterTypes": [
              "org.springframework.security.config.annotation.web.builders.HttpSecurity"
          ]
      },
      {
          "name": "defaultHttpFirewall",
          "parameterTypes": []
      },
      {
          "name": "filterChain",
          "parameterTypes": [
              "org.springframework.security.config.annotation.web.builders.HttpSecurity",
              "org.springframework.security.authentication.AuthenticationManager"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.auth.SecurityConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.auth.UserInfosProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.backup.BackupAndRestore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "init",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.backup.BackupAndRestore$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
    {
  "name":"org.nzbhydra.backup.BackupTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "createBackup",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.backup.BackupWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.backup.BackupWeb$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
    "methods": [
        {
            "name": "CGLIB$SET_THREAD_CALLBACKS",
            "parameterTypes": [
                "org.springframework.cglib.proxy.Callback[]"
            ]
        }
    ]
},
    {
        "name": "org.nzbhydra.config.BaseConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "equals",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "getAuth",
                "parameterTypes": []
            },
            {
                "name": "getCategoriesConfig",
                "parameterTypes": []
            },
            {
                "name": "getDownloading",
                "parameterTypes": []
            },
            {
                "name": "getGenericStorage",
                "parameterTypes": []
            },
            {
                "name": "getIndexers",
                "parameterTypes": []
            },
            {
                "name": "getMain",
                "parameterTypes": []
            },
            {
                "name": "getNotificationConfig",
                "parameterTypes": []
            },
            {
                "name": "getSearching",
                "parameterTypes": []
            },
            {
                "name": "hashCode",
                "parameterTypes": []
            },
            {
                "name": "setAuth",
                "parameterTypes": [
                    "org.nzbhydra.config.auth.AuthConfig"
                ]
            },
            {
                "name": "setCategoriesConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.category.CategoriesConfig"
                ]
            },
            {
                "name": "setDownloading",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.DownloadingConfig"
                ]
            },
            {
                "name": "setGenericStorage",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setIndexers",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setMain",
                "parameterTypes": [
                    "org.nzbhydra.config.MainConfig"
                ]
            },
            {
                "name": "setNotificationConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.NotificationConfig"
                ]
            },
            {
                "name": "setSearching",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchingConfig"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.BaseConfigHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "init",
                "parameterTypes": []
            },
            {
                "name": "onShutdown",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.ConfigProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "handleNewConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.ConfigChangedEvent"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.config.ConfigSpringConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "categoriesConfig",
          "parameterTypes": []
      },
      {
          "name": "downloaderConfig",
          "parameterTypes": []
      },
      {
          "name": "mainConfig",
          "parameterTypes": []
      },
      {
          "name": "searchingConfig",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "CGLIB$SET_THREAD_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.config.ConfigSpringConfiguration$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.config.ConfigWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getConfig",
          "parameterTypes": [
              "jakarta.servlet.http.HttpSession"
          ]
      },
      {
          "name": "setConfig",
          "parameterTypes": [
              "org.nzbhydra.config.BaseConfig"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.FileSystemBrowser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.config.HistoryUserInfoType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.nzbhydra.config.LoggingConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getConsolelevel",
          "parameterTypes": []
      },
      {
          "name": "getHistoryUserInfoType",
          "parameterTypes": []
      },
      {
          "name": "getLogMaxHistory",
          "parameterTypes": []
      },
      {
          "name": "getLogfilelevel",
          "parameterTypes": []
      },
      {
          "name": "getMarkersToLog",
          "parameterTypes": []
      },
      {
          "name": "isLogGc",
          "parameterTypes": []
      },
      {
          "name": "isLogIpAddresses",
          "parameterTypes": []
      },
      {
          "name": "isLogUsername",
          "parameterTypes": []
      },
      {
          "name": "isMapIpToHost",
          "parameterTypes": []
      },
      {
          "name": "setConsolelevel",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setHistoryUserInfoType",
          "parameterTypes": [
              "org.nzbhydra.config.HistoryUserInfoType"
          ]
      },
      {
          "name": "setLogGc",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setLogIpAddresses",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setLogMaxHistory",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setLogUsername",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setLogfilelevel",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setMapIpToHost",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setMarkersToLog",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.MainConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getApiKey",
          "parameterTypes": []
      },
      {
          "name": "getBackupEveryXDays",
          "parameterTypes": []
      },
      {
          "name": "getBackupFolder",
          "parameterTypes": []
      },
      {
          "name": "getConfigVersion",
          "parameterTypes": []
      },
      {
          "name": "getDatabaseCompactTime",
          "parameterTypes": []
      },
      {
          "name": "getDatabaseRetentionTime",
          "parameterTypes": []
      },
      {
          "name": "getDatabaseWriteDelay",
          "parameterTypes": []
      },
      {
          "name": "getDeleteBackupsAfterWeeks",
          "parameterTypes": []
      },
      {
          "name": "getDereferer",
          "parameterTypes": []
      },
      {
          "name": "getHost",
          "parameterTypes": []
      },
      {
          "name": "getKeepHistoryForWeeks",
          "parameterTypes": []
      },
      {
          "name": "getKeepStatsForWeeks",
          "parameterTypes": []
      },
      {
          "name": "getLogging",
          "parameterTypes": []
      },
      {
          "name": "getPort",
          "parameterTypes": []
      },
      {
          "name": "getProxyHost",
          "parameterTypes": []
      },
      {
          "name": "getProxyIgnoreDomains",
          "parameterTypes": []
      },
      {
          "name": "getProxyPassword",
          "parameterTypes": []
      },
      {
          "name": "getProxyPort",
          "parameterTypes": []
      },
      {
          "name": "getProxyType",
          "parameterTypes": []
      },
      {
          "name": "getProxyUsername",
          "parameterTypes": []
      },
      {
          "name": "getRepositoryBase",
          "parameterTypes": []
      },
      {
          "name": "getSniDisabledFor",
          "parameterTypes": []
      },
      {
          "name": "getSslKeyStore",
          "parameterTypes": []
      },
      {
          "name": "getSslKeyStorePassword",
          "parameterTypes": []
      },
      {
          "name": "getTheme",
          "parameterTypes": []
      },
      {
          "name": "getUrlBase",
          "parameterTypes": []
      },
      {
          "name": "getVerifySslDisabledFor",
          "parameterTypes": []
      },
      {
          "name": "getXmx",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "isBackupBeforeUpdate",
          "parameterTypes": []
      },
      {
          "name": "isDisableSslLocally",
          "parameterTypes": []
      },
      {
          "name": "isInstanceCounterDownloaded",
          "parameterTypes": []
      },
      {
          "name": "isKeepHistory",
          "parameterTypes": []
      },
      {
          "name": "isProxyIgnoreLocal",
          "parameterTypes": []
      },
      {
          "name": "isShowNews",
          "parameterTypes": []
      },
      {
          "name": "isShowUpdateBannerOnUpdatedExternally",
          "parameterTypes": []
      },
      {
          "name": "isShowWhatsNewBanner",
          "parameterTypes": []
      },
      {
          "name": "isShutdownForRestart",
          "parameterTypes": []
      },
      {
          "name": "isSsl",
          "parameterTypes": []
      },
      {
          "name": "isStartupBrowser",
          "parameterTypes": []
      },
      {
          "name": "isUpdateAutomatically",
          "parameterTypes": []
      },
      {
          "name": "isUpdateCheckEnabled",
          "parameterTypes": []
      },
      {
          "name": "isUpdateToPrereleases",
          "parameterTypes": []
      },
      {
          "name": "isUseCsrf",
          "parameterTypes": []
      },
      {
          "name": "isVerifySsl",
          "parameterTypes": []
      },
      {
          "name": "isWelcomeShown",
          "parameterTypes": []
      },
      {
          "name": "setApiKey",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setBackupBeforeUpdate",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setBackupEveryXDays",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setBackupFolder",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setConfigVersion",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setDatabaseCompactTime",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setDatabaseRetentionTime",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setDatabaseWriteDelay",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setDeleteBackupsAfterWeeks",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setDereferer",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDisableSslLocally",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setHost",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setInstanceCounterDownloaded",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setKeepHistory",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setKeepHistoryForWeeks",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setKeepStatsForWeeks",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setLogging",
          "parameterTypes": [
              "org.nzbhydra.config.LoggingConfig"
          ]
      },
      {
          "name": "setPort",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setProxyHost",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setProxyIgnoreDomains",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setProxyIgnoreLocal",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setProxyPassword",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setProxyPort",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setProxyType",
          "parameterTypes": [
              "org.nzbhydra.config.ProxyType"
          ]
      },
      {
          "name": "setProxyUsername",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setRepositoryBase",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setShowNews",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setShowUpdateBannerOnUpdatedExternally",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setShowWhatsNewBanner",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setShutdownForRestart",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setSniDisabledFor",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setSsl",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setSslKeyStore",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSslKeyStorePassword",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setStartupBrowser",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setTheme",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUpdateAutomatically",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUpdateCheckEnabled",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUpdateToPrereleases",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUrlBase",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUseCsrf",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setVerifySsl",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setVerifySslDisabledFor",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setWelcomeShown",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setXmx",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.config.NotificationConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getAppriseApiUrl",
          "parameterTypes": []
      },
      {
          "name": "getAppriseCliPath",
          "parameterTypes": []
      },
      {
          "name": "getAppriseType",
          "parameterTypes": []
      },
      {
          "name": "getDisplayNotificationsMax",
          "parameterTypes": []
      },
      {
          "name": "getEntries",
          "parameterTypes": []
      },
      {
          "name": "getFilterOuts",
          "parameterTypes": []
      },
      {
          "name": "isDisplayNotifications",
          "parameterTypes": []
      },
      {
          "name": "setAppriseApiUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setAppriseCliPath",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setAppriseType",
          "parameterTypes": [
              "org.nzbhydra.config.NotificationConfig$AppriseType"
          ]
      },
      {
          "name": "setDisplayNotifications",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setDisplayNotificationsMax",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setEntries",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setFilterOuts",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.NotificationConfig$AppriseType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
    {
        "name": "org.nzbhydra.config.NotificationConfigEntry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.config.NotificationConfigEntry$MessageType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.ProxyType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.RestartRequired",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.SearchSourceRestriction",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
{
  "name":"org.nzbhydra.config.SearchingConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getAlwaysConvertIds",
          "parameterTypes": []
      },
      {
          "name": "getApplyRestrictions",
          "parameterTypes": []
      },
      {
          "name": "getCoverSize",
          "parameterTypes": []
      },
      {
          "name": "getCustomMappings",
          "parameterTypes": []
      },
      {
          "name": "getCustomQuickFilterButtons",
          "parameterTypes": []
      },
      {
          "name": "getDuplicateAgeThreshold",
          "parameterTypes": []
      },
      {
          "name": "getDuplicateSizeThresholdInPercent",
          "parameterTypes": []
      },
      {
          "name": "getForbiddenGroups",
          "parameterTypes": []
      },
      {
          "name": "getForbiddenPosters",
          "parameterTypes": []
      },
      {
          "name": "getForbiddenRegex",
          "parameterTypes": []
      },
      {
          "name": "getForbiddenWords",
          "parameterTypes": []
      },
      {
          "name": "getGenerateQueries",
          "parameterTypes": []
      },
      {
          "name": "getGenerateQueriesFormat",
          "parameterTypes": []
      },
      {
          "name": "getGlobalCacheTimeMinutes",
          "parameterTypes": []
      },
      {
          "name": "getIdFallbackToQueryGeneration",
          "parameterTypes": []
      },
      {
          "name": "getKeepSearchResultsForDays",
          "parameterTypes": []
      },
      {
          "name": "getLanguage",
          "parameterTypes": []
      },
      {
          "name": "getLanguagesToKeep",
          "parameterTypes": []
      },
      {
          "name": "getLoadLimitInternal",
          "parameterTypes": []
      },
      {
          "name": "getMaxAge",
          "parameterTypes": []
      },
      {
          "name": "getMinSeeders",
          "parameterTypes": []
      },
      {
          "name": "getPreselectQuickFilterButtons",
          "parameterTypes": []
      },
      {
          "name": "getRemoveTrailing",
          "parameterTypes": []
      },
      {
          "name": "getRequiredRegex",
          "parameterTypes": []
      },
      {
          "name": "getRequiredWords",
          "parameterTypes": []
      },
      {
          "name": "getTimeout",
          "parameterTypes": []
      },
      {
          "name": "getUserAgent",
          "parameterTypes": []
      },
      {
          "name": "getUserAgents",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "isAlwaysShowQuickFilterButtons",
          "parameterTypes": []
      },
      {
          "name": "isIgnoreLoadLimitingForInternalSearches",
          "parameterTypes": []
      },
      {
          "name": "isIgnorePassworded",
          "parameterTypes": []
      },
      {
          "name": "isIgnoreTemporarilyDisabled",
          "parameterTypes": []
      },
      {
          "name": "isLoadAllCachedOnInternal",
          "parameterTypes": []
      },
      {
          "name": "isReplaceUmlauts",
          "parameterTypes": []
      },
      {
          "name": "isSendTorznabCategories",
          "parameterTypes": []
      },
      {
          "name": "isShowQuickFilterButtons",
          "parameterTypes": []
      },
      {
          "name": "isTransformNewznabCategories",
          "parameterTypes": []
      },
      {
          "name": "isUseOriginalCategories",
          "parameterTypes": []
      },
      {
          "name": "isWrapApiErrors",
          "parameterTypes": []
      },
      {
          "name": "setAlwaysConvertIds",
          "parameterTypes": [
              "org.nzbhydra.config.SearchSourceRestriction"
          ]
      },
      {
          "name": "setAlwaysShowQuickFilterButtons",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setApplyRestrictions",
          "parameterTypes": [
              "org.nzbhydra.config.SearchSourceRestriction"
          ]
      },
      {
          "name": "setCoverSize",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setCustomMappings",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setCustomQuickFilterButtons",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setDuplicateAgeThreshold",
          "parameterTypes": [
              "float"
          ]
      },
      {
          "name": "setDuplicateSizeThresholdInPercent",
          "parameterTypes": [
              "float"
          ]
      },
      {
          "name": "setForbiddenGroups",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setForbiddenPosters",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setForbiddenRegex",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setForbiddenWords",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setGenerateQueries",
          "parameterTypes": [
              "org.nzbhydra.config.SearchSourceRestriction"
          ]
      },
      {
          "name": "setGenerateQueriesFormat",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.QueryFormat"
          ]
      },
      {
          "name": "setGlobalCacheTimeMinutes",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setIdFallbackToQueryGeneration",
          "parameterTypes": [
              "org.nzbhydra.config.SearchSourceRestriction"
          ]
      },
      {
          "name": "setIgnoreLoadLimitingForInternalSearches",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setIgnorePassworded",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setIgnoreTemporarilyDisabled",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setKeepSearchResultsForDays",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setLanguage",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setLanguagesToKeep",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setLoadAllCachedOnInternal",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setLoadLimitInternal",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setMaxAge",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setMinSeeders",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setPreselectQuickFilterButtons",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setRemoveTrailing",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setReplaceUmlauts",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRequiredRegex",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setRequiredWords",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setSendTorznabCategories",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setShowQuickFilterButtons",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setTimeout",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setTransformNewznabCategories",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUseOriginalCategories",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUserAgent",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUserAgents",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setWrapApiErrors",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.config.auth.AuthConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getAuthHeader",
          "parameterTypes": []
      },
      {
          "name": "getAuthHeaderIpRanges",
          "parameterTypes": []
      },
      {
          "name": "getAuthType",
          "parameterTypes": []
      },
      {
          "name": "getRememberMeValidityDays",
          "parameterTypes": []
      },
      {
          "name": "getUsers",
          "parameterTypes": []
      },
      {
          "name": "isAllowApiStats",
          "parameterTypes": []
      },
      {
          "name": "isRememberUsers",
          "parameterTypes": []
      },
      {
          "name": "isRestrictAdmin",
          "parameterTypes": []
      },
      {
          "name": "isRestrictDetailsDl",
          "parameterTypes": []
      },
      {
          "name": "isRestrictIndexerSelection",
          "parameterTypes": []
      },
      {
          "name": "isRestrictSearch",
          "parameterTypes": []
      },
      {
          "name": "isRestrictStats",
          "parameterTypes": []
      },
      {
          "name": "setAllowApiStats",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setAuthHeader",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setAuthHeaderIpRanges",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setAuthType",
          "parameterTypes": [
              "org.nzbhydra.config.auth.AuthType"
          ]
      },
      {
          "name": "setRememberMeValidityDays",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setRememberUsers",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRestrictAdmin",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRestrictDetailsDl",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRestrictIndexerSelection",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRestrictSearch",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRestrictStats",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUsers",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.auth.AuthType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.nzbhydra.config.auth.UserAuthConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
    "queryAllDeclaredConstructors": true
},
{
  "name":"org.nzbhydra.config.category.CategoriesConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getCategories",
          "parameterTypes": []
      },
      {
          "name": "getDefaultCategory",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "isEnableCategorySizes",
          "parameterTypes": []
      },
      {
          "name": "setCategories",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setDefaultCategory",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setEnableCategorySizes",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.config.category.Category",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getApplyRestrictionsType",
          "parameterTypes": []
      },
      {
          "name": "getDescription",
          "parameterTypes": []
      },
      {
          "name": "getForbiddenRegex",
          "parameterTypes": []
      },
      {
          "name": "getForbiddenWords",
          "parameterTypes": []
      },
      {
          "name": "getIgnoreResultsFrom",
          "parameterTypes": []
      },
      {
          "name": "getMaxSizePreset",
          "parameterTypes": []
      },
      {
          "name": "getMinSizePreset",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "getNewznabCategories",
          "parameterTypes": []
      },
      {
          "name": "getRequiredRegex",
          "parameterTypes": []
      },
      {
          "name": "getRequiredWords",
          "parameterTypes": []
      },
      {
          "name": "getSearchType",
          "parameterTypes": []
      },
      {
          "name": "getSubtype",
          "parameterTypes": []
      },
      {
          "name": "isApplySizeLimitsToApi",
          "parameterTypes": []
      },
      {
          "name": "isMayBeSelected",
          "parameterTypes": []
      },
      {
          "name": "isPreselect",
          "parameterTypes": []
      },
      {
          "name": "setApplyRestrictionsType",
          "parameterTypes": [
              "org.nzbhydra.config.SearchSourceRestriction"
          ]
      },
      {
          "name": "setApplySizeLimitsToApi",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setDescription",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setForbiddenRegex",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setForbiddenWords",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setIgnoreResultsFrom",
          "parameterTypes": [
              "org.nzbhydra.config.SearchSourceRestriction"
          ]
      },
      {
          "name": "setMaxSizePreset",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setMayBeSelected",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setMinSizePreset",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setNewznabCategories",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setPreselect",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRequiredRegex",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setRequiredWords",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setSearchType",
          "parameterTypes": [
              "org.nzbhydra.config.searching.SearchType"
          ]
      },
      {
          "name": "setSubtype",
          "parameterTypes": [
              "org.nzbhydra.config.category.Category$Subtype"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.category.Category$Subtype",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
    {
        "name": "org.nzbhydra.config.category.NewznabCategoriesDeserializer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "deserialize",
                "parameterTypes": [
                    "com.fasterxml.jackson.core.JsonParser",
                    "com.fasterxml.jackson.databind.DeserializationContext"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.config.category.NewznabCategoriesSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "serialize",
          "parameterTypes": [
              "java.lang.Object",
              "com.fasterxml.jackson.core.JsonGenerator",
              "com.fasterxml.jackson.databind.SerializerProvider"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.downloading.DownloadType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.nzbhydra.config.downloading.DownloaderConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getApiKey",
          "parameterTypes": []
      },
      {
          "name": "getDefaultCategory",
          "parameterTypes": []
      },
      {
          "name": "getDownloadType",
          "parameterTypes": []
      },
      {
          "name": "getDownloaderType",
          "parameterTypes": []
      },
      {
          "name": "getIconCssClass",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "getNzbAddingType",
          "parameterTypes": []
      },
      {
          "name": "getPassword",
          "parameterTypes": []
      },
      {
          "name": "getUrl",
          "parameterTypes": []
      },
      {
          "name": "getUsername",
          "parameterTypes": []
      },
      {
          "name": "isAddPaused",
          "parameterTypes": []
      },
      {
          "name": "isEnabled",
          "parameterTypes": []
      },
      {
          "name": "setAddPaused",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setApiKey",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDefaultCategory",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDownloadType",
          "parameterTypes": [
              "org.nzbhydra.config.downloading.DownloadType"
          ]
      },
      {
          "name": "setDownloaderType",
          "parameterTypes": [
              "org.nzbhydra.downloading.DownloaderType"
          ]
      },
      {
          "name": "setEnabled",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setIconCssClass",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setNzbAddingType",
          "parameterTypes": [
              "org.nzbhydra.config.downloading.NzbAddingType"
          ]
      },
      {
          "name": "setPassword",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUsername",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.downloading.DownloadingConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getDownloaders",
          "parameterTypes": []
      },
      {
          "name": "getExternalUrl",
          "parameterTypes": []
      },
      {
          "name": "getFallbackForFailed",
          "parameterTypes": []
      },
      {
          "name": "getNzbAccessType",
          "parameterTypes": []
      },
      {
          "name": "getPrimaryDownloader",
          "parameterTypes": []
      },
      {
          "name": "getSaveNzbsTo",
          "parameterTypes": []
      },
      {
          "name": "getSaveTorrentsTo",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "isSendMagnetLinks",
          "parameterTypes": []
      },
      {
          "name": "isShowDownloaderStatus",
          "parameterTypes": []
      },
      {
          "name": "isUpdateStatuses",
          "parameterTypes": []
      },
      {
          "name": "setDownloaders",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setExternalUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setFallbackForFailed",
          "parameterTypes": [
              "org.nzbhydra.config.SearchSourceRestriction"
          ]
      },
      {
          "name": "setNzbAccessType",
          "parameterTypes": [
              "org.nzbhydra.config.downloading.FileDownloadAccessType"
          ]
      },
      {
          "name": "setPrimaryDownloader",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSaveNzbsTo",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSaveTorrentsTo",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSendMagnetLinks",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setShowDownloaderStatus",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUpdateStatuses",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.config.downloading.FileDownloadAccessType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.nzbhydra.config.downloading.NzbAddingType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
    {
        "name": "org.nzbhydra.config.indexer.BackendType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
{
  "name":"org.nzbhydra.config.indexer.IndexerCategoryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getAnime",
          "parameterTypes": []
      },
      {
          "name": "getAudiobook",
          "parameterTypes": []
      },
      {
          "name": "getCategories",
          "parameterTypes": []
      },
      {
          "name": "getComic",
          "parameterTypes": []
      },
      {
          "name": "getEbook",
          "parameterTypes": []
      },
      {
          "name": "getMagazine",
          "parameterTypes": []
      },
      {
          "name": "setAnime",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setAudiobook",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setCategories",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setComic",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setEbook",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setMagazine",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.indexer.IndexerCategoryConfig$MainCategory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "getSubCategories",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSubCategories",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.indexer.IndexerCategoryConfig$SubCategory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.config.indexer.IndexerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getApiKey",
          "parameterTypes": []
      },
      {
          "name": "getApiPath",
          "parameterTypes": []
      },
      {
          "name": "getBackend",
          "parameterTypes": []
      },
      {
          "name": "getCategoryMapping",
          "parameterTypes": []
      },
      {
          "name": "getColor",
          "parameterTypes": []
      },
      {
          "name": "getCustomParameters",
          "parameterTypes": []
      },
      {
          "name": "getDisabledAt",
          "parameterTypes": []
      },
      {
          "name": "getDisabledLevel",
          "parameterTypes": []
      },
      {
          "name": "getDisabledUntil",
          "parameterTypes": []
      },
      {
          "name": "getDownloadLimit",
          "parameterTypes": []
      },
      {
          "name": "getEnabledCategories",
          "parameterTypes": []
      },
      {
          "name": "getEnabledForSearchSource",
          "parameterTypes": []
      },
      {
          "name": "getGeneralMinSize",
          "parameterTypes": []
      },
      {
          "name": "getHitLimit",
          "parameterTypes": []
      },
      {
          "name": "getHitLimitResetTime",
          "parameterTypes": []
      },
      {
          "name": "getHost",
          "parameterTypes": []
      },
      {
          "name": "getLastError",
          "parameterTypes": []
      },
      {
          "name": "getLoadLimitOnRandom",
          "parameterTypes": []
      },
      {
          "name": "getMinSeeders",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "getPassword",
          "parameterTypes": []
      },
      {
          "name": "getSchedule",
          "parameterTypes": []
      },
      {
          "name": "getScore",
          "parameterTypes": []
      },
      {
          "name": "getSearchModuleType",
          "parameterTypes": []
      },
      {
          "name": "getState",
          "parameterTypes": []
      },
      {
          "name": "getSupportedSearchIds",
          "parameterTypes": []
      },
      {
          "name": "getSupportedSearchTypes",
          "parameterTypes": []
      },
      {
          "name": "getTimeout",
          "parameterTypes": []
      },
      {
          "name": "getUserAgent",
          "parameterTypes": []
      },
      {
          "name": "getUsername",
          "parameterTypes": []
      },
      {
          "name": "getVipExpirationDate",
          "parameterTypes": []
      },
      {
          "name": "isAllCapsChecked",
          "parameterTypes": []
      },
      {
          "name": "isConfigComplete",
          "parameterTypes": []
      },
      {
          "name": "isPreselect",
          "parameterTypes": []
      },
      {
          "name": "isShowOnSearch",
          "parameterTypes": []
      },
      {
          "name": "setAllCapsChecked",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setApiKey",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setApiPath",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setBackend",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.BackendType"
          ]
      },
      {
          "name": "setCategoryMapping",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerCategoryConfig"
          ]
      },
      {
          "name": "setColor",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setConfigComplete",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setCustomParameters",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setDisabledAt",
          "parameterTypes": [
              "java.time.Instant"
          ]
      },
      {
          "name": "setDisabledLevel",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setDisabledUntil",
          "parameterTypes": [
              "java.lang.Long"
          ]
      },
      {
          "name": "setDownloadLimit",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setEnabledCategories",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setEnabledForSearchSource",
          "parameterTypes": [
              "org.nzbhydra.config.SearchSourceRestriction"
          ]
      },
      {
          "name": "setGeneralMinSize",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setHitLimit",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setHitLimitResetTime",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setHost",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setLastError",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setLoadLimitOnRandom",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setMinSeeders",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPassword",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPreselect",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setSchedule",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setScore",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setSearchModuleType",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.SearchModuleType"
          ]
      },
      {
          "name": "setShowOnSearch",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setState",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerConfig$State"
          ]
      },
      {
          "name": "setSupportedSearchIds",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setSupportedSearchTypes",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setTimeout",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setUserAgent",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUsername",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setVipExpirationDate",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
    {
        "name": "org.nzbhydra.config.indexer.IndexerConfig$State",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.indexer.QueryFormat",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.indexer.SearchModuleType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.mediainfo.MediaIdType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.notification.NotificationEventType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.searching.AffectedValue",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.searching.CustomQueryAndTitleMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.config.searching.SearchType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.sensitive.SensitiveData",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.validation.AuthConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            },
            {
                "name": "updateAfterLoading",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
},
    {
        "name": "org.nzbhydra.config.validation.BaseConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "initializeNewConfig",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            },
            {
                "name": "updateAfterLoading",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.CategoriesConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.ConfigValidationResult",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getErrorMessages",
                "parameterTypes": []
            },
            {
                "name": "getNewConfig",
                "parameterTypes": []
            },
            {
                "name": "getWarningMessages",
                "parameterTypes": []
            },
            {
                "name": "isOk",
                "parameterTypes": []
            },
            {
                "name": "isRestartNeeded",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.ConfigValidator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "initializeNewConfig",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            },
            {
                "name": "updateAfterLoading",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.DownloaderConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.DownloadingConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.IndexerConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.LoggingConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.MainConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "initializeNewConfig",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.NotificationConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.SearchingConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.validation.UserAuthConfigValidator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "doesValidate",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            },
            {
                "name": "updateAfterLoading",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.database.H2DialectExtended",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo"] }]
},
{
  "name":"org.nzbhydra.debuginfos.DebugInfosProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getDebugInfosAsZip",
          "parameterTypes": []
      },
      {
          "name": "logMetrics",
          "parameterTypes": []
      },
      {
          "name": "logThreadDump",
          "parameterTypes": []
      }
  ]
},
    {
        "name": "org.nzbhydra.debuginfos.DebugInfosProvider$$SpringCGLIB$$0",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "methods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.debuginfos.DebugInfosProvider$DiffableCategoriesConfig",
        "allDeclaredFields": true
    },
    {
        "name": "org.nzbhydra.debuginfos.DebugInfosWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "createAndProvideDebugInfos",
                "parameterTypes": []
            },
            {
                "name": "downloadLogFile",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getCurrentLogFile",
                "parameterTypes": []
            },
            {
                "name": "getLogFilenames",
                "parameterTypes": []
            },
            {
                "name": "logThreadDump",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.AddFilesRequest",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setCategory",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDownloaderName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSearchResults",
                "parameterTypes": [
                    "java.util.List"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.AddFilesRequest$SearchResult",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setMappedCategory",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setOriginalCategory",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSearchResultId",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.DownloadStatusUpdater",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "checkHistoryStatus",
                "parameterTypes": []
            },
            {
                "name": "checkQueueStatus",
                "parameterTypes": []
            },
            {
                "name": "onNzbDownloadEvent",
                "parameterTypes": [
                    "org.nzbhydra.downloading.FileDownloadEvent"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$SpringCGLIB$$0",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "methods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.DownloaderType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.FileDownloadEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "equals",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "getId",
                "parameterTypes": []
            },
            {
                "name": "setId",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
},
{
  "name":"org.nzbhydra.downloading.FileDownloadEntity_"
},
{
  "name":"org.nzbhydra.downloading.FileDownloadRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.downloading.FileDownloadStatus"
},
{
  "name":"org.nzbhydra.downloading.FileHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getDownloadLinkForResults",
          "parameterTypes": [
              "java.lang.Long",
              "boolean",
              "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
          ]
      },
      {
          "name": "getDownloadLinkForSendingToDownloader",
          "parameterTypes": [
              "java.lang.Long",
              "boolean",
              "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
          ]
      },
      {
          "name": "getFileByGuid",
          "parameterTypes": [
              "long",
              "org.nzbhydra.searching.searchrequests.SearchSource"
          ]
      },
      {
          "name": "getFilesAsZip",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "getTemporaryZipFiles",
          "parameterTypes": []
      },
      {
          "name": "saveNzbToBlackhole",
          "parameterTypes": [
              "java.lang.Long"
          ]
      }
  ]
},
    {
        "name": "org.nzbhydra.downloading.FileHandler$$SpringCGLIB$$0",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "methods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.FileZipResponse",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getAddedIds",
                "parameterTypes": []
            },
            {
                "name": "getMessage",
                "parameterTypes": []
            },
            {
                "name": "getMissedIds",
                "parameterTypes": []
            },
            {
                "name": "getZipFilepath",
                "parameterTypes": []
            },
            {
                "name": "isSuccessful",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.IndexerSpecificDownloadExceptions",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "onNzbDownloadEvent",
                "parameterTypes": [
                    "org.nzbhydra.downloading.FileDownloadEvent"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.downloading.IndexerUniquenessScoreSaver$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
    {
        "name": "org.nzbhydra.downloading.downloaders.AddNzbsResponse",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getAddedIds",
                "parameterTypes": []
            },
            {
                "name": "getMessage",
                "parameterTypes": []
            },
            {
                "name": "getMissedIds",
                "parameterTypes": []
            },
            {
                "name": "isSuccessful",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderInstatiator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "handleNewConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.ConfigChangedEvent"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getDownloadRateFormatted",
                "parameterTypes": []
            },
            {
                "name": "getDownloadRateInKilobytes",
                "parameterTypes": []
            },
            {
                "name": "getDownloaderName",
                "parameterTypes": []
            },
            {
                "name": "getDownloaderType",
                "parameterTypes": []
            },
            {
                "name": "getDownloadingRatesInKilobytes",
                "parameterTypes": []
            },
            {
                "name": "getDownloadingTitle",
                "parameterTypes": []
            },
            {
                "name": "getDownloadingTitlePercentFinished",
                "parameterTypes": []
            },
            {
                "name": "getDownloadingTitleRemainingSizeFormatted",
                "parameterTypes": []
            },
            {
                "name": "getDownloadingTitleRemainingTimeFormatted",
                "parameterTypes": []
            },
            {
                "name": "getElementsInQueue",
                "parameterTypes": []
            },
            {
                "name": "getLastDownloadRate",
                "parameterTypes": []
            },
            {
                "name": "getRemainingSeconds",
                "parameterTypes": []
            },
            {
                "name": "getRemainingSizeFormatted",
                "parameterTypes": []
            },
            {
                "name": "getRemainingSizeInMegaBytes",
                "parameterTypes": []
            },
            {
                "name": "getRemainingTimeFormatted",
                "parameterTypes": []
            },
            {
                "name": "getState",
                "parameterTypes": []
            },
            {
                "name": "getUrl",
                "parameterTypes": []
            },
            {
                "name": "isLastUpdateForNow",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus$State",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderStatusRetrieval",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "addNzb",
                "parameterTypes": [
                    "org.nzbhydra.downloading.AddFilesRequest"
                ]
            },
            {
                "name": "checkConnection",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.DownloaderConfig"
                ]
            },
            {
                "name": "getStatus",
                "parameterTypes": []
            }
        ]
    },
{
  "name":"org.nzbhydra.downloading.downloaders.DownloaderWebSocket",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "handleNewConfig",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      },
      {
          "name": "onShutdown",
          "parameterTypes": []
      }
  ]
},
    {
        "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.AddNzbResponse",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setNzoIds",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setStatus",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.Queue",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setCache_art",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setCache_max",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setCache_size",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setCategories",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setDiskspace1",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDiskspace1_norm",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDiskspace2",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDiskspace2_norm",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDiskspacetotal1",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDiskspacetotal2",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setEta",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setFinish",
                "parameterTypes": [
                    "java.lang.Long"
                ]
            },
            {
                "name": "setFinishaction",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "setHave_quota",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setHave_warnings",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setKbpersec",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setLeft_quota",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setLimit",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setLoadavg",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setMb",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setMbleft",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setNoofslots",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setNoofslots_total",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setPause_int",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPaused",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setPaused_all",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setQueue_details",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setQuota",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setRating_enable",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setRefresh_rate",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setScripts",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setSize",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSizeleft",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSlots",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setSpeed",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSpeedlimit",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSpeedlimit_abs",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setStart",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setStatus",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setTimeleft",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setVersion",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.QueueEntry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.QueueResponse",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setQueue",
                "parameterTypes": [
                    "org.nzbhydra.downloading.downloaders.sabnzbd.mapping.Queue"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.nzbs.NzbHandlingWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "downloadNzbInternal",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "downloadNzbWithApikey",
                "parameterTypes": [
                    "long",
                    "java.lang.String"
                ]
            },
            {
                "name": "downloadNzbZip",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getNzbZipData",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "saveNzbToBlackhole",
                "parameterTypes": [
                    "java.lang.Long"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.downloading.torrents.TorrentFileHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.downloading.torrents.TorrentFileHandler$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.downloading.torrents.TorrentHandlingWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.externaltools.ExternalTools",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.externaltools.ExternalToolsWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.fortests.DebugWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.genericstorage.GenericStorage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.genericstorage.GenericStorageWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.historystats.History",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": []
        }
    ]
},
{
  "name":"org.nzbhydra.historystats.History$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.historystats.HistoryWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": []
        }
    ]
},
{
  "name":"org.nzbhydra.historystats.HistoryWeb$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.historystats.Stats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.historystats.Stats$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.historystats.StatsWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.indexers.Anizb$NewznabHandlingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "handlesIndexerConfig",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerConfig"
          ]
      }
  ]
},
    {
        "name": "org.nzbhydra.indexers.Binsearch$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "handlesIndexerConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.indexer.IndexerConfig"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.indexers.DevIndexer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": [
                "org.nzbhydra.config.ConfigProvider",
                "org.nzbhydra.indexers.IndexerRepository",
                "org.nzbhydra.searching.db.SearchResultRepository",
                "org.nzbhydra.indexers.IndexerApiAccessRepository",
                "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
                "org.nzbhydra.indexers.status.IndexerLimitRepository",
                "org.nzbhydra.indexers.IndexerWebAccess",
                "org.nzbhydra.searching.SearchResultAcceptor",
                "org.nzbhydra.searching.CategoryProvider",
                "org.nzbhydra.mediainfo.InfoProvider",
                "org.springframework.context.ApplicationEventPublisher",
                "org.nzbhydra.indexers.QueryGenerator",
                "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
                "org.springframework.oxm.Unmarshaller",
                "org.nzbhydra.config.BaseConfigHandler"
            ]
        }
    ]
},
{
  "name":"org.nzbhydra.indexers.DevIndexer$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.indexers.DevIndexer$DevIndexerHandlingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "handlesIndexerConfig",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerConfig"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.DogNzb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": [
                "org.nzbhydra.config.ConfigProvider",
                "org.nzbhydra.indexers.IndexerRepository",
                "org.nzbhydra.searching.db.SearchResultRepository",
                "org.nzbhydra.indexers.IndexerApiAccessRepository",
                "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
                "org.nzbhydra.indexers.status.IndexerLimitRepository",
                "org.nzbhydra.indexers.IndexerWebAccess",
                "org.nzbhydra.searching.SearchResultAcceptor",
                "org.nzbhydra.searching.CategoryProvider",
                "org.nzbhydra.mediainfo.InfoProvider",
                "org.springframework.context.ApplicationEventPublisher",
                "org.nzbhydra.indexers.QueryGenerator",
                "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
                "org.springframework.oxm.Unmarshaller",
                "org.nzbhydra.config.BaseConfigHandler"
            ]
        }
    ]
},
    {
        "name": "org.nzbhydra.indexers.DogNzb$$SpringCGLIB$$0",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "methods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.indexers.DogNzb$NewznabHandlingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "handlesIndexerConfig",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerConfig"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.Indexer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "cleanUpTitle",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "completeIndexerSearchResult",
          "parameterTypes": [
              "java.lang.Object",
              "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult",
              "org.nzbhydra.searching.SearchResultAcceptor$AcceptorResult",
              "org.nzbhydra.searching.searchrequests.SearchRequest",
              "int",
              "java.lang.Integer"
          ]
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getConfig",
          "parameterTypes": []
      },
      {
          "name": "getIndexerEntity",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "getSearchResultItems",
          "parameterTypes": [
              "java.lang.Object",
              "org.nzbhydra.searching.searchrequests.SearchRequest"
          ]
      },
      {
          "name": "handleNewConfig",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "initialize",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerConfig",
              "org.nzbhydra.indexers.IndexerEntity"
          ]
      },
      {
          "name": "search",
          "parameterTypes": [
              "org.nzbhydra.searching.searchrequests.SearchRequest",
              "int",
              "java.lang.Integer"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      },
      {
          "name": "tryParseDate",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.IndexerAccessResult"
},
{
  "name":"org.nzbhydra.indexers.IndexerApiAccessEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.IndexerApiAccessEntityShort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.indexers.IndexerApiAccessEntityShort_"
},
{
  "name":"org.nzbhydra.indexers.IndexerApiAccessEntity_"
},
{
  "name":"org.nzbhydra.indexers.IndexerApiAccessRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.indexers.IndexerApiAccessType"
},
{
  "name":"org.nzbhydra.indexers.IndexerEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.IndexerEntity_"
},
{
  "name":"org.nzbhydra.indexers.IndexerHandlingStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.indexers.IndexerRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"save","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.nzbhydra.indexers.IndexerSearchEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "getIndexerEntity",
          "parameterTypes": []
      },
      {
          "name": "getResultsCount",
          "parameterTypes": []
      },
      {
          "name": "getSearchEntity",
          "parameterTypes": []
      },
      {
          "name": "getSuccessful",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setIndexerEntity",
          "parameterTypes": [
              "org.nzbhydra.indexers.IndexerEntity"
          ]
      },
      {
          "name": "setResultsCount",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setSearchEntity",
          "parameterTypes": [
              "org.nzbhydra.searching.db.SearchEntity"
          ]
      },
      {
          "name": "setSuccessful",
          "parameterTypes": [
              "java.lang.Boolean"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
    {
        "name": "org.nzbhydra.indexers.IndexerSearchEntity$HibernateProxy$Gx9qhr5z",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
{
  "name":"org.nzbhydra.indexers.IndexerSearchEntity_"
},
{
  "name":"org.nzbhydra.indexers.IndexerSearchRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.indexers.IndexerStatusesCleanupTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigProvider",
              "org.nzbhydra.config.BaseConfigHandler"
          ]
      },
      {
          "name": "cleanup",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.IndexerWebAccess",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.indexers.Newznab",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "completeIndexerSearchResult",
          "parameterTypes": [
              "java.lang.Object",
              "org.nzbhydra.searching.dtoseventsenums.IndexerSearchResult",
              "org.nzbhydra.searching.SearchResultAcceptor$AcceptorResult",
              "org.nzbhydra.searching.searchrequests.SearchRequest",
              "int",
              "java.lang.Integer"
          ]
      },
      {
          "name": "getIdToCategory",
          "parameterTypes": []
      },
      {
          "name": "getIndexerStatusRepository",
          "parameterTypes": []
      },
      {
          "name": "getNfo",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getUnmarshaller",
          "parameterTypes": []
      },
      {
          "name": "setIndexerStatusRepository",
          "parameterTypes": [
              "org.nzbhydra.indexers.status.IndexerLimitRepository"
          ]
      },
      {
          "name": "setUnmarshaller",
          "parameterTypes": [
              "org.springframework.oxm.Unmarshaller"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.Newznab$NewznabHandlingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "handlesIndexerConfig",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerConfig"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.NzbGeek$NewznabHandlingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "handlesIndexerConfig",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerConfig"
          ]
      }
  ]
},
    {
        "name": "org.nzbhydra.indexers.NzbIndex$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "handlesIndexerConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.indexer.IndexerConfig"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.indexers.QueryGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.indexers.capscheck.IndexerChecker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.indexers.capscheck.IndexerWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.indexers.capscheck.JacketConfigRetriever",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.indexers.capscheck.SimpleConnectionChecker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.indexers.status.IndexerLimit",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.indexers.status.IndexerLimitRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.indexers.status.IndexerLimit_"
},
{
  "name":"org.nzbhydra.indexers.status.IndexerStatusesAndLimits",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.indexers.status.IndexerStatusesWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": []
        }
    ]
},
{
  "name":"org.nzbhydra.indexers.torznab.Torznab$NewznabHandlingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "handlesIndexerConfig",
          "parameterTypes": [
              "org.nzbhydra.config.indexer.IndexerConfig"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.logging.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.logging.EceptionFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "decide",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "updateMarkersFilter",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.logging.LogAnonymizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.logging.LogContentProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.logging.LoggingMarkerFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "decide",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "handleConfigChangedEvent",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      },
      {
          "name": "updateMarkersFilter",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.logging.MdcLogConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.logging.SensitiveDataRemovingPatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setCharset",
          "parameterTypes": [
              "java.nio.charset.Charset"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.mapping.github.Asset",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setBrowserDownloadUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setContentType",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setCreatedAt",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDownloadCount",
          "parameterTypes": [
              "java.lang.Long"
          ]
      },
      {
          "name": "setId",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setLabel",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSize",
          "parameterTypes": [
              "java.lang.Long"
          ]
      },
      {
          "name": "setState",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUpdatedAt",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.mapping.github.Release",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setAssets",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setAssetsUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setBody",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setCreatedAt",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDraft",
          "parameterTypes": [
              "java.lang.Boolean"
          ]
      },
      {
          "name": "setHtmlUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setId",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPrerelease",
          "parameterTypes": [
              "java.lang.Boolean"
          ]
      },
      {
          "name": "setPublishedAt",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setTagName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setTarballUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setTargetCommitish",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUploadUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setZipballUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
    {
        "name": "org.nzbhydra.mapping.newznab.ActionAttribute",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.mapping.newznab.NewznabParameters",
        "allDeclaredFields": true,
        "queryAllPublicMethods": true,
        "queryAllPublicConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getApikey",
                "parameterTypes": []
            },
            {
                "name": "getQ",
                "parameterTypes": []
            },
            {
                "name": "getT",
                "parameterTypes": []
            },
            {
                "name": "setApikey",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setQ",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setT",
                "parameterTypes": [
                    "org.nzbhydra.mapping.newznab.ActionAttribute"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.NewznabResponse",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getSearchType",
                "parameterTypes": []
            },
            {
                "name": "setSearchType",
                "parameterTypes": [
                    "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "fields": [
            {
                "name": "JSON"
            },
            {
                "name": "NEWZNAB"
            },
            {
                "name": "TORZNAB"
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateDeserializer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "deserialize",
                "parameterTypes": [
                    "com.fasterxml.jackson.core.JsonParser",
                    "com.fasterxml.jackson.databind.DeserializationContext"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.mapping.newznab.json.JsonPubdateSerializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "serialize",
          "parameterTypes": [
              "java.lang.Object",
              "com.fasterxml.jackson.core.JsonGenerator",
              "com.fasterxml.jackson.databind.SerializerProvider"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.JaxbPubdateAdapter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.NewznabAttribute",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.NewznabXmlApilimits",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.NewznabXmlChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.NewznabXmlEnclosure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlError",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
{
  "name":"org.nzbhydra.mapping.newznab.xml.NewznabXmlGuid",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.NewznabXmlItem",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.NewznabXmlResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.NewznabXmlRoot",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.Xml",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategories",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.CapsXmlLimits",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRetention",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRoot",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearching",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.CapsXmlServer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlIndexer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlRoot",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mapping.newznab.xml.package-info"
},
{
  "name":"org.nzbhydra.mediainfo.CustomTmdb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "initWithApiKey",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.mediainfo.InfoProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mediainfo.InfoProvider$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.mediainfo.MediaInfoWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mediainfo.MovieInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.mediainfo.MovieInfoRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.mediainfo.MovieInfo_"
},
{
  "name":"org.nzbhydra.mediainfo.TmdbHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.mediainfo.TvInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.mediainfo.TvInfoRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.mediainfo.TvInfo_"
},
{
  "name":"org.nzbhydra.mediainfo.TvMazeHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.misc.BrowserOpener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.misc.OpenPortChecker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.misc.UserAgentMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.misc.WebHooks",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "onNzbDownloadEvent",
          "parameterTypes": [
              "org.nzbhydra.downloading.FileDownloadEvent"
          ]
      },
      {
          "name": "onSearchEvent",
          "parameterTypes": [
              "org.nzbhydra.searching.Searcher$SearchEvent"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.misc.WebHooks$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.news.NewsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.news.NewsWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": []
        }
    ]
},
{
  "name":"org.nzbhydra.news.ShownNews",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.news.ShownNewsRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.news.ShownNews_"
},
{
  "name":"org.nzbhydra.notifications.NotificationEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.notifications.NotificationEntity$MessageType"
},
{
  "name":"org.nzbhydra.notifications.NotificationEntity_"
},
    {
        "name": "org.nzbhydra.notifications.NotificationHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "handleNotification",
                "parameterTypes": [
                    "org.nzbhydra.notifications.NotificationEvent"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.notifications.NotificationRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.notifications.NotificationsWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "onShutdown",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.problemdetection.DeleteOldDatabaseBackupDetector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "executeCheck",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.problemdetection.OpenPortProblemDetector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "executeCheck",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.problemdetection.OutOfMemoryDetector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "executeCheck",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.problemdetection.OutdatedWrapperDetector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "executeCheck",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.problemdetection.ProblemDetector",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.problemdetection.ProblemDetectorTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "detectProblems",
          "parameterTypes": []
      },
      {
          "name": "init",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.problemdetection.VipExpiryDetector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "executeCheck",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.searching.CategoryProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "handleNewConfigEvent",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      }
  ]
},
    {
        "name": "org.nzbhydra.searching.CustomQueryAndTitleMappingHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
{
  "name":"org.nzbhydra.searching.DuplicateDetector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.searching.IndexerForSearchSelector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "pickIndexers",
          "parameterTypes": [
              "org.nzbhydra.searching.searchrequests.SearchRequest"
          ]
      }
  ]
},
    {
        "name": "org.nzbhydra.searching.IndexerForSearchSelector$$SpringCGLIB$$0",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "methods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.IndexerInstantiator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.InternalSearchResultProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.SearchModuleConfigProvider",
        "allDeclaredFields": true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "handleNewConfig",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.searching.SearchModuleProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getIndexerByName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getIndexers",
          "parameterTypes": []
      },
      {
          "name": "loadIndexers",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.searching.SearchModuleProvider$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.searching.SearchResultAcceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.searching.SearchWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "handleIndexerSearchFinishedEvent",
          "parameterTypes": [
              "org.nzbhydra.searching.dtoseventsenums.IndexerSearchFinishedEvent"
          ]
      },
      {
          "name": "handleIndexerSelectionEvent",
          "parameterTypes": [
              "org.nzbhydra.searching.dtoseventsenums.IndexerSelectionEvent"
          ]
      },
      {
          "name": "handleSearchMessageEvent",
          "parameterTypes": [
              "org.nzbhydra.searching.dtoseventsenums.SearchMessageEvent"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.searching.Searcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "onShutdown",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.searching.cleanup.HistoryCleanupTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "deleteOldResults",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.searching.cleanup.OldResultsCleanupTask",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "deleteOldResults",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.searching.cleanup.OldResultsCleanupTask$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "deleteOldResults",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.searching.db.IdentifierKeyValuePair",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.searching.db.IdentifierKeyValuePair_"
},
{
  "name":"org.nzbhydra.searching.db.SearchEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "setId",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.searching.db.SearchEntity_"
},
{
  "name":"org.nzbhydra.searching.db.SearchRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.searching.db.SearchResultEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getDetails",
          "parameterTypes": []
      },
      {
          "name": "getDownloadType",
          "parameterTypes": []
      },
      {
          "name": "getFirstFound",
          "parameterTypes": []
      },
      {
          "name": "getId",
          "parameterTypes": []
      },
      {
          "name": "getIndexer",
          "parameterTypes": []
      },
      {
          "name": "getIndexerGuid",
          "parameterTypes": []
      },
      {
          "name": "getIndexerSearchEntity",
          "parameterTypes": []
      },
      {
          "name": "getLink",
          "parameterTypes": []
      },
      {
          "name": "getPubDate",
          "parameterTypes": []
      },
      {
          "name": "getTitle",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "setDetails",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDownloadType",
          "parameterTypes": [
              "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
          ]
      },
      {
          "name": "setFirstFound",
          "parameterTypes": [
              "java.time.Instant"
          ]
      },
      {
          "name": "setId",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "setIndexer",
          "parameterTypes": [
              "org.nzbhydra.indexers.IndexerEntity"
          ]
      },
      {
          "name": "setIndexerGuid",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setIndexerSearchEntity",
          "parameterTypes": [
              "org.nzbhydra.indexers.IndexerSearchEntity"
          ]
      },
      {
          "name": "setLink",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPubDate",
          "parameterTypes": [
              "java.time.Instant"
          ]
      },
      {
          "name": "setTitle",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
    {
        "name": "org.nzbhydra.searching.db.SearchResultEntity$HibernateProxy$pWMjAShB",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.db.SearchResultEntity_"
    },
    {
        "name": "org.nzbhydra.searching.db.SearchResultRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
  "name":"org.nzbhydra.searching.db.SearchResultSequenceGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.searching.dtoseventsenums.SearchResultItem",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
},
    {
        "name": "org.nzbhydra.searching.searchrequests.SearchRequestFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.searchrequests.SearchSource"
    },
    {
        "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "equals",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "getId",
                "parameterTypes": []
            },
            {
                "name": "setId",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
},
{
  "name":"org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntityRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity_"
},
{
  "name":"org.nzbhydra.springconfig.AppConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getRestTemplate",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "CGLIB$SET_THREAD_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "getRestTemplate",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.springconfig.AppConfig$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.springconfig.ControllerAdvices",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "initBinder",
          "parameterTypes": [
              "org.springframework.web.bind.WebDataBinder"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.springconfig.GracefulSpringShutdown",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.boot.web.server.WebServerFactory"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.systemcontrol.SystemControl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.systemcontrol.SystemControlWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": []
        }
    ]
},
{
  "name":"org.nzbhydra.tasks.HydraTask",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.nzbhydra.tasks.HydraTaskConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "taskExecutor",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "CGLIB$SET_THREAD_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "taskExecutor",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.tasks.HydraTaskConfiguration$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.tasks.HydraTaskScheduler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "afterSingletonsInstantiated",
          "parameterTypes": []
      },
      {
          "name": "onShutdown",
          "parameterTypes": []
      },
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessBeforeInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.tasks.HydraTasksWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.update.AutomaticUpdater",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "checkAndInstall",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.update.AutomaticUpdater$$SpringCGLIB$$0",
  "fields": [
      {
          "name": "CGLIB$CALLBACK_FILTER"
      },
      {
          "name": "CGLIB$FACTORY_DATA"
      }
  ],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.nzbhydra.update.UpdateManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.update.UpdatesWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": []
        }
    ]
},
    {
        "name": "org.nzbhydra.web.ErrorHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.web.HelpWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.web.HydraErrorController",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.web.servlet.error.ErrorAttributes"
                ]
            }
        ]
    },
{
  "name":"org.nzbhydra.web.Interceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "preHandle",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.web.MainWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": []
        }
    ]
},
{
  "name":"org.nzbhydra.web.NzbDetailsWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.web.UrlCalculator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.nzbhydra.web.WebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "addFormatters",
          "parameterTypes": [
              "org.springframework.format.FormatterRegistry"
          ]
      },
      {
          "name": "addResourceHandlers",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
          ]
      },
      {
          "name": "filterRegistrationBean",
          "parameterTypes": []
      },
      {
          "name": "marshaller",
          "parameterTypes": []
      },
      {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager",
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "CGLIB$SET_THREAD_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "beanNameHandlerMapping",
          "parameterTypes": [
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "defaultServletHandlerMapping",
          "parameterTypes": []
      },
      {
          "name": "filterRegistrationBean",
          "parameterTypes": []
      },
      {
          "name": "flashMapManager",
          "parameterTypes": []
      },
      {
          "name": "handlerExceptionResolver",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager"
          ]
      },
      {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
      },
      {
          "name": "httpRequestHandlerAdapter",
          "parameterTypes": []
      },
      {
          "name": "localeResolver",
          "parameterTypes": []
      },
      {
          "name": "marshaller",
          "parameterTypes": []
      },
      {
          "name": "mvcContentNegotiationManager",
          "parameterTypes": []
      },
      {
          "name": "mvcConversionService",
          "parameterTypes": []
      },
      {
          "name": "mvcHandlerMappingIntrospector",
          "parameterTypes": []
      },
      {
          "name": "mvcPathMatcher",
          "parameterTypes": []
      },
      {
          "name": "mvcPatternParser",
          "parameterTypes": []
      },
      {
          "name": "mvcResourceUrlProvider",
          "parameterTypes": []
      },
      {
          "name": "mvcUriComponentsContributor",
          "parameterTypes": [
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          ]
      },
      {
          "name": "mvcUrlPathHelper",
          "parameterTypes": []
      },
      {
          "name": "mvcValidator",
          "parameterTypes": []
      },
      {
          "name": "mvcViewResolver",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager"
          ]
      },
      {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager",
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.validation.Validator"
          ]
      },
      {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager",
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager",
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "routerFunctionMapping",
          "parameterTypes": [
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "simpleControllerHandlerAdapter",
          "parameterTypes": []
      },
      {
          "name": "themeResolver",
          "parameterTypes": []
      },
      {
          "name": "viewControllerHandlerMapping",
          "parameterTypes": [
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "viewNameTranslator",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.web.WebConfiguration$$SpringCGLIB$$2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.nzbhydra.web.WebSocketConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "configureClientInboundChannel",
          "parameterTypes": [
              "org.springframework.messaging.simp.config.ChannelRegistration"
          ]
      },
      {
          "name": "configureClientOutboundChannel",
          "parameterTypes": [
              "org.springframework.messaging.simp.config.ChannelRegistration"
          ]
      },
      {
          "name": "configureMessageBroker",
          "parameterTypes": [
              "org.springframework.messaging.simp.config.MessageBrokerRegistry"
          ]
      },
      {
          "name": "onShutdown",
          "parameterTypes": []
      },
      {
          "name": "registerStompEndpoints",
          "parameterTypes": [
              "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.web.WebSocketConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      },
      {
          "name": "CGLIB$SET_THREAD_CALLBACKS",
          "parameterTypes": [
              "org.springframework.cglib.proxy.Callback[]"
          ]
      }
  ]
},
{
  "name":"org.nzbhydra.web.WelcomeWeb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
    "methods": [
        {
            "name": "<init>",
            "parameterTypes": []
        }
    ]
},
{
  "name":"org.nzbhydra.webaccess.HydraOkHttp3ClientHttpRequestFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "createRequest",
          "parameterTypes": [
              "java.net.URI",
              "org.springframework.http.HttpMethod"
          ]
      },
      {
          "name": "handleConfigChangedEvent",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      },
      {
          "name": "init",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.webaccess.Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "handleConfigChangedEvent",
          "parameterTypes": [
              "org.nzbhydra.config.ConfigChangedEvent"
          ]
      },
      {
          "name": "init",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.nzbhydra.webaccess.WebAccess",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.quartz.Scheduler"
},
{
  "name":"org.reactivestreams$Publisher"
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.LoggerFactory"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"log","parameterTypes":["org.slf4j.Marker","java.lang.String","int","java.lang.String","java.lang.Object[]","java.lang.Throwable"] }]
},
{
  "name":"org.slf4j.spi.SLF4JServiceProvider"
},
{
  "name":"org.springframework.amqp.rabbit.core.RabbitTemplate"
},
{
  "name":"org.springframework.aop.Advisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.PointcutAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.SpringProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.TargetClassAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getTargetClass","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "determineBeanType",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "setBeforeExistingAdvisors",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.aop.framework.Advised",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "addAdvisor",
          "parameterTypes": [
              "org.springframework.aop.Advisor"
          ]
      },
      {
          "name": "getTargetSource",
          "parameterTypes": []
      },
      {
          "name": "isFrozen",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "copyFrom",
          "parameterTypes": [
              "org.springframework.aop.framework.ProxyConfig"
          ]
      },
      {
          "name": "isExposeProxy",
          "parameterTypes": []
      },
      {
          "name": "isFrozen",
          "parameterTypes": []
      },
      {
          "name": "isOpaque",
          "parameterTypes": []
      },
      {
          "name": "isOptimize",
          "parameterTypes": []
      },
      {
          "name": "isProxyTargetClass",
          "parameterTypes": []
      },
      {
          "name": "setExposeProxy",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setFrozen",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setOpaque",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setOptimize",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setProxyTargetClass",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "setOrder",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setProxyClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      }
  ]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "determineBeanType",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String"
          ]
      },
      {
          "name": "determineCandidateConstructors",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String"
          ]
      },
      {
          "name": "getEarlyBeanReference",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "isFrozen",
          "parameterTypes": []
      },
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessBeforeInstantiation",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessProperties",
          "parameterTypes": [
              "org.springframework.beans.PropertyValues",
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "predictBeanType",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String"
          ]
      },
      {
          "name": "setAdvisorAdapterRegistry",
          "parameterTypes": [
              "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
          ]
      },
      {
          "name": "setApplyCommonInterceptorsFirst",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setCustomTargetSourceCreators",
          "parameterTypes": [
              "org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"
          ]
      },
      {
          "name": "setFrozen",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setInterceptorNames",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      }
  ]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.scope.ScopedObject",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.scope.ScopedProxyFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "isSingleton",
          "parameterTypes": []
      },
      {
          "name": "setTargetBeanName",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getAdvice",
          "parameterTypes": []
      },
      {
          "name": "getAdviceBeanName",
          "parameterTypes": []
      },
      {
          "name": "setAdvice",
          "parameterTypes": [
              "org.aopalliance.aop.Advice"
          ]
      },
      {
          "name": "setAdviceBeanName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.aop.support.AbstractPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "isPerInstance",
          "parameterTypes": []
      },
      {
          "name": "setOrder",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.batch.core.launch.JobLauncher"
},
{
  "name":"org.springframework.beans.factory.Aware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isBeanExcludedFromAotProcessing","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.config.AbstractFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "getObject",
          "parameterTypes": []
      },
      {
          "name": "isSingleton",
          "parameterTypes": []
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "setSingleton",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessBeforeInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "postProcessAfterInstantiation",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessBeforeInstantiation",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessProperties",
          "parameterTypes": [
              "org.springframework.beans.PropertyValues",
              "java.lang.Object",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "determineCandidateConstructors",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String"
          ]
      },
      {
          "name": "getEarlyBeanReference",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "predictBeanType",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
  "queryAllPublicMethods":true,
  "methods":[{"name":"resetBeanDefinition","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
  "allPublicFields":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.LazyInitializationExcludeFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.SpringApplication",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "beansEndpoint",
          "parameterTypes": [
              "org.springframework.context.ConfigurableApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "cachesEndpoint",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "cachesEndpointWebExtension",
          "parameterTypes": [
              "org.springframework.boot.actuate.cache.CachesEndpoint"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "conditionsReportEndpoint",
          "parameterTypes": [
              "org.springframework.context.ConfigurableApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "configurationPropertiesReportEndpoint",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "configurationPropertiesReportEndpointWebExtension",
          "parameterTypes": [
              "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
              "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "endpointCachingOperationInvokerAdvisor",
          "parameterTypes": [
              "org.springframework.core.env.Environment"
          ]
      },
      {
          "name": "endpointOperationParameterMapper",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"match","parameterTypes":["org.springframework.boot.actuate.endpoint.ExposableEndpoint"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "endpointObjectMapper",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getRootPath","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "servletExposeExcludePropertyEndpointFilter",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "servletEndpointRegistrar",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
              "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
              "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
      },
      {
          "name": "controllerEndpointDiscoverer",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "controllerExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
      },
      {
          "name": "endpointMediaTypes",
          "parameterTypes": []
      },
      {
          "name": "pathMappedEndpoints",
          "parameterTypes": [
              "java.util.Collection"
          ]
      },
      {
          "name": "webEndpointDiscoverer",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
              "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "webEndpointPathMapper",
          "parameterTypes": []
      },
      {
          "name": "webExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "servletEndpointDiscoverer",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getExposure",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "getInclude",
          "parameterTypes": []
      },
      {
          "name": "setInclude",
          "parameterTypes": [
              "java.util.Set"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "controllerEndpointHandlerMapping",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
              "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
              "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
      },
      {
          "name": "endpointObjectMapperWebMvcConfigurer",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
          ]
      },
      {
          "name": "webEndpointServletHandlerMapping",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
              "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
              "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
              "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
              "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
              "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
              "org.springframework.core.env.Environment"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"configureMessageConverters","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "environmentEndpoint",
          "parameterTypes": [
              "org.springframework.core.env.Environment",
              "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "environmentEndpointWebExtension",
          "parameterTypes": [
              "org.springframework.boot.actuate.env.EnvironmentEndpoint",
              "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "flywayEndpoint",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "get",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getNames",
          "parameterTypes": []
      },
      {
          "name": "getPrimary",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "pingHealthContributor",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "healthContributorRegistry",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.boot.actuate.health.HealthEndpointGroups",
              "java.util.Map",
              "java.util.Map"
          ]
      },
      {
          "name": "healthEndpoint",
          "parameterTypes": [
              "org.springframework.boot.actuate.health.HealthContributorRegistry",
              "org.springframework.boot.actuate.health.HealthEndpointGroups",
              "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
      },
      {
          "name": "healthEndpointGroups",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
      },
      {
          "name": "healthEndpointGroupsBeanPostProcessor",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "healthHttpCodeStatusMapper",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
      },
      {
          "name": "healthStatusAggregator",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getShowDetails",
          "parameterTypes": []
      },
      {
          "name": "setShowDetails",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.Show"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "healthEndpointWebExtension",
          "parameterTypes": [
              "org.springframework.boot.actuate.health.HealthContributorRegistry",
              "org.springframework.boot.actuate.health.HealthEndpointGroups",
              "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "healthEndpointWebMvcHandlerMapping",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
              "org.springframework.boot.actuate.health.HealthEndpointGroups"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getRoles",
          "parameterTypes": []
      },
      {
          "name": "getShowComponents",
          "parameterTypes": []
      },
      {
          "name": "getStatus",
          "parameterTypes": []
      },
      {
          "name": "setRoles",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setShowComponents",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.Show"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "infoEndpoint",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "dbHealthContributor",
          "parameterTypes": [
              "java.util.Map",
              "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "loggersEndpoint",
          "parameterTypes": [
              "org.springframework.boot.logging.LoggingSystem",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "heapDumpWebEndpoint",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "dumpEndpoint",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "classLoaderMetrics",
          "parameterTypes": []
      },
      {
          "name": "jvmCompilationMetrics",
          "parameterTypes": []
      },
      {
          "name": "jvmGcMetrics",
          "parameterTypes": []
      },
      {
          "name": "jvmHeapPressureMetrics",
          "parameterTypes": []
      },
      {
          "name": "jvmInfoMetrics",
          "parameterTypes": []
      },
      {
          "name": "jvmMemoryMetrics",
          "parameterTypes": []
      },
      {
          "name": "jvmThreadMetrics",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "logbackMetrics",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterSingletonsInstantiated",
          "parameterTypes": []
      },
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "meterRegistryPostProcessor",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "micrometerClock",
          "parameterTypes": []
      },
      {
          "name": "propertiesMeterFilter",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "metricsEndpoint",
          "parameterTypes": [
              "io.micrometer.core.instrument.MeterRegistry"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "accept",
          "parameterTypes": [
              "io.micrometer.core.instrument.Meter$Id"
          ]
      },
      {
          "name": "configure",
          "parameterTypes": [
              "io.micrometer.core.instrument.Meter$Id",
              "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
          ]
      },
      {
          "name": "map",
          "parameterTypes": [
              "io.micrometer.core.instrument.Meter$Id"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "diskSpaceMetrics",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
      },
      {
          "name": "fileDescriptorMetrics",
          "parameterTypes": []
      },
      {
          "name": "processorMetrics",
          "parameterTypes": []
      },
      {
          "name": "uptimeMetrics",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "caffeineCacheMeterBinderProvider",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "io.micrometer.core.instrument.MeterRegistry",
              "java.util.Collection",
              "java.util.Map"
          ]
      },
      {
          "name": "cacheMetricsRegistrar",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
      },
      {
          "name": "metricsRepositoryMethodInvocationListener",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"
          ]
      },
      {
          "name": "metricsRepositoryMethodInvocationListenerBeanPostProcessor",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "repositoryTagsProvider",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "simpleConfig",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
          ]
      },
      {
          "name": "simpleMeterRegistry",
          "parameterTypes": [
              "io.micrometer.core.instrument.simple.SimpleConfig",
              "io.micrometer.core.instrument.Clock"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "get",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "mode",
          "parameterTypes": []
      },
      {
          "name": "prefix",
          "parameterTypes": []
      },
      {
          "name": "step",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "dataSourcePoolMetadataMeterBinder",
          "parameterTypes": [
              "java.util.Map",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "hikariDataSourceMeterBinder",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "startupTimeMetrics",
          "parameterTypes": [
              "io.micrometer.core.instrument.MeterRegistry"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "bindTaskExecutorsToRegistry",
          "parameterTypes": [
              "java.util.Map",
              "io.micrometer.core.instrument.MeterRegistry"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "tomcatMetricsBinder",
          "parameterTypes": [
              "io.micrometer.core.instrument.MeterRegistry"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "observationRegistry",
          "parameterTypes": []
      },
      {
          "name": "observationRegistryPostProcessor",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "defaultMeterObservationHandler",
          "parameterTypes": [
              "io.micrometer.core.instrument.MeterRegistry"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "metricsObservationHandlerGrouping",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "metricsHttpClientUriTagFilter",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
              "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "observationRestTemplateCustomizer",
          "parameterTypes": [
              "io.micrometer.observation.ObservationRegistry",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
              "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
              "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
      },
      {
          "name": "webMvcObservationFilter",
          "parameterTypes": [
              "io.micrometer.observation.ObservationRegistry",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "metricsHttpServerUriTagFilter",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
              "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "scheduledTasksEndpoint",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "requestMatcherProvider",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "diskSpaceHealthIndicator",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "mappingsEndpoint",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "filterMappingDescriptionProvider",
          "parameterTypes": []
      },
      {
          "name": "servletMappingDescriptionProvider",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "dispatcherServletMappingDescriptionProvider",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.core.env.Environment"
          ]
      },
      {
          "name": "afterSingletonsInstantiated",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "managementServletContext",
          "parameterTypes": [
              "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
      },
      {
          "name": "servletWebChildContextFactory",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "createOperationKey",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.Operation"
          ]
      },
      {
          "name": "getEndpoints",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Selector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"mapParameterValue","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.OperationParameter","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.OperationType","org.springframework.boot.actuate.endpoint.invoke.OperationParameters","org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"onStartup","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getEndpoints",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.flyway.FlywayEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getContributor",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "iterator",
          "parameterTypes": []
      },
      {
          "name": "registerContributor",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object"
          ]
      },
      {
          "name": "unregisterContributor",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "get",
          "parameterTypes": [
              "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
          ]
      },
      {
          "name": "getAllWithAdditionalPath",
          "parameterTypes": [
              "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["java.lang.Object","boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getStatusCode","parameterTypes":["org.springframework.boot.actuate.health.Status"] }]
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["org.springframework.boot.actuate.health.Status[]"] }]
},
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CaffeineCacheMeterBinderProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getMeterBinder","parameterTypes":["org.springframework.cache.Cache","java.lang.Iterable"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"repositoryTags","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterInvocation","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "onApplicationEvent",
          "parameterTypes": [
              "org.springframework.context.ApplicationEvent"
          ]
      },
      {
          "name": "supportsEventType",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.web.client.RestTemplate"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "onApplicationEvent",
          "parameterTypes": [
              "org.springframework.context.ApplicationEvent"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
  "queryAllDeclaredMethods":true,
    "queryAllPublicMethods": true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "describeMappings",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "getMappingName",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "describeMappings",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "getMappingName",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "describeMappings",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "getMappingName",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "applicationAvailability",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnJndiCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "persistenceExceptionTranslationPostProcessor",
          "parameterTypes": [
              "org.springframework.core.env.Environment"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$JpaRepositoriesImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
          ]
      },
      {
          "name": "pageableCustomizer",
          "parameterTypes": []
      },
      {
          "name": "sortCustomizer",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "flywayDefaultDdlModeProvider",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "stringOrNumberMigrationVersionConverter",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayAutoConfigurationRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "flyway",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
              "org.springframework.core.io.ResourceLoader",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer"
          ]
      },
      {
          "name": "flywayInitializer",
          "parameterTypes": [
              "org.flywaydb.core.Flyway",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "resourceProviderCustomizer",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayDataSourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "convert",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.core.convert.TypeDescriptor",
              "org.springframework.core.convert.TypeDescriptor"
          ]
      },
      {
          "name": "getConvertibleTypes",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayDataSource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getLocations",
          "parameterTypes": []
      },
      {
          "name": "getSchemas",
          "parameterTypes": []
      },
      {
          "name": "setEnabled",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setLocations",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setSchemas",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSchemaManagement","parameterTypes":["javax.sql.DataSource"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "gson",
          "parameterTypes": [
              "com.google.gson.GsonBuilder"
          ]
      },
      {
          "name": "gsonBuilder",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "standardGsonBuilderCustomizer",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.gson.GsonProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "customize",
          "parameterTypes": [
              "com.google.gson.GsonBuilder"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConverters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "messageConverters",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "stringHttpMessageConverter",
          "parameterTypes": [
              "org.springframework.core.env.Environment"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "mappingJackson2HttpMessageConverter",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.ObjectMapper"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.info.ProjectInfoProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "jsonComponentModule",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "jsonMixinModule",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
      },
      {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
              "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "parameterNamesModule",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getDeserialization",
          "parameterTypes": []
      },
      {
          "name": "getSerialization",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "dataSource",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "setDriverClassName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPassword",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUrl",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setUsername",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "jdbcTemplate",
          "parameterTypes": [
              "javax.sql.DataSource",
              "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "namedParameterJdbcTemplate",
          "parameterTypes": [
              "org.springframework.jdbc.core.JdbcTemplate"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "hikariPoolDataSourceMetadataProvider",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.sql.DataSource","org.springframework.boot.autoconfigure.orm.jpa.JpaProperties","org.springframework.beans.factory.config.ConfigurableListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "entityManagerFactory",
          "parameterTypes": [
              "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
              "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
          ]
      },
      {
          "name": "entityManagerFactoryBuilder",
          "parameterTypes": [
              "org.springframework.orm.jpa.JpaVendorAdapter",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "jpaVendorAdapter",
          "parameterTypes": []
      },
      {
          "name": "transactionManager",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "persistenceManagedTypes",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory",
              "org.springframework.core.io.ResourceLoader"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getProperties",
          "parameterTypes": []
      },
      {
          "name": "setDatabasePlatform",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setOpenInView",
          "parameterTypes": [
              "java.lang.Boolean"
          ]
      },
      {
          "name": "setProperties",
          "parameterTypes": [
              "java.util.Map"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.AntPathRequestMatcherProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getRequestMatcher","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "authenticationEventPublisher",
          "parameterTypes": [
              "org.springframework.context.ApplicationEventPublisher"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "securityFilterChainRegistration",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.security.SecurityProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "dataSourceScriptDatabaseInitializer",
          "parameterTypes": [
              "javax.sql.DataSource",
              "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer"
},
{
  "name":"org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isExcluded","parameterTypes":["java.lang.String","org.springframework.beans.factory.config.BeanDefinition","java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "taskExecutorBuilder",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "scheduledBeanLazyInitializationExcludeFilter",
          "parameterTypes": []
      },
      {
          "name": "taskSchedulerBuilder",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "templateEngine",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$ReactiveTemplateEngineConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "defaultTemplateResolver",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "thymeleafViewResolver",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
              "org.thymeleaf.spring6.SpringTemplateEngine"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setCache",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setMode",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "platformTransactionManagerCustomizers",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "transactionTemplate",
          "parameterTypes": [
              "org.springframework.transaction.PlatformTransactionManager"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.transaction.PlatformTransactionManager"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "defaultValidator",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "methodValidationPostProcessor",
          "parameterTypes": [
              "org.springframework.core.env.Environment",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getCompression",
          "parameterTypes": []
      },
      {
          "name": "getServlet",
          "parameterTypes": []
      },
      {
          "name": "getSsl",
          "parameterTypes": []
      },
      {
          "name": "getTomcat",
          "parameterTypes": []
      },
      {
          "name": "setAddress",
          "parameterTypes": [
              "java.net.InetAddress"
          ]
      },
      {
          "name": "setForwardHeadersStrategy",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
          ]
      },
      {
          "name": "setPort",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setShutdown",
          "parameterTypes": [
              "org.springframework.boot.web.server.Shutdown"
          ]
      },
      {
          "name": "setSsl",
          "parameterTypes": [
              "org.springframework.boot.web.server.Ssl"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "getEncoding",
          "parameterTypes": []
      },
      {
          "name": "getJsp",
          "parameterTypes": []
      },
      {
          "name": "getSession",
          "parameterTypes": []
      },
      {
          "name": "setContextPath",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "getThreads",
          "parameterTypes": []
      },
      {
          "name": "setRedirectContextRoot",
          "parameterTypes": [
              "java.lang.Boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setMax","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getResources",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setStaticLocations","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "tomcatWebServerFactoryCustomizer",
          "parameterTypes": [
              "org.springframework.core.env.Environment",
              "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.boot.web.server.WebServerFactory"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "dispatcherServlet",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "dispatcherServletRegistration",
          "parameterTypes": [
              "org.springframework.web.servlet.DispatcherServlet",
              "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getPrefix",
          "parameterTypes": []
      },
      {
          "name": "getRelativePath",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getServletUrlMapping",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "addUrlMappings",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      },
      {
          "name": "getPath",
          "parameterTypes": []
      },
      {
          "name": "setUrlMappings",
          "parameterTypes": [
              "java.util.Collection"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
      },
      {
          "name": "characterEncodingFilter",
          "parameterTypes": []
      },
      {
          "name": "localeCharsetMappingsCustomizer",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.boot.web.server.WebServerFactory"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
          ]
      },
      {
          "name": "multipartConfigElement",
          "parameterTypes": []
      },
      {
          "name": "multipartResolver",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setMaxFileSize",
          "parameterTypes": [
              "org.springframework.util.unit.DataSize"
          ]
      },
      {
          "name": "setMaxRequestSize",
          "parameterTypes": [
              "org.springframework.util.unit.DataSize"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "servletWebServerFactoryCustomizer",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.ServerProperties",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "tomcatServletWebServerFactoryCustomizer",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "tomcatServletWebServerFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider",
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.boot.web.server.WebServerFactory"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.boot.web.server.WebServerFactory"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "resolveErrorView",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "org.springframework.http.HttpStatus",
              "java.util.Map"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
      },
      {
          "name": "errorAttributes",
          "parameterTypes": []
      },
      {
          "name": "errorPageCustomizer",
          "parameterTypes": [
              "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
      },
      {
          "name": "preserveErrorControllerTargetClassPostProcessor",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
      },
      {
          "name": "conventionErrorViewResolver",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "registerErrorPages",
          "parameterTypes": [
              "org.springframework.boot.web.server.ErrorPageRegistry"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "customize",
          "parameterTypes": [
              "org.springframework.boot.web.server.WebServerFactory"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration$WebSocketMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.ObjectMapper"
          ]
      },
      {
          "name": "configureMessageConverters",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "eagerStompWebSocketHandlerMapping",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "websocketServletWebServerCustomizer",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getLivenessState",
          "parameterTypes": []
      },
      {
          "name": "getReadinessState",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getLastChangeEvent",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getState",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getState",
          "parameterTypes": [
              "java.lang.Class",
              "org.springframework.boot.availability.AvailabilityState"
          ]
      },
      {
          "name": "onApplicationEvent",
          "parameterTypes": [
              "org.springframework.context.ApplicationEvent"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.cloud.CloudPlatform"
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinding",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Nested",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.migrator.PropertiesMigrationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties"
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.jdbc.SchemaManagementProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.XADataSourceWrapper"
},
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.LoggingSystem"
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "initializeDatabase",
          "parameterTypes": []
      },
      {
          "name": "setResourceLoader",
          "parameterTypes": [
              "org.springframework.core.io.ResourceLoader"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"byAnnotation","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"
},
{
  "name":"org.springframework.boot.web.client.RestTemplateCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "addConnectorCustomizers",
          "parameterTypes": [
              "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
          ]
      },
      {
          "name": "addContextCustomizers",
          "parameterTypes": [
              "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
          ]
      },
      {
          "name": "addEngineValves",
          "parameterTypes": [
              "org.apache.catalina.Valve[]"
          ]
      },
      {
          "name": "addProtocolHandlerCustomizers",
          "parameterTypes": [
              "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
          ]
      },
      {
          "name": "getWebServer",
          "parameterTypes": [
              "org.springframework.boot.web.servlet.ServletContextInitializer[]"
          ]
      },
      {
          "name": "setBackgroundProcessorDelay",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setBaseDirectory",
          "parameterTypes": [
              "java.io.File"
          ]
      },
      {
          "name": "setResourceLoader",
          "parameterTypes": [
              "org.springframework.core.io.ResourceLoader"
          ]
      },
      {
          "name": "setUriEncoding",
          "parameterTypes": [
              "java.nio.charset.Charset"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addErrorPages",
          "parameterTypes": [
              "org.springframework.boot.web.server.ErrorPage[]"
          ]
      },
      {
          "name": "getAddress",
          "parameterTypes": []
      },
      {
          "name": "getCompression",
          "parameterTypes": []
      },
      {
          "name": "getErrorPages",
          "parameterTypes": []
      },
      {
          "name": "getHttp2",
          "parameterTypes": []
      },
      {
          "name": "getOrCreateSslStoreProvider",
          "parameterTypes": []
      },
      {
          "name": "getPort",
          "parameterTypes": []
      },
      {
          "name": "getServerHeader",
          "parameterTypes": []
      },
      {
          "name": "getShutdown",
          "parameterTypes": []
      },
      {
          "name": "getSsl",
          "parameterTypes": []
      },
      {
          "name": "getSslStoreProvider",
          "parameterTypes": []
      },
      {
          "name": "setAddress",
          "parameterTypes": [
              "java.net.InetAddress"
          ]
      },
      {
          "name": "setCompression",
          "parameterTypes": [
              "org.springframework.boot.web.server.Compression"
          ]
      },
      {
          "name": "setErrorPages",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setHttp2",
          "parameterTypes": [
              "org.springframework.boot.web.server.Http2"
          ]
      },
      {
          "name": "setPort",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setServerHeader",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setShutdown",
          "parameterTypes": [
              "org.springframework.boot.web.server.Shutdown"
          ]
      },
      {
          "name": "setSsl",
          "parameterTypes": [
              "org.springframework.boot.web.server.Ssl"
          ]
      },
      {
          "name": "setSslStoreProvider",
          "parameterTypes": [
              "org.springframework.boot.web.server.SslStoreProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.server.Compression",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.Cookie",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "setMaxAge",
          "parameterTypes": [
              "java.time.Duration"
          ]
      },
      {
          "name": "setPath",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrar",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessBeforeInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setEnabled",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setKeyStore",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setKeyStorePassword",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setKeyStoreType",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessBeforeInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addServletNames",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      },
      {
          "name": "addServletRegistrationBeans",
          "parameterTypes": [
              "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
          ]
      },
      {
          "name": "addUrlPatterns",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      },
      {
          "name": "getServletNames",
          "parameterTypes": []
      },
      {
          "name": "getServletRegistrationBeans",
          "parameterTypes": []
      },
      {
          "name": "getUrlPatterns",
          "parameterTypes": []
      },
      {
          "name": "isMatchAfter",
          "parameterTypes": []
      },
      {
          "name": "setDispatcherTypes",
          "parameterTypes": [
              "jakarta.servlet.DispatcherType",
              "jakarta.servlet.DispatcherType[]"
          ]
      },
      {
          "name": "setDispatcherTypes",
          "parameterTypes": [
              "java.util.EnumSet"
          ]
      },
      {
          "name": "setMatchAfter",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setServletNames",
          "parameterTypes": [
              "java.util.Collection"
          ]
      },
      {
          "name": "setServletRegistrationBeans",
          "parameterTypes": [
              "java.util.Collection"
          ]
      },
      {
          "name": "setUrlPatterns",
          "parameterTypes": [
              "java.util.Collection"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getFilter",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.DynamicRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addInitParameter",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "configure",
          "parameterTypes": [
              "jakarta.servlet.Registration$Dynamic"
          ]
      },
      {
          "name": "getInitParameters",
          "parameterTypes": []
      },
      {
          "name": "isAsyncSupported",
          "parameterTypes": []
      },
      {
          "name": "setAsyncSupported",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setInitParameters",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.FilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.RegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "isEnabled",
          "parameterTypes": []
      },
      {
          "name": "onStartup",
          "parameterTypes": [
              "jakarta.servlet.ServletContext"
          ]
      },
      {
          "name": "setEnabled",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setOrder",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.ServletContextInitializer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.ServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getMultipartConfig",
          "parameterTypes": []
      },
      {
          "name": "getServlet",
          "parameterTypes": []
      },
      {
          "name": "getServletName",
          "parameterTypes": []
      },
      {
          "name": "getUrlMappings",
          "parameterTypes": []
      },
      {
          "name": "setLoadOnStartup",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setMultipartConfig",
          "parameterTypes": [
              "jakarta.servlet.MultipartConfigElement"
          ]
      },
      {
          "name": "setServlet",
          "parameterTypes": [
              "jakarta.servlet.Servlet"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.WebListenerRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getError",
          "parameterTypes": [
              "org.springframework.web.context.request.WebRequest"
          ]
      },
      {
          "name": "getErrorAttributes",
          "parameterTypes": [
              "org.springframework.web.context.request.WebRequest",
              "org.springframework.boot.web.error.ErrorAttributeOptions"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "resolveException",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object",
              "java.lang.Exception"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorAttributes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorController",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addCookieSameSiteSuppliers",
          "parameterTypes": [
              "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"
          ]
      },
      {
          "name": "addInitializers",
          "parameterTypes": [
              "org.springframework.boot.web.servlet.ServletContextInitializer[]"
          ]
      },
      {
          "name": "addWebListeners",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      },
      {
          "name": "getContextPath",
          "parameterTypes": []
      },
      {
          "name": "getCookieSameSiteSuppliers",
          "parameterTypes": []
      },
      {
          "name": "getDisplayName",
          "parameterTypes": []
      },
      {
          "name": "getDocumentRoot",
          "parameterTypes": []
      },
      {
          "name": "getInitParameters",
          "parameterTypes": []
      },
      {
          "name": "getJsp",
          "parameterTypes": []
      },
      {
          "name": "getLocaleCharsetMappings",
          "parameterTypes": []
      },
      {
          "name": "getMimeMappings",
          "parameterTypes": []
      },
      {
          "name": "getSession",
          "parameterTypes": []
      },
      {
          "name": "isRegisterDefaultServlet",
          "parameterTypes": []
      },
      {
          "name": "setContextPath",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setCookieSameSiteSuppliers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setDisplayName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setDocumentRoot",
          "parameterTypes": [
              "java.io.File"
          ]
      },
      {
          "name": "setInitParameters",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setInitializers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setJsp",
          "parameterTypes": [
              "org.springframework.boot.web.servlet.server.Jsp"
          ]
      },
      {
          "name": "setLocaleCharsetMappings",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setMimeMappings",
          "parameterTypes": [
              "org.springframework.boot.web.server.MimeMappings"
          ]
      },
      {
          "name": "setRegisterDefaultServlet",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setSession",
          "parameterTypes": [
              "org.springframework.boot.web.servlet.server.Session"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setCharset",
          "parameterTypes": [
              "java.nio.charset.Charset"
          ]
      },
      {
          "name": "setForce",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.server.Jsp",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setRegistered","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.ServletWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Session",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "getCookie",
          "parameterTypes": []
      },
      {
          "name": "setTimeout",
          "parameterTypes": [
              "java.time.Duration"
          ]
      }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.server.Session$Cookie",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cache.CacheManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cache.annotation.AbstractCachingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "setConfigurers",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "setImportMetadata",
          "parameterTypes": [
              "org.springframework.core.type.AnnotationMetadata"
          ]
      }
  ]
},
{
  "name":"org.springframework.cache.annotation.AnnotationCacheOperationSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "isCandidateClass",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"org.springframework.cache.annotation.Cacheable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cache.annotation.CachingConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.annotation.EnableCaching",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cache.annotation.ProxyCachingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "cacheAdvisor",
          "parameterTypes": [
              "org.springframework.cache.interceptor.CacheOperationSource",
              "org.springframework.cache.interceptor.CacheInterceptor"
          ]
      },
      {
          "name": "cacheInterceptor",
          "parameterTypes": [
              "org.springframework.cache.interceptor.CacheOperationSource"
          ]
      },
      {
          "name": "cacheOperationSource",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCache"
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getCache",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getCacheNames",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.cache.interceptor.AbstractCacheInvoker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getErrorHandler",
          "parameterTypes": []
      },
      {
          "name": "setErrorHandler",
          "parameterTypes": [
              "org.springframework.cache.interceptor.CacheErrorHandler"
          ]
      }
  ]
},
{
  "name":"org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCacheOperations","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }]
},
{
  "name":"org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getPointcut","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "afterSingletonsInstantiated",
          "parameterTypes": []
      },
      {
          "name": "configure",
          "parameterTypes": [
              "java.util.function.Supplier",
              "java.util.function.Supplier",
              "java.util.function.Supplier",
              "java.util.function.Supplier"
          ]
      },
      {
          "name": "getCacheOperationSource",
          "parameterTypes": []
      },
      {
          "name": "getCacheResolver",
          "parameterTypes": []
      },
      {
          "name": "getKeyGenerator",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "setCacheManager",
          "parameterTypes": [
              "org.springframework.cache.CacheManager"
          ]
      },
      {
          "name": "setCacheOperationSource",
          "parameterTypes": [
              "org.springframework.cache.interceptor.CacheOperationSource"
          ]
      },
      {
          "name": "setCacheOperationSources",
          "parameterTypes": [
              "org.springframework.cache.interceptor.CacheOperationSource[]"
          ]
      },
      {
          "name": "setCacheResolver",
          "parameterTypes": [
              "org.springframework.cache.interceptor.CacheResolver"
          ]
      },
      {
          "name": "setKeyGenerator",
          "parameterTypes": [
              "org.springframework.cache.interceptor.KeyGenerator"
          ]
      }
  ]
},
{
  "name":"org.springframework.cache.interceptor.CacheInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }]
},
{
  "name":"org.springframework.cache.interceptor.CacheOperationSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cache.jcache.JCacheCache"
},
{
  "name":"org.springframework.cache.jcache.config.ProxyJCacheConfiguration"
},
{
  "name":"org.springframework.cache.transaction.TransactionAwareCacheDecorator"
},
{
  "name":"org.springframework.cglib.proxy.Factory",
    "queryAllDeclaredMethods": true
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.Lifecycle",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.MessageSourceAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.Phased",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.SmartLifecycle",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getPhase",
          "parameterTypes": []
      },
      {
          "name": "isAutoStartup",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      }
  ]
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
              "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.context.annotation.DependsOn",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.EventListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getListenerId",
          "parameterTypes": []
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "supportsSourceType",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getApplicationContext",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "isRunning",
          "parameterTypes": []
      },
      {
          "name": "onClose",
          "parameterTypes": []
      },
      {
          "name": "onRefresh",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "start",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
},
{
  "name":"org.springframework.context.weaving.LoadTimeWeaverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.DecoratingProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.Ordered",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.ConversionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.ConverterRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.GenericConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addConverter",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Class",
              "org.springframework.core.convert.converter.Converter"
          ]
      },
      {
          "name": "addConverter",
          "parameterTypes": [
              "org.springframework.core.convert.converter.Converter"
          ]
      },
      {
          "name": "addConverter",
          "parameterTypes": [
              "org.springframework.core.convert.converter.GenericConverter"
          ]
      },
      {
          "name": "addConverterFactory",
          "parameterTypes": [
              "org.springframework.core.convert.converter.ConverterFactory"
          ]
      },
      {
          "name": "canBypassConvert",
          "parameterTypes": [
              "org.springframework.core.convert.TypeDescriptor",
              "org.springframework.core.convert.TypeDescriptor"
          ]
      },
      {
          "name": "canConvert",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Class"
          ]
      },
      {
          "name": "canConvert",
          "parameterTypes": [
              "org.springframework.core.convert.TypeDescriptor",
              "org.springframework.core.convert.TypeDescriptor"
          ]
      },
      {
          "name": "convert",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.Class"
          ]
      },
      {
          "name": "convert",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.core.convert.TypeDescriptor"
          ]
      },
      {
          "name": "convert",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.core.convert.TypeDescriptor",
              "org.springframework.core.convert.TypeDescriptor"
          ]
      },
      {
          "name": "removeConvertible",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Class"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.core.env.EnvironmentCapable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.io.Resource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.io.support.PropertiesLoaderSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "setFileEncoding",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setIgnoreResourceNotFound",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setLocalOverride",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setLocation",
          "parameterTypes": [
              "org.springframework.core.io.Resource"
          ]
      },
      {
          "name": "setLocations",
          "parameterTypes": [
              "org.springframework.core.io.Resource[]"
          ]
      },
      {
          "name": "setProperties",
          "parameterTypes": [
              "java.util.Properties"
          ]
      },
      {
          "name": "setPropertiesArray",
          "parameterTypes": [
              "java.util.Properties[]"
          ]
      },
      {
          "name": "setPropertiesPersister",
          "parameterTypes": [
              "org.springframework.util.PropertiesPersister"
          ]
      }
  ]
},
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "submitCompletable",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "submitCompletable",
          "parameterTypes": [
              "java.util.concurrent.Callable"
          ]
      }
  ]
},
{
  "name":"org.springframework.core.task.TaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.dao.support.PersistenceExceptionTranslator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.annotation.QueryAnnotation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.cassandra.ReactiveSession"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
},
{
  "name":"org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
},
{
  "name":"org.springframework.data.envers.repository.config$EnableEnversRepositories"
},
{
  "name":"org.springframework.data.envers.repository.config.EnableEnversRepositories"
},
{
  "name":"org.springframework.data.geo.GeoModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
},
{
  "name":"org.springframework.data.jpa.convert.threeten.Jsr310JpaConverters$InstantConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "convertToDatabaseColumn",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "convertToEntityAttribute",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "findPersistentPropertyPaths",
          "parameterTypes": [
              "java.lang.Class",
              "java.util.function.Predicate"
          ]
      },
      {
          "name": "hasPersistentEntityFor",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.JpaContext",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.JpaRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "deleteAllByIdInBatch",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "deleteAllInBatch",
          "parameterTypes": []
      },
      {
          "name": "deleteAllInBatch",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "deleteInBatch",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.domain.Example"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.domain.Example",
              "org.springframework.data.domain.Sort"
          ]
      },
      {
          "name": "flush",
          "parameterTypes": []
      },
      {
          "name": "getById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getOne",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getReferenceById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "saveAllAndFlush",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "saveAndFlush",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.JpaSpecificationExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.Modifying",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.Query",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "countName",
          "parameterTypes": []
      },
      {
          "name": "countProjection",
          "parameterTypes": []
      },
      {
          "name": "countQuery",
          "parameterTypes": []
      },
      {
          "name": "name",
          "parameterTypes": []
      },
      {
          "name": "nativeQuery",
          "parameterTypes": []
      },
      {
          "name": "queryRewriter",
          "parameterTypes": []
      },
      {
          "name": "value",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.config.EnableJpaRepositories",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "getObjectType",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"
},
{
  "name":"org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension$JpaRepositoryRegistrationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.CrudMethodMetadata",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getComment",
          "parameterTypes": []
      },
      {
          "name": "getEntityGraph",
          "parameterTypes": []
      },
      {
          "name": "getLockModeType",
          "parameterTypes": []
      },
      {
          "name": "getQueryHints",
          "parameterTypes": []
      },
      {
          "name": "getQueryHintsForCount",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.support.DefaultJpaContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "char"
          ]
      },
      {
          "name": "getExtensionId",
          "parameterTypes": []
      },
      {
          "name": "getRootObject",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "setEntityManager",
          "parameterTypes": [
              "jakarta.persistence.EntityManager"
          ]
      },
      {
          "name": "setEntityPathResolver",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "setEscapeCharacter",
          "parameterTypes": [
              "char"
          ]
      },
      {
          "name": "setMappingContext",
          "parameterTypes": [
              "org.springframework.data.mapping.context.MappingContext"
          ]
      },
      {
          "name": "setQueryMethodFactory",
          "parameterTypes": [
              "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jpa.repository.support.SimpleJpaRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.data.jpa.repository.support.JpaEntityInformation",
              "jakarta.persistence.EntityManager"
          ]
      },
      {
          "name": "count",
          "parameterTypes": []
      },
      {
          "name": "count",
          "parameterTypes": [
              "org.springframework.data.domain.Example"
          ]
      },
      {
          "name": "count",
          "parameterTypes": [
              "org.springframework.data.jpa.domain.Specification"
          ]
      },
      {
          "name": "delete",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "delete",
          "parameterTypes": [
              "org.springframework.data.jpa.domain.Specification"
          ]
      },
      {
          "name": "deleteAll",
          "parameterTypes": []
      },
      {
          "name": "deleteAll",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "deleteAllById",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "deleteAllByIdInBatch",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "deleteAllInBatch",
          "parameterTypes": []
      },
      {
          "name": "deleteAllInBatch",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "deleteById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "exists",
          "parameterTypes": [
              "org.springframework.data.domain.Example"
          ]
      },
      {
          "name": "exists",
          "parameterTypes": [
              "org.springframework.data.jpa.domain.Specification"
          ]
      },
      {
          "name": "existsById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": []
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.domain.Example"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.domain.Example",
              "org.springframework.data.domain.Pageable"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.domain.Example",
              "org.springframework.data.domain.Sort"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.domain.Pageable"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.domain.Sort"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.jpa.domain.Specification"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.jpa.domain.Specification",
              "org.springframework.data.domain.Pageable"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.jpa.domain.Specification",
              "org.springframework.data.domain.Sort"
          ]
      },
      {
          "name": "findAllById",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "findBy",
          "parameterTypes": [
              "org.springframework.data.domain.Example",
              "java.util.function.Function"
          ]
      },
      {
          "name": "findBy",
          "parameterTypes": [
              "org.springframework.data.jpa.domain.Specification",
              "java.util.function.Function"
          ]
      },
      {
          "name": "findById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "findOne",
          "parameterTypes": [
              "org.springframework.data.domain.Example"
          ]
      },
      {
          "name": "findOne",
          "parameterTypes": [
              "org.springframework.data.jpa.domain.Specification"
          ]
      },
      {
          "name": "flush",
          "parameterTypes": []
      },
      {
          "name": "getById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getOne",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getReferenceById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "save",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "saveAll",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "saveAllAndFlush",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "saveAndFlush",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setEscapeCharacter",
          "parameterTypes": [
              "org.springframework.data.jpa.repository.query.EscapeCharacter"
          ]
      },
      {
          "name": "setRepositoryMethodMetadata",
          "parameterTypes": [
              "org.springframework.data.jpa.repository.support.CrudMethodMetadata"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.jpa.util.HibernateProxyDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "destroy",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.ldap.repository.LdapRepository"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyAccessor"
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "createPersistentProperty",
          "parameterTypes": [
              "org.springframework.data.mapping.model.Property",
              "org.springframework.data.mapping.model.MutablePersistentEntity",
              "org.springframework.data.mapping.model.SimpleTypeHolder"
          ]
      },
      {
          "name": "getManagedTypes",
          "parameterTypes": []
      },
      {
          "name": "getPersistentEntities",
          "parameterTypes": []
      },
      {
          "name": "getPersistentEntity",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getPersistentEntity",
          "parameterTypes": [
              "org.springframework.data.mapping.PersistentProperty"
          ]
      },
      {
          "name": "getPersistentEntity",
          "parameterTypes": [
              "org.springframework.data.util.TypeInformation"
          ]
      },
      {
          "name": "getPersistentPropertyPath",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "getPersistentPropertyPath",
          "parameterTypes": [
              "org.springframework.data.mapping.PropertyPath"
          ]
      },
      {
          "name": "initialize",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setApplicationEventPublisher",
          "parameterTypes": [
              "org.springframework.context.ApplicationEventPublisher"
          ]
      },
      {
          "name": "setInitialEntitySet",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setManagedTypes",
          "parameterTypes": [
              "org.springframework.data.domain.ManagedTypes"
          ]
      },
      {
          "name": "setSimpleTypeHolder",
          "parameterTypes": [
              "org.springframework.data.mapping.model.SimpleTypeHolder"
          ]
      },
      {
          "name": "setStrict",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getPersistentEntity",
          "parameterTypes": [
              "org.springframework.data.mapping.PersistentProperty"
          ]
      },
      {
          "name": "getPersistentEntity",
          "parameterTypes": [
              "org.springframework.data.util.TypeInformation"
          ]
      },
      {
          "name": "getRequiredPersistentEntity",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getRequiredPersistentEntity",
          "parameterTypes": [
              "org.springframework.data.mapping.PersistentProperty"
          ]
      },
      {
          "name": "getRequiredPersistentEntity",
          "parameterTypes": [
              "org.springframework.data.util.TypeInformation"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.mongodb.core.MongoTemplate"
},
{
  "name":"org.springframework.data.querydsl.QuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
},
{
  "name":"org.springframework.data.redis.cache.RedisCache"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnectionFactory"
},
{
  "name":"org.springframework.data.redis.core.RedisOperations"
},
{
  "name":"org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
},
{
  "name":"org.springframework.data.repository.CrudRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "count",
          "parameterTypes": []
      },
      {
          "name": "delete",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "deleteAll",
          "parameterTypes": []
      },
      {
          "name": "deleteAll",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "deleteAllById",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "deleteById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "existsById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "findById",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "save",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.repository.ListCrudRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "findAll",
          "parameterTypes": []
      },
      {
          "name": "findAllById",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "saveAll",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.repository.ListPagingAndSortingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.repository.NoRepositoryBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.PagingAndSortingRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }]
},
{
  "name":"org.springframework.data.repository.Repository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getObject",
          "parameterTypes": []
      },
      {
          "name": "getObjectType",
          "parameterTypes": []
      },
      {
          "name": "isSingleton",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.repository.config.RepositoryConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getConfigMap",
          "parameterTypes": []
      },
      {
          "name": "processAheadOfTime",
          "parameterTypes": [
              "org.springframework.beans.factory.support.RegisteredBean"
          ]
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "setConfigMap",
          "parameterTypes": [
              "java.util.Map"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.repository.core.NamedQueries",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "hasQuery",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "empty",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "iterator",
          "parameterTypes": []
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addRepositoryFactoryCustomizer",
          "parameterTypes": [
              "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
          ]
      },
      {
          "name": "getEntityInformation",
          "parameterTypes": []
      },
      {
          "name": "getObject",
          "parameterTypes": []
      },
      {
          "name": "getObjectType",
          "parameterTypes": []
      },
      {
          "name": "getPersistentEntity",
          "parameterTypes": []
      },
      {
          "name": "getQueryMethods",
          "parameterTypes": []
      },
      {
          "name": "getRepositoryInformation",
          "parameterTypes": []
      },
      {
          "name": "isSingleton",
          "parameterTypes": []
      },
      {
          "name": "setApplicationEventPublisher",
          "parameterTypes": [
              "org.springframework.context.ApplicationEventPublisher"
          ]
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "setCustomImplementation",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setEvaluationContextProvider",
          "parameterTypes": [
              "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
          ]
      },
      {
          "name": "setLazyInit",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setNamedQueries",
          "parameterTypes": [
              "org.springframework.data.repository.core.NamedQueries"
          ]
      },
      {
          "name": "setQueryLookupStrategyKey",
          "parameterTypes": [
              "org.springframework.data.repository.query.QueryLookupStrategy$Key"
          ]
      },
      {
          "name": "setRepositoryBaseClass",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "setRepositoryFragments",
          "parameterTypes": [
              "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryInformation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getObject",
          "parameterTypes": []
      },
      {
          "name": "getObjectType",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "setEnableDefaultTransactions",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setTransactionManager",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.repository.query.Param"
},
{
  "name":"org.springframework.data.repository.query.QueryByExampleExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "count",
          "parameterTypes": [
              "org.springframework.data.domain.Example"
          ]
      },
      {
          "name": "exists",
          "parameterTypes": [
              "org.springframework.data.domain.Example"
          ]
      },
      {
          "name": "findAll",
          "parameterTypes": [
              "org.springframework.data.domain.Example",
              "org.springframework.data.domain.Pageable"
          ]
      },
      {
          "name": "findBy",
          "parameterTypes": [
              "org.springframework.data.domain.Example",
              "java.util.function.Function"
          ]
      },
      {
          "name": "findOne",
          "parameterTypes": [
              "org.springframework.data.domain.Example"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.repository.query.QueryLookupStrategy$Key",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
},
{
  "name":"org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
},
{
  "name":"org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
},
{
  "name":"org.springframework.data.spel.spi.EvaluationContextExtension",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getFunctions",
          "parameterTypes": []
      },
      {
          "name": "getProperties",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.spel.spi.ExtensionIdAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.util.CustomCollections$EclipseCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections$VavrCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections.EclipseCollections"
},
{
  "name":"org.springframework.data.util.CustomCollections.VavrCollections"
},
{
  "name":"org.springframework.data.util.Streamable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "and",
          "parameterTypes": [
              "java.lang.Iterable"
          ]
      },
      {
          "name": "and",
          "parameterTypes": [
              "java.util.function.Supplier"
          ]
      },
      {
          "name": "and",
          "parameterTypes": [
              "org.springframework.data.util.Streamable"
          ]
      },
      {
          "name": "and",
          "parameterTypes": [
              "java.lang.Object[]"
          ]
      },
      {
          "name": "filter",
          "parameterTypes": [
              "java.util.function.Predicate"
          ]
      },
      {
          "name": "flatMap",
          "parameterTypes": [
              "java.util.function.Function"
          ]
      },
      {
          "name": "get",
          "parameterTypes": []
      },
      {
          "name": "isEmpty",
          "parameterTypes": []
      },
      {
          "name": "map",
          "parameterTypes": [
              "java.util.function.Function"
          ]
      },
      {
          "name": "stream",
          "parameterTypes": []
      },
      {
          "name": "toList",
          "parameterTypes": []
      },
      {
          "name": "toSet",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.web.PageableArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "resolveArgument",
          "parameterTypes": [
              "org.springframework.core.MethodParameter",
              "org.springframework.web.method.support.ModelAndViewContainer",
              "org.springframework.web.context.request.NativeWebRequest",
              "org.springframework.web.bind.support.WebDataBinderFactory"
          ]
      },
      {
          "name": "supportsParameter",
          "parameterTypes": [
              "org.springframework.core.MethodParameter"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "isFallbackPageable",
          "parameterTypes": [
              "org.springframework.data.domain.Pageable"
          ]
      },
      {
          "name": "setFallbackPageable",
          "parameterTypes": [
              "org.springframework.data.domain.Pageable"
          ]
      },
      {
          "name": "setMaxPageSize",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setOneIndexedParameters",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setPageParameterName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPrefix",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setQualifierDelimiter",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSizeParameterName",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.web.SortArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "resolveArgument",
          "parameterTypes": [
              "org.springframework.core.MethodParameter",
              "org.springframework.web.method.support.ModelAndViewContainer",
              "org.springframework.web.context.request.NativeWebRequest",
              "org.springframework.web.bind.support.WebDataBinderFactory"
          ]
      },
      {
          "name": "supportsParameter",
          "parameterTypes": [
              "org.springframework.core.MethodParameter"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getPropertyDelimiter",
          "parameterTypes": []
      },
      {
          "name": "setFallbackSort",
          "parameterTypes": [
              "org.springframework.data.domain.Sort"
          ]
      },
      {
          "name": "setPropertyDelimiter",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setQualifierDelimiter",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setSortParameter",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "projectingArgumentResolverBeanPostProcessor",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessBeforeInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "jacksonGeoModule",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonModules",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext",
              "org.springframework.beans.factory.ObjectFactory"
          ]
      },
      {
          "name": "addArgumentResolvers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "addFormatters",
          "parameterTypes": [
              "org.springframework.format.FormatterRegistry"
          ]
      },
      {
          "name": "extendMessageConverters",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "pageableResolver",
          "parameterTypes": []
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "sortResolver",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addFormatter",
          "parameterTypes": [
              "org.springframework.format.Formatter"
          ]
      },
      {
          "name": "addFormatterForFieldAnnotation",
          "parameterTypes": [
              "org.springframework.format.AnnotationFormatterFactory"
          ]
      },
      {
          "name": "addFormatterForFieldType",
          "parameterTypes": [
              "java.lang.Class",
              "org.springframework.format.Formatter"
          ]
      },
      {
          "name": "addFormatterForFieldType",
          "parameterTypes": [
              "java.lang.Class",
              "org.springframework.format.Printer",
              "org.springframework.format.Parser"
          ]
      },
      {
          "name": "addParser",
          "parameterTypes": [
              "org.springframework.format.Parser"
          ]
      },
      {
          "name": "addPrinter",
          "parameterTypes": [
              "org.springframework.format.Printer"
          ]
      },
      {
          "name": "setEmbeddedValueResolver",
          "parameterTypes": [
              "org.springframework.util.StringValueResolver"
          ]
      }
  ]
},
{
  "name":"org.springframework.hateoas$Link"
},
{
  "name":"org.springframework.hateoas.EntityModel"
},
{
  "name":"org.springframework.hateoas.Link"
},
{
  "name":"org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
},
{
  "name":"org.springframework.http.HttpStatus"
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.client.support.HttpAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getClientHttpRequestInitializers",
          "parameterTypes": []
      },
      {
          "name": "setClientHttpRequestInitializers",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.springframework.http.client.support.InterceptingHttpAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getInterceptors",
          "parameterTypes": []
      },
      {
          "name": "getRequestFactory",
          "parameterTypes": []
      },
      {
          "name": "setInterceptors",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setRequestFactory",
          "parameterTypes": [
              "org.springframework.http.client.ClientHttpRequestFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.http.codec.CodecConfigurer"
},
{
  "name":"org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
},
{
  "name":"org.springframework.http.converter.AbstractGenericHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "canWrite",
          "parameterTypes": [
              "java.lang.reflect.Type",
              "java.lang.Class",
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "write",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.reflect.Type",
              "org.springframework.http.MediaType",
              "org.springframework.http.HttpOutputMessage"
          ]
      }
  ]
},
{
  "name":"org.springframework.http.converter.AbstractHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addDefaultHeaders",
          "parameterTypes": [
              "org.springframework.http.HttpHeaders",
              "java.lang.Object",
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "canRead",
          "parameterTypes": [
              "java.lang.Class",
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "canWrite",
          "parameterTypes": [
              "java.lang.Class",
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "getContentLength",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "getDefaultCharset",
          "parameterTypes": []
      },
      {
          "name": "getSupportedMediaTypes",
          "parameterTypes": []
      },
      {
          "name": "read",
          "parameterTypes": [
              "java.lang.Class",
              "org.springframework.http.HttpInputMessage"
          ]
      },
      {
          "name": "setDefaultCharset",
          "parameterTypes": [
              "java.nio.charset.Charset"
          ]
      },
      {
          "name": "setSupportedMediaTypes",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "write",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.http.MediaType",
              "org.springframework.http.HttpOutputMessage"
          ]
      },
      {
          "name": "writeInternal",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.http.HttpOutputMessage"
          ]
      }
  ]
},
{
  "name":"org.springframework.http.converter.GenericHttpMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.http.converter.StringHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "canRead",
          "parameterTypes": [
              "java.lang.Class",
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "canRead",
          "parameterTypes": [
              "java.lang.reflect.Type",
              "java.lang.Class",
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "canWrite",
          "parameterTypes": [
              "java.lang.Class",
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "getObjectMapper",
          "parameterTypes": []
      },
      {
          "name": "getObjectMappersForType",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getSupportedMediaTypes",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "read",
          "parameterTypes": [
              "java.lang.reflect.Type",
              "java.lang.Class",
              "org.springframework.http.HttpInputMessage"
          ]
      },
      {
          "name": "registerObjectMappersForType",
          "parameterTypes": [
              "java.lang.Class",
              "java.util.function.Consumer"
          ]
      },
      {
          "name": "setObjectMapper",
          "parameterTypes": [
              "com.fasterxml.jackson.databind.ObjectMapper"
          ]
      },
      {
          "name": "setPrettyPrint",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setSupportedMediaTypes",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.springframework.http.converter.json.GsonHttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler"
},
{
  "name":"org.springframework.instrument$InstrumentationSavingAgent"
},
{
  "name":"org.springframework.instrument.InstrumentationSavingAgent"
},
{
  "name":"org.springframework.integration.config.EnableIntegration"
},
{
  "name":"org.springframework.integration.graph.IntegrationGraphServer"
},
{
  "name":"org.springframework.jdbc.core.JdbcOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.JdbcTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "batchUpdate",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Collection",
              "int",
              "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
          ]
      },
      {
          "name": "batchUpdate",
          "parameterTypes": [
              "java.lang.String",
              "java.util.List"
          ]
      },
      {
          "name": "batchUpdate",
          "parameterTypes": [
              "java.lang.String",
              "java.util.List",
              "int[]"
          ]
      },
      {
          "name": "batchUpdate",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.BatchPreparedStatementSetter"
          ]
      },
      {
          "name": "batchUpdate",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      },
      {
          "name": "call",
          "parameterTypes": [
              "org.springframework.jdbc.core.CallableStatementCreator",
              "java.util.List"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.CallableStatementCallback"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.PreparedStatementCallback"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "org.springframework.jdbc.core.CallableStatementCreator",
              "org.springframework.jdbc.core.CallableStatementCallback"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "org.springframework.jdbc.core.ConnectionCallback"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "org.springframework.jdbc.core.PreparedStatementCreator",
              "org.springframework.jdbc.core.PreparedStatementCallback"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "org.springframework.jdbc.core.StatementCallback"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.PreparedStatementSetter",
              "org.springframework.jdbc.core.ResultSetExtractor"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.PreparedStatementSetter",
              "org.springframework.jdbc.core.RowCallbackHandler"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.PreparedStatementSetter",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.ResultSetExtractor"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.ResultSetExtractor",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowCallbackHandler"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowCallbackHandler",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowMapper",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "org.springframework.jdbc.core.ResultSetExtractor"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "org.springframework.jdbc.core.RowCallbackHandler"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]",
              "org.springframework.jdbc.core.ResultSetExtractor"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]",
              "org.springframework.jdbc.core.RowCallbackHandler"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "org.springframework.jdbc.core.PreparedStatementCreator",
              "org.springframework.jdbc.core.ResultSetExtractor"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "org.springframework.jdbc.core.PreparedStatementCreator",
              "org.springframework.jdbc.core.RowCallbackHandler"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "org.springframework.jdbc.core.PreparedStatementCreator",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForMap",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "queryForMap",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "queryForMap",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowMapper",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForRowSet",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "queryForRowSet",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "queryForRowSet",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]"
          ]
      },
      {
          "name": "queryForStream",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.PreparedStatementSetter",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForStream",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForStream",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowMapper",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "queryForStream",
          "parameterTypes": [
              "org.springframework.jdbc.core.PreparedStatementCreator",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.PreparedStatementSetter"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]",
              "int[]"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "org.springframework.jdbc.core.PreparedStatementCreator"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "org.springframework.jdbc.core.PreparedStatementCreator",
              "org.springframework.jdbc.support.KeyHolder"
          ]
      }
  ]
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "batchUpdate",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map[]"
          ]
      },
      {
          "name": "batchUpdate",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map",
              "org.springframework.jdbc.core.PreparedStatementCallback"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.PreparedStatementCallback"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "org.springframework.jdbc.core.PreparedStatementCallback"
          ]
      },
      {
          "name": "getJdbcOperations",
          "parameterTypes": []
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map",
              "org.springframework.jdbc.core.ResultSetExtractor"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map",
              "org.springframework.jdbc.core.RowCallbackHandler"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.ResultSetExtractor"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowCallbackHandler"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "org.springframework.jdbc.core.ResultSetExtractor"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "org.springframework.jdbc.core.RowCallbackHandler"
          ]
      },
      {
          "name": "query",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource"
          ]
      },
      {
          "name": "queryForList",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForMap",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map"
          ]
      },
      {
          "name": "queryForMap",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "java.lang.Class"
          ]
      },
      {
          "name": "queryForObject",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForRowSet",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map"
          ]
      },
      {
          "name": "queryForRowSet",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource"
          ]
      },
      {
          "name": "queryForStream",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "queryForStream",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "org.springframework.jdbc.core.RowMapper"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "org.springframework.jdbc.support.KeyHolder"
          ]
      },
      {
          "name": "update",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.jdbc.core.namedparam.SqlParameterSource",
              "org.springframework.jdbc.support.KeyHolder",
              "java.lang.String[]"
          ]
      }
  ]
},
{
  "name":"org.springframework.jdbc.datasource.DelegatingDataSource"
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
},
{
  "name":"org.springframework.jdbc.datasource.init.DatabasePopulator"
},
{
  "name":"org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
},
{
  "name":"org.springframework.jdbc.support.JdbcAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getDataSource",
          "parameterTypes": []
      },
      {
          "name": "getExceptionTranslator",
          "parameterTypes": []
      },
      {
          "name": "isLazyInit",
          "parameterTypes": []
      },
      {
          "name": "setDataSource",
          "parameterTypes": [
              "javax.sql.DataSource"
          ]
      },
      {
          "name": "setDatabaseProductName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setExceptionTranslator",
          "parameterTypes": [
              "org.springframework.jdbc.support.SQLExceptionTranslator"
          ]
      },
      {
          "name": "setLazyInit",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.jdbc.support.JdbcUtils"
},
{
  "name":"org.springframework.jms.core.JmsTemplate"
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name":"org.springframework.jndi.JndiObjectFactoryBean"
},
{
  "name":"org.springframework.kafka.core.KafkaTemplate"
},
{
  "name":"org.springframework.kafka.core.ProducerFactory"
},
{
  "name":"org.springframework.lang.NonNullApi"
},
{
  "name":"org.springframework.lang.Nullable"
},
{
  "name":"org.springframework.ldap.core.ContextSource"
},
{
  "name":"org.springframework.ldap.core.LdapOperations"
},
{
  "name":"org.springframework.mail.javamail.JavaMailSenderImpl"
},
{
  "name":"org.springframework.messaging.MessageChannel",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.MessageHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.SubscribableChannel",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.converter.CompositeMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "fromMessage",
          "parameterTypes": [
              "org.springframework.messaging.Message",
              "java.lang.Class"
          ]
      },
      {
          "name": "fromMessage",
          "parameterTypes": [
              "org.springframework.messaging.Message",
              "java.lang.Class",
              "java.lang.Object"
          ]
      },
      {
          "name": "toMessage",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.messaging.MessageHeaders"
          ]
      },
      {
          "name": "toMessage",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.messaging.MessageHeaders",
              "java.lang.Object"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.messaging.converter.MessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.converter.SmartMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.core.AbstractMessageSendingTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "convertAndSend",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "convertAndSend",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.Object"
          ]
      },
      {
          "name": "convertAndSend",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.Object",
              "java.util.Map"
          ]
      },
      {
          "name": "convertAndSend",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.Object",
              "java.util.Map",
              "org.springframework.messaging.core.MessagePostProcessor"
          ]
      },
      {
          "name": "convertAndSend",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.Object",
              "org.springframework.messaging.core.MessagePostProcessor"
          ]
      },
      {
          "name": "convertAndSend",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.messaging.core.MessagePostProcessor"
          ]
      },
      {
          "name": "doSend",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "getDefaultDestination",
          "parameterTypes": []
      },
      {
          "name": "getMessageConverter",
          "parameterTypes": []
      },
      {
          "name": "send",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "setDefaultDestination",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setMessageConverter",
          "parameterTypes": [
              "org.springframework.messaging.converter.MessageConverter"
          ]
      }
  ]
},
{
  "name":"org.springframework.messaging.core.MessageSendingOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.handler.annotation.MessageMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.messaging.handler.annotation.SendTo",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver",
  "methods":[{"name":"noMatchingExceptionHandler","parameterTypes":[] }]
},
{
  "name":"org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getApplicationContext",
          "parameterTypes": []
      },
      {
          "name": "getArgumentResolvers",
          "parameterTypes": []
      },
      {
          "name": "getCustomArgumentResolvers",
          "parameterTypes": []
      },
      {
          "name": "getCustomReturnValueHandlers",
          "parameterTypes": []
      },
      {
          "name": "getDestinationPrefixes",
          "parameterTypes": []
      },
      {
          "name": "getDirectLookupDestinations",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getHandlerMethods",
          "parameterTypes": []
      },
      {
          "name": "getMatchingMapping",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "getReturnValueHandlers",
          "parameterTypes": []
      },
      {
          "name": "handleMatch",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.messaging.handler.HandlerMethod",
              "java.lang.String",
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "handleMessage",
          "parameterTypes": [
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setArgumentResolvers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setCustomArgumentResolvers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setCustomReturnValueHandlers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setReturnValueHandlers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
},
{
  "name":"org.springframework.messaging.simp.SimpMessageSendingOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.simp.SimpMessagingTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "convertAndSendToUser",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String",
              "java.lang.Object"
          ]
      },
      {
          "name": "convertAndSendToUser",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String",
              "java.lang.Object",
              "java.util.Map"
          ]
      },
      {
          "name": "convertAndSendToUser",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String",
              "java.lang.Object",
              "java.util.Map",
              "org.springframework.messaging.core.MessagePostProcessor"
          ]
      },
      {
          "name": "convertAndSendToUser",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String",
              "java.lang.Object",
              "org.springframework.messaging.core.MessagePostProcessor"
          ]
      },
      {
          "name": "send",
          "parameterTypes": [
              "org.springframework.messaging.Message"
          ]
      }
  ]
},
{
  "name":"org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getConversionService",
          "parameterTypes": []
      },
      {
          "name": "getHeaderInitializer",
          "parameterTypes": []
      },
      {
          "name": "getMessageConverter",
          "parameterTypes": []
      },
      {
          "name": "getPathMatcher",
          "parameterTypes": []
      },
      {
          "name": "getValidator",
          "parameterTypes": []
      },
      {
          "name": "isRunning",
          "parameterTypes": []
      },
      {
          "name": "setConversionService",
          "parameterTypes": [
              "org.springframework.core.convert.ConversionService"
          ]
      },
      {
          "name": "setDestinationPrefixes",
          "parameterTypes": [
              "java.util.Collection"
          ]
      },
      {
          "name": "setEmbeddedValueResolver",
          "parameterTypes": [
              "org.springframework.util.StringValueResolver"
          ]
      },
      {
          "name": "setHeaderInitializer",
          "parameterTypes": [
              "org.springframework.messaging.support.MessageHeaderInitializer"
          ]
      },
      {
          "name": "setMessageConverter",
          "parameterTypes": [
              "org.springframework.messaging.converter.MessageConverter"
          ]
      },
      {
          "name": "setPathMatcher",
          "parameterTypes": [
              "org.springframework.util.PathMatcher"
          ]
      },
      {
          "name": "setValidator",
          "parameterTypes": [
              "org.springframework.validation.Validator"
          ]
      },
      {
          "name": "start",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      }
  ]
},
{
  "name":"org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getApplicationEventPublisher",
          "parameterTypes": []
      },
      {
          "name": "getBrokerChannel",
          "parameterTypes": []
      },
      {
          "name": "getClientInboundChannel",
          "parameterTypes": []
      },
      {
          "name": "getClientOutboundChannel",
          "parameterTypes": []
      },
      {
          "name": "getDestinationPrefixes",
          "parameterTypes": []
      },
      {
          "name": "handleMessage",
          "parameterTypes": [
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "isAutoStartup",
          "parameterTypes": []
      },
      {
          "name": "isBrokerAvailable",
          "parameterTypes": []
      },
      {
          "name": "isPreservePublishOrder",
          "parameterTypes": []
      },
      {
          "name": "isRunning",
          "parameterTypes": []
      },
      {
          "name": "setApplicationEventPublisher",
          "parameterTypes": [
              "org.springframework.context.ApplicationEventPublisher"
          ]
      },
      {
          "name": "setAutoStartup",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setPreservePublishOrder",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUserDestinationPredicate",
          "parameterTypes": [
              "java.util.function.Predicate"
          ]
      },
      {
          "name": "start",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      }
  ]
},
{
  "name":"org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "brokerChannel",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.core.task.TaskExecutor"
          ]
      },
      {
          "name": "brokerChannelExecutor",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel"
          ]
      },
      {
          "name": "brokerMessageConverter",
          "parameterTypes": []
      },
      {
          "name": "brokerMessagingTemplate",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.converter.CompositeMessageConverter"
          ]
      },
      {
          "name": "clientInboundChannel",
          "parameterTypes": [
              "org.springframework.core.task.TaskExecutor"
          ]
      },
      {
          "name": "clientInboundChannelExecutor",
          "parameterTypes": []
      },
      {
          "name": "clientOutboundChannel",
          "parameterTypes": [
              "org.springframework.core.task.TaskExecutor"
          ]
      },
      {
          "name": "clientOutboundChannelExecutor",
          "parameterTypes": []
      },
      {
          "name": "getApplicationContext",
          "parameterTypes": []
      },
      {
          "name": "getPathMatcher",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel"
          ]
      },
      {
          "name": "getValidator",
          "parameterTypes": []
      },
      {
          "name": "messageBrokerTaskScheduler",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "simpAnnotationMethodMessageHandler",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.simp.SimpMessagingTemplate",
              "org.springframework.messaging.converter.CompositeMessageConverter"
          ]
      },
      {
          "name": "simpleBrokerMessageHandler",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.simp.user.UserDestinationResolver"
          ]
      },
      {
          "name": "stompBrokerRelayMessageHandler",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
              "org.springframework.messaging.MessageHandler",
              "org.springframework.messaging.simp.user.UserDestinationResolver"
          ]
      },
      {
          "name": "userDestinationMessageHandler",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.simp.user.UserDestinationResolver"
          ]
      },
      {
          "name": "userDestinationResolver",
          "parameterTypes": [
              "org.springframework.messaging.simp.user.SimpUserRegistry",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel"
          ]
      },
      {
          "name": "userRegistry",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel"
          ]
      },
      {
          "name": "userRegistryMessageHandler",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.simp.user.SimpUserRegistry",
              "org.springframework.messaging.simp.SimpMessagingTemplate",
              "org.springframework.scheduling.TaskScheduler"
          ]
      }
  ]
},
{
  "name":"org.springframework.messaging.simp.user.DefaultUserDestinationResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "resolveDestination",
          "parameterTypes": [
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.messaging.simp.user.SimpUserRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.simp.user.UserDestinationMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "handleMessage",
          "parameterTypes": [
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "isRunning",
          "parameterTypes": []
      },
      {
          "name": "start",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.messaging.simp.user.UserDestinationResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.messaging.support.AbstractMessageChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getBeanName",
          "parameterTypes": []
      },
      {
          "name": "getInterceptors",
          "parameterTypes": []
      },
      {
          "name": "getLogger",
          "parameterTypes": []
      },
      {
          "name": "removeInterceptor",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "removeInterceptor",
          "parameterTypes": [
              "org.springframework.messaging.support.ChannelInterceptor"
          ]
      },
      {
          "name": "send",
          "parameterTypes": [
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "send",
          "parameterTypes": [
              "org.springframework.messaging.Message",
              "long"
          ]
      },
      {
          "name": "setBeanName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setLogger",
          "parameterTypes": [
              "org.apache.commons.logging.Log"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.messaging.support.AbstractSubscribableChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getSubscribers",
          "parameterTypes": []
      },
      {
          "name": "hasSubscription",
          "parameterTypes": [
              "org.springframework.messaging.MessageHandler"
          ]
      },
      {
          "name": "subscribe",
          "parameterTypes": [
              "org.springframework.messaging.MessageHandler"
          ]
      },
      {
          "name": "unsubscribe",
          "parameterTypes": [
              "org.springframework.messaging.MessageHandler"
          ]
      }
  ]
},
{
  "name":"org.springframework.messaging.support.ExecutorSubscribableChannel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "addInterceptor",
          "parameterTypes": [
              "int",
              "org.springframework.messaging.support.ChannelInterceptor"
          ]
      },
      {
          "name": "addInterceptor",
          "parameterTypes": [
              "org.springframework.messaging.support.ChannelInterceptor"
          ]
      },
      {
          "name": "setInterceptors",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.springframework.messaging.support.InterceptableChannel",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.hibernate5.SpringSessionContext",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.engine.spi.SessionFactoryImplementor"] }]
},
{
  "name":"org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "createNativeEntityManager",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "getBeanClassLoader",
          "parameterTypes": []
      },
      {
          "name": "getBootstrapExecutor",
          "parameterTypes": []
      },
      {
          "name": "getEntityManagerInterface",
          "parameterTypes": []
      },
      {
          "name": "getJpaDialect",
          "parameterTypes": []
      },
      {
          "name": "getJpaPropertyMap",
          "parameterTypes": []
      },
      {
          "name": "getJpaVendorAdapter",
          "parameterTypes": []
      },
      {
          "name": "getNativeEntityManagerFactory",
          "parameterTypes": []
      },
      {
          "name": "getObject",
          "parameterTypes": []
      },
      {
          "name": "getObjectType",
          "parameterTypes": []
      },
      {
          "name": "getPersistenceProvider",
          "parameterTypes": []
      },
      {
          "name": "isSingleton",
          "parameterTypes": []
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "setBeanName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setBootstrapExecutor",
          "parameterTypes": [
              "org.springframework.core.task.AsyncTaskExecutor"
          ]
      },
      {
          "name": "setEntityManagerFactoryInterface",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "setEntityManagerInitializer",
          "parameterTypes": [
              "java.util.function.Consumer"
          ]
      },
      {
          "name": "setEntityManagerInterface",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "setJpaDialect",
          "parameterTypes": [
              "org.springframework.orm.jpa.JpaDialect"
          ]
      },
      {
          "name": "setJpaProperties",
          "parameterTypes": [
              "java.util.Properties"
          ]
      },
      {
          "name": "setJpaPropertyMap",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setJpaVendorAdapter",
          "parameterTypes": [
              "org.springframework.orm.jpa.JpaVendorAdapter"
          ]
      },
      {
          "name": "setPersistenceProvider",
          "parameterTypes": [
              "jakarta.persistence.spi.PersistenceProvider"
          ]
      },
      {
          "name": "setPersistenceProviderClass",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "translateExceptionIfPossible",
          "parameterTypes": [
              "java.lang.RuntimeException"
          ]
      }
  ]
},
{
  "name":"org.springframework.orm.jpa.EntityManagerFactoryInfo",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "createNativeEntityManager",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "getBeanClassLoader",
          "parameterTypes": []
      },
      {
          "name": "getDataSource",
          "parameterTypes": []
      },
      {
          "name": "getEntityManagerInterface",
          "parameterTypes": []
      },
      {
          "name": "getJpaDialect",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.orm.jpa.EntityManagerProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.jpa.JpaTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getResourceFactory",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.orm.jpa.JpaVendorAdapter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getDataSource",
          "parameterTypes": []
      },
      {
          "name": "getPersistenceUnitInfo",
          "parameterTypes": []
      },
      {
          "name": "getPersistenceUnitName",
          "parameterTypes": []
      },
      {
          "name": "setLoadTimeWeaver",
          "parameterTypes": [
              "org.springframework.instrument.classloading.LoadTimeWeaver"
          ]
      },
      {
          "name": "setPersistenceUnitName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setResourceLoader",
          "parameterTypes": [
              "org.springframework.core.io.ResourceLoader"
          ]
      }
  ]
},
{
  "name":"org.springframework.orm.jpa.SharedEntityManagerCreator",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createSharedEntityManager","parameterTypes":["jakarta.persistence.EntityManagerFactory"] }]
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getManagedClassNames",
          "parameterTypes": []
      },
      {
          "name": "getManagedPackages",
          "parameterTypes": []
      },
      {
          "name": "getPersistenceUnitRootUrl",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "postProcessEntityManager",
          "parameterTypes": [
              "jakarta.persistence.EntityManager"
          ]
      },
      {
          "name": "postProcessEntityManagerFactory",
          "parameterTypes": [
              "jakarta.persistence.EntityManagerFactory"
          ]
      },
      {
          "name": "setDatabase",
          "parameterTypes": [
              "org.springframework.orm.jpa.vendor.Database"
          ]
      },
      {
          "name": "setDatabasePlatform",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setGenerateDdl",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setShowSql",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getEntityManagerFactoryInterface",
          "parameterTypes": []
      },
      {
          "name": "getEntityManagerInterface",
          "parameterTypes": []
      },
      {
          "name": "getJpaDialect",
          "parameterTypes": []
      },
      {
          "name": "getJpaPropertyMap",
          "parameterTypes": []
      },
      {
          "name": "getJpaPropertyMap",
          "parameterTypes": [
              "jakarta.persistence.spi.PersistenceUnitInfo"
          ]
      },
      {
          "name": "getPersistenceProvider",
          "parameterTypes": []
      },
      {
          "name": "getPersistenceProviderRootPackage",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.oxm.GenericMarshaller",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.oxm.GenericUnmarshaller",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.oxm.Marshaller",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.oxm.Unmarshaller",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.oxm.jaxb.Jaxb2Marshaller",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "marshal",
          "parameterTypes": [
              "java.lang.Object",
              "javax.xml.transform.Result"
          ]
      },
      {
          "name": "marshal",
          "parameterTypes": [
              "java.lang.Object",
              "javax.xml.transform.Result",
              "org.springframework.oxm.mime.MimeContainer"
          ]
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.reflect.Type"
          ]
      },
      {
          "name": "unmarshal",
          "parameterTypes": [
              "javax.xml.transform.Source"
          ]
      },
      {
          "name": "unmarshal",
          "parameterTypes": [
              "javax.xml.transform.Source",
              "org.springframework.oxm.mime.MimeContainer"
          ]
      }
  ]
},
{
  "name":"org.springframework.oxm.mime.MimeMarshaller",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.oxm.mime.MimeUnmarshaller",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.r2dbc.connection.R2dbcTransactionManager"
},
{
  "name":"org.springframework.r2dbc.connection.init.DatabasePopulator"
},
{
  "name":"org.springframework.scheduling.SchedulingTaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"prefersShortLivedTasks","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.TaskScheduler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "schedule",
          "parameterTypes": [
              "java.lang.Runnable",
              "java.util.Date"
          ]
      },
      {
          "name": "scheduleAtFixedRate",
          "parameterTypes": [
              "java.lang.Runnable",
              "long"
          ]
      },
      {
          "name": "scheduleAtFixedRate",
          "parameterTypes": [
              "java.lang.Runnable",
              "java.util.Date",
              "long"
          ]
      },
      {
          "name": "scheduleWithFixedDelay",
          "parameterTypes": [
              "java.lang.Runnable",
              "long"
          ]
      },
      {
          "name": "scheduleWithFixedDelay",
          "parameterTypes": [
              "java.lang.Runnable",
              "java.util.Date",
              "long"
          ]
      }
  ]
},
{
  "name":"org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "setConfigurers",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      },
      {
          "name": "setImportMetadata",
          "parameterTypes": [
              "org.springframework.core.type.AnnotationMetadata"
          ]
      }
  ]
},
{
  "name":"org.springframework.scheduling.annotation.Async",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.scheduling.annotation.AsyncConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.annotation.EnableAsync",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.EnableScheduling",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "asyncAdvisor",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "postProcessAfterInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "postProcessBeforeInitialization",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String"
          ]
      },
      {
          "name": "requiresDestruction",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.scheduling.annotation.Schedules",
  "queryAllDeclaredMethods":true
},
    {
        "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
        "allDeclaredFields": true,
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "scheduledAnnotationProcessor",
                "parameterTypes": []
            }
        ]
    },
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfigurer"
},
{
  "name":"org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newThread","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "initialize",
          "parameterTypes": []
      },
      {
          "name": "setAwaitTerminationMillis",
          "parameterTypes": [
              "long"
          ]
      },
      {
          "name": "setAwaitTerminationSeconds",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setBeanName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setRejectedExecutionHandler",
          "parameterTypes": [
              "java.util.concurrent.RejectedExecutionHandler"
          ]
      },
      {
          "name": "setThreadFactory",
          "parameterTypes": [
              "java.util.concurrent.ThreadFactory"
          ]
      },
      {
          "name": "setThreadNamePrefix",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setWaitForTasksToCompleteOnShutdown",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "shutdown",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.Runnable",
              "long"
          ]
      },
      {
          "name": "submit",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "submit",
          "parameterTypes": [
              "java.util.concurrent.Callable"
          ]
      },
      {
          "name": "submitListenable",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "submitListenable",
          "parameterTypes": [
              "java.util.concurrent.Callable"
          ]
      }
  ]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.Runnable",
              "long"
          ]
      },
      {
          "name": "getClock",
          "parameterTypes": []
      },
      {
          "name": "schedule",
          "parameterTypes": [
              "java.lang.Runnable",
              "java.time.Instant"
          ]
      },
      {
          "name": "schedule",
          "parameterTypes": [
              "java.lang.Runnable",
              "org.springframework.scheduling.Trigger"
          ]
      },
      {
          "name": "scheduleAtFixedRate",
          "parameterTypes": [
              "java.lang.Runnable",
              "java.time.Duration"
          ]
      },
      {
          "name": "scheduleAtFixedRate",
          "parameterTypes": [
              "java.lang.Runnable",
              "java.time.Instant",
              "java.time.Duration"
          ]
      },
      {
          "name": "scheduleWithFixedDelay",
          "parameterTypes": [
              "java.lang.Runnable",
              "java.time.Duration"
          ]
      },
      {
          "name": "scheduleWithFixedDelay",
          "parameterTypes": [
              "java.lang.Runnable",
              "java.time.Instant",
              "java.time.Duration"
          ]
      },
      {
          "name": "submit",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "submit",
          "parameterTypes": [
              "java.util.concurrent.Callable"
          ]
      },
      {
          "name": "submitListenable",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "submitListenable",
          "parameterTypes": [
              "java.util.concurrent.Callable"
          ]
      }
  ]
},
{
  "name":"org.springframework.scheduling.config.ScheduledTaskHolder",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.access.annotation.Secured",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "createEvaluationContext",
          "parameterTypes": [
              "org.springframework.security.core.Authentication",
              "java.lang.Object"
          ]
      },
      {
          "name": "createEvaluationContextInternal",
          "parameterTypes": [
              "org.springframework.security.core.Authentication",
              "java.lang.Object"
          ]
      },
      {
          "name": "createSecurityExpressionRoot",
          "parameterTypes": [
              "org.springframework.security.core.Authentication",
              "java.lang.Object"
          ]
      },
      {
          "name": "getExpressionParser",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setExpressionParser",
          "parameterTypes": [
              "org.springframework.expression.ExpressionParser"
          ]
      },
      {
          "name": "setPermissionEvaluator",
          "parameterTypes": [
              "org.springframework.security.access.PermissionEvaluator"
          ]
      },
      {
          "name": "setRoleHierarchy",
          "parameterTypes": [
              "org.springframework.security.access.hierarchicalroles.RoleHierarchy"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.access.expression.SecurityExpressionHandler",
  "queryAllPublicMethods":true,
  "methods":[{"name":"createEvaluationContext","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createEvaluationContext","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.access.expression.method.MethodSecurityExpressionHandler",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.access.intercept.AbstractSecurityInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getAccessDecisionManager",
          "parameterTypes": []
      },
      {
          "name": "getAfterInvocationManager",
          "parameterTypes": []
      },
      {
          "name": "getAuthenticationManager",
          "parameterTypes": []
      },
      {
          "name": "getRunAsManager",
          "parameterTypes": []
      },
      {
          "name": "isAlwaysReauthenticate",
          "parameterTypes": []
      },
      {
          "name": "isRejectPublicInvocations",
          "parameterTypes": []
      },
      {
          "name": "isValidateConfigAttributes",
          "parameterTypes": []
      },
      {
          "name": "setAccessDecisionManager",
          "parameterTypes": [
              "org.springframework.security.access.AccessDecisionManager"
          ]
      },
      {
          "name": "setAfterInvocationManager",
          "parameterTypes": [
              "org.springframework.security.access.intercept.AfterInvocationManager"
          ]
      },
      {
          "name": "setAlwaysReauthenticate",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setApplicationEventPublisher",
          "parameterTypes": [
              "org.springframework.context.ApplicationEventPublisher"
          ]
      },
      {
          "name": "setAuthenticationManager",
          "parameterTypes": [
              "org.springframework.security.authentication.AuthenticationManager"
          ]
      },
      {
          "name": "setMessageSource",
          "parameterTypes": [
              "org.springframework.context.MessageSource"
          ]
      },
      {
          "name": "setPublishAuthorizationSuccess",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRejectPublicInvocations",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRunAsManager",
          "parameterTypes": [
              "org.springframework.security.access.intercept.RunAsManager"
          ]
      },
      {
          "name": "setSecurityContextHolderStrategy",
          "parameterTypes": [
              "org.springframework.security.core.context.SecurityContextHolderStrategy"
          ]
      },
      {
          "name": "setValidateConfigAttributes",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getSecureObjectClass",
          "parameterTypes": []
      },
      {
          "name": "invoke",
          "parameterTypes": [
              "org.aopalliance.intercept.MethodInvocation"
          ]
      },
      {
          "name": "obtainSecurityMetadataSource",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.security.access.method.MethodSecurityMetadataSource",
              "java.lang.String"
          ]
      },
      {
          "name": "getAdvice",
          "parameterTypes": []
      },
      {
          "name": "getPointcut",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.access.method.AbstractMethodSecurityMetadataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getAttributes",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.access.method.MethodSecurityMetadataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AnonymousAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "authenticate",
          "parameterTypes": [
              "org.springframework.security.core.Authentication"
          ]
      },
      {
          "name": "setMessageSource",
          "parameterTypes": [
              "org.springframework.context.MessageSource"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.authentication.AuthenticationEventPublisher",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManagerResolver"
},
{
  "name":"org.springframework.security.authentication.AuthenticationProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "publishAuthenticationFailure",
          "parameterTypes": [
              "org.springframework.security.core.AuthenticationException",
              "org.springframework.security.core.Authentication"
          ]
      },
      {
          "name": "publishAuthenticationSuccess",
          "parameterTypes": [
              "org.springframework.security.core.Authentication"
          ]
      },
      {
          "name": "setApplicationEventPublisher",
          "parameterTypes": [
              "org.springframework.context.ApplicationEventPublisher"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.authentication.ProviderManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "authenticate",
          "parameterTypes": [
              "org.springframework.security.core.Authentication"
          ]
      },
      {
          "name": "setMessageSource",
          "parameterTypes": [
              "org.springframework.context.MessageSource"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.authentication.ReactiveAuthenticationManager"
},
{
  "name":"org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "authenticate",
          "parameterTypes": [
              "org.springframework.security.core.Authentication"
          ]
      },
      {
          "name": "getUserCache",
          "parameterTypes": []
      },
      {
          "name": "isForcePrincipalAsString",
          "parameterTypes": []
      },
      {
          "name": "isHideUserNotFoundExceptions",
          "parameterTypes": []
      },
      {
          "name": "setAuthoritiesMapper",
          "parameterTypes": [
              "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper"
          ]
      },
      {
          "name": "setForcePrincipalAsString",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setHideUserNotFoundExceptions",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setMessageSource",
          "parameterTypes": [
              "org.springframework.context.MessageSource"
          ]
      },
      {
          "name": "setPostAuthenticationChecks",
          "parameterTypes": [
              "org.springframework.security.core.userdetails.UserDetailsChecker"
          ]
      },
      {
          "name": "setPreAuthenticationChecks",
          "parameterTypes": [
              "org.springframework.security.core.userdetails.UserDetailsChecker"
          ]
      },
      {
          "name": "setUserCache",
          "parameterTypes": [
              "org.springframework.security.core.userdetails.UserCache"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.authentication.dao.DaoAuthenticationProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException"] }]
},
{
  "name":"org.springframework.security.authorization.AuthorizationManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"verify","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "apply",
          "parameterTypes": [
              "org.springframework.security.config.annotation.SecurityConfigurer"
          ]
      },
      {
          "name": "apply",
          "parameterTypes": [
              "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
          ]
      },
      {
          "name": "getConfigurer",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getConfigurers",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getOrBuild",
          "parameterTypes": []
      },
      {
          "name": "getSharedObject",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "getSharedObjects",
          "parameterTypes": []
      },
      {
          "name": "objectPostProcessor",
          "parameterTypes": [
              "org.springframework.security.config.annotation.ObjectPostProcessor"
          ]
      },
      {
          "name": "removeConfigurer",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "removeConfigurers",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "setSharedObject",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.AbstractSecurityBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "build",
          "parameterTypes": []
      },
      {
          "name": "getObject",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.ObjectPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.SecurityBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.SecurityConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"init","parameterTypes":["org.springframework.security.config.annotation.SecurityBuilder"] }]
},
{
  "name":"org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "authenticationEventPublisher",
          "parameterTypes": [
              "org.springframework.security.authentication.AuthenticationEventPublisher"
          ]
      },
      {
          "name": "authenticationProvider",
          "parameterTypes": [
              "org.springframework.security.authentication.AuthenticationProvider"
          ]
      },
      {
          "name": "eraseCredentials",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "getDefaultUserDetailsService",
          "parameterTypes": []
      },
      {
          "name": "isConfigured",
          "parameterTypes": []
      },
      {
          "name": "ldapAuthentication",
          "parameterTypes": []
      },
      {
          "name": "parentAuthenticationManager",
          "parameterTypes": [
              "org.springframework.security.authentication.AuthenticationManager"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "authenticationManagerBuilder",
          "parameterTypes": [
              "org.springframework.security.config.annotation.ObjectPostProcessor",
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "enableGlobalAuthenticationAutowiredConfigurer",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "initializeAuthenticationProviderBeanManagerConfigurer",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "initializeUserDetailsBeanManagerConfigurer",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setGlobalAuthenticationConfigurers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setObjectPostProcessor",
          "parameterTypes": [
              "org.springframework.security.config.annotation.ObjectPostProcessor"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "inMemoryAuthentication",
          "parameterTypes": []
      },
      {
          "name": "jdbcAuthentication",
          "parameterTypes": []
      },
      {
          "name": "userDetailsService",
          "parameterTypes": [
              "org.springframework.security.core.userdetails.UserDetailsService"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "init",
          "parameterTypes": [
              "org.springframework.security.config.annotation.SecurityBuilder"
          ]
      },
      {
          "name": "init",
          "parameterTypes": [
              "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "configure",
          "parameterTypes": [
              "org.springframework.security.config.annotation.SecurityBuilder"
          ]
      },
      {
          "name": "configure",
          "parameterTypes": [
              "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
          ]
      },
      {
          "name": "init",
          "parameterTypes": [
              "org.springframework.security.config.annotation.SecurityBuilder"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "init",
          "parameterTypes": [
              "org.springframework.security.config.annotation.SecurityBuilder"
          ]
      },
      {
          "name": "init",
          "parameterTypes": [
              "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "init",
          "parameterTypes": [
              "org.springframework.security.config.annotation.SecurityBuilder"
          ]
      },
      {
          "name": "init",
          "parameterTypes": [
              "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterSingletonsInstantiated",
          "parameterTypes": []
      },
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "postProcess",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "objectPostProcessor",
          "parameterTypes": [
              "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterSingletonsInstantiated",
          "parameterTypes": []
      },
      {
          "name": "methodSecurityInterceptor",
          "parameterTypes": [
              "org.springframework.security.access.method.MethodSecurityMetadataSource"
          ]
      },
      {
          "name": "preInvocationAuthorizationAdvice",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "setImportMetadata",
          "parameterTypes": [
              "org.springframework.core.type.AnnotationMetadata"
          ]
      },
      {
          "name": "setMethodSecurityExpressionHandler",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setObjectPostProcessor",
          "parameterTypes": [
              "org.springframework.security.config.annotation.ObjectPostProcessor"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$SpringCGLIB$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.GlobalMethodSecuritySelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.method.configuration.MethodSecurityMetadataSourceAdvisorRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.HttpSecurityBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.builders.HttpSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "addFilter",
          "parameterTypes": [
              "jakarta.servlet.Filter"
          ]
      },
      {
          "name": "addFilterAfter",
          "parameterTypes": [
              "jakarta.servlet.Filter",
              "java.lang.Class"
          ]
      },
      {
          "name": "addFilterBefore",
          "parameterTypes": [
              "jakarta.servlet.Filter",
              "java.lang.Class"
          ]
      },
      {
          "name": "authenticationProvider",
          "parameterTypes": [
              "org.springframework.security.authentication.AuthenticationProvider"
          ]
      },
      {
          "name": "setSharedObject",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.Object"
          ]
      },
      {
          "name": "userDetailsService",
          "parameterTypes": [
              "org.springframework.security.core.userdetails.UserDetailsService"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.builders.WebSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setServletContext",
          "parameterTypes": [
              "jakarta.servlet.ServletContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "httpSecurity",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setAuthenticationConfiguration",
          "parameterTypes": [
              "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
          ]
      },
      {
          "name": "setContentNegotiationStrategy",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationStrategy"
          ]
      },
      {
          "name": "setObjectPostProcessor",
          "parameterTypes": [
              "org.springframework.security.config.annotation.ObjectPostProcessor"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "addArgumentResolvers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "requestDataValueProcessor",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "conversionServicePostProcessor",
          "parameterTypes": []
      },
      {
          "name": "delegatingApplicationListener",
          "parameterTypes": []
      },
      {
          "name": "privilegeEvaluator",
          "parameterTypes": []
      },
      {
          "name": "setBeanClassLoader",
          "parameterTypes": [
              "java.lang.ClassLoader"
          ]
      },
      {
          "name": "setFilterChainProxySecurityConfigurer",
          "parameterTypes": [
              "org.springframework.security.config.annotation.ObjectPostProcessor",
              "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
          ]
      },
      {
          "name": "setFilterChains",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "setImportMetadata",
          "parameterTypes": [
              "org.springframework.core.type.AnnotationMetadata"
          ]
      },
      {
          "name": "springSecurityFilterChain",
          "parameterTypes": []
      },
      {
          "name": "webSecurityExpressionHandler",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
},
{
  "name":"org.springframework.security.config.http.SessionCreationPolicy"
},
{
  "name":"org.springframework.security.context.DelegatingApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.security.core.userdetails.UserDetailsService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
},
{
  "name":"org.springframework.security.oauth2.client.registration$ClientRegistration"
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistration"
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtDecoder"
},
{
  "name":"org.springframework.security.oauth2.server.resource$BearerTokenError"
},
{
  "name":"org.springframework.security.oauth2.server.resource.BearerTokenError"
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.provisioning.UserDetailsManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
},
{
  "name":"org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
},
{
  "name":"org.springframework.security.web.DefaultSecurityFilterChain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getFilters",
          "parameterTypes": []
      },
      {
          "name": "matches",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.security.web.FilterChainProxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "doFilter",
          "parameterTypes": [
              "jakarta.servlet.ServletRequest",
              "jakarta.servlet.ServletResponse",
              "jakarta.servlet.FilterChain"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.security.web.SecurityFilterChain",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.AccessDeniedHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.AccessDeniedHandlerImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setErrorPage","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.security.web.access.ExceptionTranslationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "doFilter",
          "parameterTypes": [
              "jakarta.servlet.ServletRequest",
              "jakarta.servlet.ServletResponse",
              "jakarta.servlet.FilterChain"
          ]
      },
      {
          "name": "setMessageSource",
          "parameterTypes": [
              "org.springframework.context.MessageSource"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "isAllowed",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String",
              "java.lang.String",
              "org.springframework.security.core.Authentication"
          ]
      },
      {
          "name": "isAllowed",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.security.core.Authentication"
          ]
      },
      {
          "name": "setServletContext",
          "parameterTypes": [
              "jakarta.servlet.ServletContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.access.intercept.AuthorizationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"check","parameterTypes":["java.util.function.Supplier","java.lang.Object"] }]
},
{
  "name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setSecurityContextHolderStrategy","parameterTypes":["org.springframework.security.core.context.SecurityContextHolderStrategy"] }]
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "logout",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "org.springframework.security.core.Authentication"
          ]
      },
      {
          "name": "setApplicationEventPublisher",
          "parameterTypes": [
              "org.springframework.context.ApplicationEventPublisher"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "onAuthentication",
          "parameterTypes": [
              "org.springframework.security.core.Authentication",
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse"
          ]
      },
      {
          "name": "setAlwaysCreateSession",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setApplicationEventPublisher",
          "parameterTypes": [
              "org.springframework.context.ApplicationEventPublisher"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "onAuthentication",
          "parameterTypes": [
              "org.springframework.security.core.Authentication",
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
},
    {
        "name": "org.springframework.security.web.context.SecurityContextHolderFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "doFilter",
                "parameterTypes": [
                    "jakarta.servlet.ServletRequest",
                    "jakarta.servlet.ServletResponse",
                    "jakarta.servlet.FilterChain"
                ]
            }
        ]
    },
{
  "name":"org.springframework.security.web.firewall.DefaultHttpFirewall",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getFirewalledRequest",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "getFirewalledResponse",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletResponse"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.web.firewall.HttpFirewall",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.header.HeaderWriterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.security.web.server.WebFilterChainProxy"
},
{
  "name":"org.springframework.security.web.server.csrf.CsrfToken"
},
{
  "name":"org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getExtraHiddenFields",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "processAction",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "processFormFieldValue",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.String",
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "processUrl",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "doFilter",
          "parameterTypes": [
              "jakarta.servlet.ServletRequest",
              "jakarta.servlet.ServletResponse",
              "jakarta.servlet.FilterChain"
          ]
      }
  ]
},
{
  "name":"org.springframework.security.web.util.matcher.RequestMatcher"
},
{
  "name":"org.springframework.session.FindByIndexNameSessionRepository"
},
{
  "name":"org.springframework.session.Session"
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Repository",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.PlatformTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"
},
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "allPublicFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.TransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "setImportMetadata",
          "parameterTypes": [
              "org.springframework.core.type.AnnotationMetadata"
          ]
      },
      {
          "name": "transactionalEventListenerFactory",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "isCandidateClass",
          "parameterTypes": [
              "java.lang.Class"
          ]
      }
  ]
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "transactionAdvisor",
          "parameterTypes": [
              "org.springframework.transaction.interceptor.TransactionAttributeSource",
              "org.springframework.transaction.interceptor.TransactionInterceptor"
          ]
      },
      {
          "name": "transactionAttributeSource",
          "parameterTypes": []
      },
      {
          "name": "transactionInterceptor",
          "parameterTypes": [
              "org.springframework.transaction.interceptor.TransactionAttributeSource"
          ]
      }
  ]
},
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.TransactionRuntimeHints"
},
{
  "name":"org.springframework.transaction.annotation.Transactional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getTransactionAttribute",
          "parameterTypes": [
              "java.lang.reflect.Method",
              "java.lang.Class"
          ]
      },
      {
          "name": "setEmbeddedValueResolver",
          "parameterTypes": [
              "org.springframework.util.StringValueResolver"
          ]
      }
  ]
},
{
  "name":"org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getPointcut","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "currentTransactionStatus",
          "parameterTypes": []
      },
      {
          "name": "getTransactionAttributeSource",
          "parameterTypes": []
      },
      {
          "name": "getTransactionManager",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      },
      {
          "name": "setTransactionAttributeSource",
          "parameterTypes": [
              "org.springframework.transaction.interceptor.TransactionAttributeSource"
          ]
      },
      {
          "name": "setTransactionAttributeSources",
          "parameterTypes": [
              "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
          ]
      },
      {
          "name": "setTransactionAttributes",
          "parameterTypes": [
              "java.util.Properties"
          ]
      },
      {
          "name": "setTransactionManager",
          "parameterTypes": [
              "org.springframework.transaction.TransactionManager"
          ]
      },
      {
          "name": "setTransactionManagerBeanName",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttributeSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionalProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.jta.JtaTransactionManager"
},
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager",
  "allDeclaredFields":true,
  "allPublicFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "commit",
          "parameterTypes": [
              "org.springframework.transaction.TransactionStatus"
          ]
      },
      {
          "name": "getDefaultTimeout",
          "parameterTypes": []
      },
      {
          "name": "getTransaction",
          "parameterTypes": [
              "org.springframework.transaction.TransactionDefinition"
          ]
      },
      {
          "name": "getTransactionSynchronization",
          "parameterTypes": []
      },
      {
          "name": "isFailEarlyOnGlobalRollbackOnly",
          "parameterTypes": []
      },
      {
          "name": "isGlobalRollbackOnParticipationFailure",
          "parameterTypes": []
      },
      {
          "name": "isNestedTransactionAllowed",
          "parameterTypes": []
      },
      {
          "name": "isRollbackOnCommitFailure",
          "parameterTypes": []
      },
      {
          "name": "isValidateExistingTransaction",
          "parameterTypes": []
      },
      {
          "name": "rollback",
          "parameterTypes": [
              "org.springframework.transaction.TransactionStatus"
          ]
      },
      {
          "name": "setDefaultTimeout",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setFailEarlyOnGlobalRollbackOnly",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setGlobalRollbackOnParticipationFailure",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setNestedTransactionAllowed",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setRollbackOnCommitFailure",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setTransactionSynchronization",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setTransactionSynchronizationName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setValidateExistingTransaction",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.transaction.support.DefaultTransactionDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getIsolationLevel",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "getPropagationBehavior",
          "parameterTypes": []
      },
      {
          "name": "getTimeout",
          "parameterTypes": []
      },
      {
          "name": "hashCode",
          "parameterTypes": []
      },
      {
          "name": "isReadOnly",
          "parameterTypes": []
      },
      {
          "name": "setIsolationLevel",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setIsolationLevelName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPropagationBehavior",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setPropagationBehaviorName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setReadOnly",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setTimeout",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.transaction.support.ResourceTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.support.TransactionOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"executeWithoutResult","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"org.springframework.transaction.support.TransactionTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "equals",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "org.springframework.transaction.support.TransactionCallback"
          ]
      }
  ]
},
{
  "name":"org.springframework.util.AntPathMatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "combine",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "extractPathWithinPattern",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "extractUriTemplateVariables",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "getPatternComparator",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "isPattern",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "match",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "matchStart",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.util.Assert"
},
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "createThread",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "getThreadGroup",
          "parameterTypes": []
      },
      {
          "name": "getThreadNamePrefix",
          "parameterTypes": []
      },
      {
          "name": "getThreadPriority",
          "parameterTypes": []
      },
      {
          "name": "isDaemon",
          "parameterTypes": []
      },
      {
          "name": "setDaemon",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setThreadGroup",
          "parameterTypes": [
              "java.lang.ThreadGroup"
          ]
      },
      {
          "name": "setThreadGroupName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setThreadPriority",
          "parameterTypes": [
              "int"
          ]
      }
  ]
},
{
  "name":"org.springframework.util.PathMatcher",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.validation.SmartValidator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.validation.Validator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "close",
          "parameterTypes": []
      },
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "getClockProvider",
          "parameterTypes": []
      },
      {
          "name": "getConstraintValidatorFactory",
          "parameterTypes": []
      },
      {
          "name": "getMessageInterpolator",
          "parameterTypes": []
      },
      {
          "name": "getParameterNameProvider",
          "parameterTypes": []
      },
      {
          "name": "getTraversableResolver",
          "parameterTypes": []
      },
      {
          "name": "getValidationPropertyMap",
          "parameterTypes": []
      },
      {
          "name": "getValidator",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setConfigurationInitializer",
          "parameterTypes": [
              "java.util.function.Consumer"
          ]
      },
      {
          "name": "setConstraintValidatorFactory",
          "parameterTypes": [
              "jakarta.validation.ConstraintValidatorFactory"
          ]
      },
      {
          "name": "setMappingLocations",
          "parameterTypes": [
              "org.springframework.core.io.Resource[]"
          ]
      },
      {
          "name": "setMessageInterpolator",
          "parameterTypes": [
              "jakarta.validation.MessageInterpolator"
          ]
      },
      {
          "name": "setParameterNameDiscoverer",
          "parameterTypes": [
              "org.springframework.core.ParameterNameDiscoverer"
          ]
      },
      {
          "name": "setProviderClass",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "setTraversableResolver",
          "parameterTypes": [
              "jakarta.validation.TraversableResolver"
          ]
      },
      {
          "name": "setValidationMessageSource",
          "parameterTypes": [
              "org.springframework.context.MessageSource"
          ]
      },
      {
          "name": "setValidationProperties",
          "parameterTypes": [
              "java.util.Properties"
          ]
      },
      {
          "name": "setValidationPropertyMap",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setValidationProviderResolver",
          "parameterTypes": [
              "jakarta.validation.ValidationProviderResolver"
          ]
      },
      {
          "name": "unwrap",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "usingContext",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "setValidatedAnnotationType",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "setValidator",
          "parameterTypes": [
              "jakarta.validation.Validator"
          ]
      },
      {
          "name": "setValidatorFactory",
          "parameterTypes": [
              "jakarta.validation.ValidatorFactory"
          ]
      },
      {
          "name": "setValidatorProvider",
          "parameterTypes": [
              "org.springframework.beans.factory.ObjectProvider"
          ]
      }
  ]
},
{
  "name":"org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.validation.beanvalidation.SpringValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "forExecutables",
          "parameterTypes": []
      },
      {
          "name": "getConstraintsForClass",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "validate",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.validation.Errors"
          ]
      },
      {
          "name": "validate",
          "parameterTypes": [
              "java.lang.Object",
              "org.springframework.validation.Errors",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "validate",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.Class[]"
          ]
      },
      {
          "name": "validateProperty",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String",
              "java.lang.Class[]"
          ]
      },
      {
          "name": "validateValue",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String",
              "java.lang.Object",
              "org.springframework.validation.Errors",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "validateValue",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Class[]"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.accept.ContentNegotiationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getAllFileExtensions",
          "parameterTypes": []
      },
      {
          "name": "resolveFileExtensions",
          "parameterTypes": [
              "org.springframework.http.MediaType"
          ]
      },
      {
          "name": "resolveMediaTypes",
          "parameterTypes": [
              "org.springframework.web.context.request.NativeWebRequest"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.accept.ContentNegotiationStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.accept.MediaTypeFileExtensionResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ControllerAdvice",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.CrossOrigin",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.InitBinder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PathVariable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMethod"
},
{
  "name":"org.springframework.web.bind.annotation.RequestParam",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseStatus",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.client.RestOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.client.RestTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "delete",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map"
          ]
      },
      {
          "name": "delete",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "delete",
          "parameterTypes": [
              "java.net.URI"
          ]
      },
      {
          "name": "exchange",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.http.HttpMethod",
              "org.springframework.http.HttpEntity",
              "java.lang.Class",
              "java.util.Map"
          ]
      },
      {
          "name": "exchange",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.http.HttpMethod",
              "org.springframework.http.HttpEntity",
              "java.lang.Class",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "exchange",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.http.HttpMethod",
              "org.springframework.http.HttpEntity",
              "org.springframework.core.ParameterizedTypeReference",
              "java.util.Map"
          ]
      },
      {
          "name": "exchange",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.http.HttpMethod",
              "org.springframework.http.HttpEntity",
              "org.springframework.core.ParameterizedTypeReference",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "exchange",
          "parameterTypes": [
              "java.net.URI",
              "org.springframework.http.HttpMethod",
              "org.springframework.http.HttpEntity",
              "java.lang.Class"
          ]
      },
      {
          "name": "exchange",
          "parameterTypes": [
              "java.net.URI",
              "org.springframework.http.HttpMethod",
              "org.springframework.http.HttpEntity",
              "org.springframework.core.ParameterizedTypeReference"
          ]
      },
      {
          "name": "exchange",
          "parameterTypes": [
              "org.springframework.http.RequestEntity",
              "java.lang.Class"
          ]
      },
      {
          "name": "exchange",
          "parameterTypes": [
              "org.springframework.http.RequestEntity",
              "org.springframework.core.ParameterizedTypeReference"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.http.HttpMethod",
              "org.springframework.web.client.RequestCallback",
              "org.springframework.web.client.ResponseExtractor",
              "java.util.Map"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.lang.String",
              "org.springframework.http.HttpMethod",
              "org.springframework.web.client.RequestCallback",
              "org.springframework.web.client.ResponseExtractor",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "execute",
          "parameterTypes": [
              "java.net.URI",
              "org.springframework.http.HttpMethod",
              "org.springframework.web.client.RequestCallback",
              "org.springframework.web.client.ResponseExtractor"
          ]
      },
      {
          "name": "getForEntity",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class",
              "java.util.Map"
          ]
      },
      {
          "name": "getForEntity",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "getForEntity",
          "parameterTypes": [
              "java.net.URI",
              "java.lang.Class"
          ]
      },
      {
          "name": "getForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class",
              "java.util.Map"
          ]
      },
      {
          "name": "getForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Class",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "getForObject",
          "parameterTypes": [
              "java.net.URI",
              "java.lang.Class"
          ]
      },
      {
          "name": "headForHeaders",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map"
          ]
      },
      {
          "name": "headForHeaders",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "headForHeaders",
          "parameterTypes": [
              "java.net.URI"
          ]
      },
      {
          "name": "optionsForAllow",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Map"
          ]
      },
      {
          "name": "optionsForAllow",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "optionsForAllow",
          "parameterTypes": [
              "java.net.URI"
          ]
      },
      {
          "name": "patchForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Class",
              "java.util.Map"
          ]
      },
      {
          "name": "patchForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Class",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "patchForObject",
          "parameterTypes": [
              "java.net.URI",
              "java.lang.Object",
              "java.lang.Class"
          ]
      },
      {
          "name": "postForEntity",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Class",
              "java.util.Map"
          ]
      },
      {
          "name": "postForEntity",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Class",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "postForEntity",
          "parameterTypes": [
              "java.net.URI",
              "java.lang.Object",
              "java.lang.Class"
          ]
      },
      {
          "name": "postForLocation",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.util.Map"
          ]
      },
      {
          "name": "postForLocation",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "postForLocation",
          "parameterTypes": [
              "java.net.URI",
              "java.lang.Object"
          ]
      },
      {
          "name": "postForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Class",
              "java.util.Map"
          ]
      },
      {
          "name": "postForObject",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Class",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "postForObject",
          "parameterTypes": [
              "java.net.URI",
              "java.lang.Object",
              "java.lang.Class"
          ]
      },
      {
          "name": "put",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.util.Map"
          ]
      },
      {
          "name": "put",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.Object",
              "java.lang.Object[]"
          ]
      },
      {
          "name": "put",
          "parameterTypes": [
              "java.net.URI",
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"
},
{
  "name":"org.springframework.web.context.ServletContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.context.WebApplicationContext"
},
{
  "name":"org.springframework.web.context.annotation.RequestScope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.context.support.WebApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getEncoding",
          "parameterTypes": []
      },
      {
          "name": "isForceRequestEncoding",
          "parameterTypes": []
      },
      {
          "name": "isForceResponseEncoding",
          "parameterTypes": []
      },
      {
          "name": "setEncoding",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setForceEncoding",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setForceRequestEncoding",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setForceResponseEncoding",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.filter.DelegatingFilterProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.filter.GenericFilterBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "getEnvironment",
          "parameterTypes": []
      },
      {
          "name": "getFilterConfig",
          "parameterTypes": []
      },
      {
          "name": "init",
          "parameterTypes": [
              "jakarta.servlet.FilterConfig"
          ]
      },
      {
          "name": "setBeanName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setEnvironment",
          "parameterTypes": [
              "org.springframework.core.env.Environment"
          ]
      },
      {
          "name": "setServletContext",
          "parameterTypes": [
              "jakarta.servlet.ServletContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.filter.OncePerRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.web.filter.ServerHttpObservationFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
  "methods":[{"name":"noMatchingExceptionHandler","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.method.support.CompositeUriComponentsContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "contributeMethodArgument",
          "parameterTypes": [
              "org.springframework.core.MethodParameter",
              "java.lang.Object",
              "org.springframework.web.util.UriComponentsBuilder",
              "java.util.Map",
              "org.springframework.core.convert.ConversionService"
          ]
      },
      {
          "name": "supportsParameter",
          "parameterTypes": [
              "org.springframework.core.MethodParameter"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.method.support.HandlerMethodArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.method.support.UriComponentsContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.MultipartResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.support.StandardServletMultipartResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "cleanupMultipart",
          "parameterTypes": [
              "org.springframework.web.multipart.MultipartHttpServletRequest"
          ]
      },
      {
          "name": "isMultipart",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "resolveMultipart",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.reactive$DispatcherHandler"
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler"
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name":"org.springframework.web.reactive.config$EnableWebFlux"
},
{
  "name":"org.springframework.web.reactive.config.EnableWebFlux"
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurer"
},
{
  "name":"org.springframework.web.reactive.function.client$ExchangeFilterFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFilterFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.result.view.View"
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.FlashMapManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.FrameworkServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "destroy",
          "parameterTypes": []
      },
      {
          "name": "getContextAttribute",
          "parameterTypes": []
      },
      {
          "name": "getContextClass",
          "parameterTypes": []
      },
      {
          "name": "getContextConfigLocation",
          "parameterTypes": []
      },
      {
          "name": "getContextId",
          "parameterTypes": []
      },
      {
          "name": "getNamespace",
          "parameterTypes": []
      },
      {
          "name": "getServletContextAttributeName",
          "parameterTypes": []
      },
      {
          "name": "getWebApplicationContext",
          "parameterTypes": []
      },
      {
          "name": "isEnableLoggingRequestDetails",
          "parameterTypes": []
      },
      {
          "name": "onApplicationEvent",
          "parameterTypes": [
              "org.springframework.context.event.ContextRefreshedEvent"
          ]
      },
      {
          "name": "refresh",
          "parameterTypes": []
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setContextAttribute",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setContextClass",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "setContextConfigLocation",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setContextId",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setContextInitializerClasses",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setContextInitializers",
          "parameterTypes": [
              "org.springframework.context.ApplicationContextInitializer[]"
          ]
      },
      {
          "name": "setDispatchOptionsRequest",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setDispatchTraceRequest",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setEnableLoggingRequestDetails",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setNamespace",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setPublishContext",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setPublishEvents",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setThreadContextInheritable",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.HandlerAdapter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerExceptionResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterCompletion",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object",
              "java.lang.Exception"
          ]
      },
      {
          "name": "postHandle",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object",
              "org.springframework.web.servlet.ModelAndView"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.HandlerMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HttpServletBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getEnvironment",
          "parameterTypes": []
      },
      {
          "name": "getServletName",
          "parameterTypes": []
      },
      {
          "name": "init",
          "parameterTypes": []
      },
      {
          "name": "setEnvironment",
          "parameterTypes": [
              "org.springframework.core.env.Environment"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.LocaleResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.RequestToViewNameTranslator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.ThemeResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
    "name": "org.springframework.web.servlet.View"
},
{
  "name":"org.springframework.web.servlet.ViewResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.EnableWebMvc",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "beanNameHandlerMapping",
          "parameterTypes": [
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "defaultServletHandlerMapping",
          "parameterTypes": []
      },
      {
          "name": "flashMapManager",
          "parameterTypes": []
      },
      {
          "name": "getApplicationContext",
          "parameterTypes": []
      },
      {
          "name": "getServletContext",
          "parameterTypes": []
      },
      {
          "name": "handlerExceptionResolver",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager"
          ]
      },
      {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
      },
      {
          "name": "httpRequestHandlerAdapter",
          "parameterTypes": []
      },
      {
          "name": "localeResolver",
          "parameterTypes": []
      },
      {
          "name": "mvcContentNegotiationManager",
          "parameterTypes": []
      },
      {
          "name": "mvcConversionService",
          "parameterTypes": []
      },
      {
          "name": "mvcHandlerMappingIntrospector",
          "parameterTypes": []
      },
      {
          "name": "mvcPathMatcher",
          "parameterTypes": []
      },
      {
          "name": "mvcPatternParser",
          "parameterTypes": []
      },
      {
          "name": "mvcResourceUrlProvider",
          "parameterTypes": []
      },
      {
          "name": "mvcUriComponentsContributor",
          "parameterTypes": [
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          ]
      },
      {
          "name": "mvcUrlPathHelper",
          "parameterTypes": []
      },
      {
          "name": "mvcValidator",
          "parameterTypes": []
      },
      {
          "name": "mvcViewResolver",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager"
          ]
      },
      {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager",
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.validation.Validator"
          ]
      },
      {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager",
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "routerFunctionMapping",
          "parameterTypes": [
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setServletContext",
          "parameterTypes": [
              "jakarta.servlet.ServletContext"
          ]
      },
      {
          "name": "simpleControllerHandlerAdapter",
          "parameterTypes": []
      },
      {
          "name": "themeResolver",
          "parameterTypes": []
      },
      {
          "name": "viewControllerHandlerMapping",
          "parameterTypes": [
              "org.springframework.format.support.FormattingConversionService",
              "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
      },
      {
          "name": "viewNameTranslator",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$$SpringCGLIB$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "addArgumentResolvers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "addCorsMappings",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.CorsRegistry"
          ]
      },
      {
          "name": "addFormatters",
          "parameterTypes": [
              "org.springframework.format.FormatterRegistry"
          ]
      },
      {
          "name": "addInterceptors",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
          ]
      },
      {
          "name": "addResourceHandlers",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
          ]
      },
      {
          "name": "addReturnValueHandlers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "addViewControllers",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
          ]
      },
      {
          "name": "configureAsyncSupport",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
          ]
      },
      {
          "name": "configureContentNegotiation",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
          ]
      },
      {
          "name": "configureDefaultServletHandling",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
          ]
      },
      {
          "name": "configureHandlerExceptionResolvers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "configureMessageConverters",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "configurePathMatch",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
          ]
      },
      {
          "name": "configureViewResolvers",
          "parameterTypes": [
              "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
          ]
      },
      {
          "name": "extendHandlerExceptionResolvers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "extendMessageConverters",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "getMessageCodesResolver",
          "parameterTypes": []
      },
      {
          "name": "getValidator",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getLastModified",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.Object"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "handle",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.function.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "initApplicationContext",
          "parameterTypes": []
      },
      {
          "name": "setDetectHandlersInAncestorContexts",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getCorsConfigurationSource",
          "parameterTypes": []
      },
      {
          "name": "getCorsProcessor",
          "parameterTypes": []
      },
      {
          "name": "getDefaultHandler",
          "parameterTypes": []
      },
      {
          "name": "getHandler",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "getPathMatcher",
          "parameterTypes": []
      },
      {
          "name": "getPatternParser",
          "parameterTypes": []
      },
      {
          "name": "getUrlPathHelper",
          "parameterTypes": []
      },
      {
          "name": "setAlwaysUseFullPath",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setBeanName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setCorsConfigurationSource",
          "parameterTypes": [
              "org.springframework.web.cors.CorsConfigurationSource"
          ]
      },
      {
          "name": "setCorsConfigurations",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setCorsProcessor",
          "parameterTypes": [
              "org.springframework.web.cors.CorsProcessor"
          ]
      },
      {
          "name": "setDefaultHandler",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setInterceptors",
          "parameterTypes": [
              "java.lang.Object[]"
          ]
      },
      {
          "name": "setOrder",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setPathMatcher",
          "parameterTypes": [
              "org.springframework.util.PathMatcher"
          ]
      },
      {
          "name": "setPatternParser",
          "parameterTypes": [
              "org.springframework.web.util.pattern.PathPatternParser"
          ]
      },
      {
          "name": "setRemoveSemicolonContent",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUrlDecode",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUrlPathHelper",
          "parameterTypes": [
              "org.springframework.web.util.UrlPathHelper"
          ]
      },
      {
          "name": "usesPathPatterns",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getDirectPaths",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getHandlerMethods",
          "parameterTypes": []
      },
      {
          "name": "getHandlerMethodsForMappingName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getMappingPathPatterns",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "getMatchingMapping",
          "parameterTypes": [
              "java.lang.Object",
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "getNamingStrategy",
          "parameterTypes": []
      },
      {
          "name": "handleMatch",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.String",
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "initCorsConfiguration",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.reflect.Method",
              "java.lang.Object"
          ]
      },
      {
          "name": "registerHandlerMethod",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.reflect.Method",
              "java.lang.Object"
          ]
      },
      {
          "name": "registerMapping",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.Object",
              "java.lang.reflect.Method"
          ]
      },
      {
          "name": "setDetectHandlerMethodsInAncestorContexts",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setHandlerMethodMappingNamingStrategy",
          "parameterTypes": [
              "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
          ]
      },
      {
          "name": "setPatternParser",
          "parameterTypes": [
              "org.springframework.web.util.pattern.PathPatternParser"
          ]
      },
      {
          "name": "unregisterMapping",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getHandlerMap",
          "parameterTypes": []
      },
      {
          "name": "getPathPatternHandlerMap",
          "parameterTypes": []
      },
      {
          "name": "getRootHandler",
          "parameterTypes": []
      },
      {
          "name": "match",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.String"
          ]
      },
      {
          "name": "setLazyInitHandlers",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setPatternParser",
          "parameterTypes": [
              "org.springframework.web.util.pattern.PathPatternParser"
          ]
      },
      {
          "name": "setRootHandler",
          "parameterTypes": [
              "java.lang.Object"
          ]
      },
      {
          "name": "setUseTrailingSlashMatch",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "useTrailingSlashMatch",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "resolveException",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object",
              "java.lang.Exception"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector"
},
{
  "name":"org.springframework.web.servlet.handler.MatchableHandlerMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getUrlMap",
          "parameterTypes": []
      },
      {
          "name": "initApplicationContext",
          "parameterTypes": []
      },
      {
          "name": "setMappings",
          "parameterTypes": [
              "java.util.Properties"
          ]
      },
      {
          "name": "setUrlMap",
          "parameterTypes": [
              "java.util.Map"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.i18n.AbstractLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDefaultLocale","parameterTypes":["java.util.Locale"] }]
},
{
  "name":"org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "resolveLocale",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "setLocale",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.util.Locale"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getLastModified",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.Object"
          ]
      },
      {
          "name": "handle",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "getLastModified",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.Object"
          ]
      },
      {
          "name": "handle",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getLastModified",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.Object"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "handle",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.Object"
          ]
      },
      {
          "name": "setOrder",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "supports",
          "parameterTypes": [
              "java.lang.Object"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "setBeanFactory",
          "parameterTypes": [
              "org.springframework.beans.factory.BeanFactory"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getBuilderConfiguration",
          "parameterTypes": []
      },
      {
          "name": "getContentNegotiationManager",
          "parameterTypes": []
      },
      {
          "name": "getFileExtensions",
          "parameterTypes": []
      },
      {
          "name": "getPathPrefixes",
          "parameterTypes": []
      },
      {
          "name": "initCorsConfiguration",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.reflect.Method",
              "java.lang.Object"
          ]
      },
      {
          "name": "match",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "java.lang.String"
          ]
      },
      {
          "name": "registerHandlerMethod",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.reflect.Method",
              "java.lang.Object"
          ]
      },
      {
          "name": "registerMapping",
          "parameterTypes": [
              "java.lang.Object",
              "java.lang.Object",
              "java.lang.reflect.Method"
          ]
      },
      {
          "name": "registerMapping",
          "parameterTypes": [
              "org.springframework.web.servlet.mvc.method.RequestMappingInfo",
              "java.lang.Object",
              "java.lang.reflect.Method"
          ]
      },
      {
          "name": "setContentNegotiationManager",
          "parameterTypes": [
              "org.springframework.web.accept.ContentNegotiationManager"
          ]
      },
      {
          "name": "setEmbeddedValueResolver",
          "parameterTypes": [
              "org.springframework.util.StringValueResolver"
          ]
      },
      {
          "name": "setPathPrefixes",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setPatternParser",
          "parameterTypes": [
              "org.springframework.web.util.pattern.PathPatternParser"
          ]
      },
      {
          "name": "setUseRegisteredSuffixPatternMatch",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUseSuffixPatternMatch",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUseTrailingSlashMatch",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "useRegisteredSuffixPatternMatch",
          "parameterTypes": []
      },
      {
          "name": "useSuffixPatternMatch",
          "parameterTypes": []
      },
      {
          "name": "useTrailingSlashMatch",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.servlet.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "onApplicationEvent",
          "parameterTypes": [
              "org.springframework.context.ApplicationEvent"
          ]
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.support.AbstractFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getFlashMapTimeout",
          "parameterTypes": []
      },
      {
          "name": "getUrlPathHelper",
          "parameterTypes": []
      },
      {
          "name": "retrieveAndUpdate",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse"
          ]
      },
      {
          "name": "saveOutputFlashMap",
          "parameterTypes": [
              "org.springframework.web.servlet.FlashMap",
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse"
          ]
      },
      {
          "name": "setFlashMapTimeout",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setUrlPathHelper",
          "parameterTypes": [
              "org.springframework.web.util.UrlPathHelper"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.support.RequestDataValueProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.support.SessionFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.support.WebContentGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getCacheControl",
          "parameterTypes": []
      },
      {
          "name": "getCacheSeconds",
          "parameterTypes": []
      },
      {
          "name": "getSupportedMethods",
          "parameterTypes": []
      },
      {
          "name": "getVaryByRequestHeaders",
          "parameterTypes": []
      },
      {
          "name": "isAlwaysMustRevalidate",
          "parameterTypes": []
      },
      {
          "name": "isRequireSession",
          "parameterTypes": []
      },
      {
          "name": "isUseCacheControlHeader",
          "parameterTypes": []
      },
      {
          "name": "isUseCacheControlNoStore",
          "parameterTypes": []
      },
      {
          "name": "isUseExpiresHeader",
          "parameterTypes": []
      },
      {
          "name": "setAlwaysMustRevalidate",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setCacheControl",
          "parameterTypes": [
              "org.springframework.http.CacheControl"
          ]
      },
      {
          "name": "setCacheSeconds",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setRequireSession",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setSupportedMethods",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      },
      {
          "name": "setUseCacheControlHeader",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUseCacheControlNoStore",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setUseExpiresHeader",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setVaryByRequestHeaders",
          "parameterTypes": [
              "java.lang.String[]"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.theme.AbstractThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getDefaultThemeName",
          "parameterTypes": []
      },
      {
          "name": "setDefaultThemeName",
          "parameterTypes": [
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.theme.FixedThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "resolveThemeName",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest"
          ]
      },
      {
          "name": "setThemeName",
          "parameterTypes": [
              "jakarta.servlet.http.HttpServletRequest",
              "jakarta.servlet.http.HttpServletResponse",
              "java.lang.String"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "clearCache",
          "parameterTypes": []
      },
      {
          "name": "getCacheFilter",
          "parameterTypes": []
      },
      {
          "name": "getCacheLimit",
          "parameterTypes": []
      },
      {
          "name": "isCache",
          "parameterTypes": []
      },
      {
          "name": "isCacheUnresolved",
          "parameterTypes": []
      },
      {
          "name": "removeFromCache",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Locale"
          ]
      },
      {
          "name": "resolveViewName",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Locale"
          ]
      },
      {
          "name": "setCache",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setCacheFilter",
          "parameterTypes": [
              "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
          ]
      },
      {
          "name": "setCacheLimit",
          "parameterTypes": [
              "int"
          ]
      },
      {
          "name": "setCacheUnresolved",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getViewName","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }]
},
{
  "name":"org.springframework.web.servlet.view.ViewResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterPropertiesSet",
          "parameterTypes": []
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "resolveViewName",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Locale"
          ]
      },
      {
          "name": "setApplicationContext",
          "parameterTypes": [
              "org.springframework.context.ApplicationContext"
          ]
      },
      {
          "name": "setServletContext",
          "parameterTypes": [
              "jakarta.servlet.ServletContext"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.socket.SubProtocolCapable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.socket.WebSocketHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.socket.config.WebSocketMessageBrokerStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods": [
      {
          "name": "<init>",
          "parameterTypes": []
      },
      {
          "name": "setConfigurers",
          "parameterTypes": [
              "java.util.List"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "stompWebSocketHandlerMapping",
          "parameterTypes": [
              "org.springframework.web.socket.WebSocketHandler",
              "org.springframework.scheduling.TaskScheduler"
          ]
      },
      {
          "name": "subProtocolWebSocketHandler",
          "parameterTypes": [
              "org.springframework.messaging.support.AbstractSubscribableChannel",
              "org.springframework.messaging.support.AbstractSubscribableChannel"
          ]
      },
      {
          "name": "webSocketMessageBrokerStats",
          "parameterTypes": [
              "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
              "org.springframework.web.socket.WebSocketHandler",
              "org.springframework.core.task.TaskExecutor",
              "org.springframework.core.task.TaskExecutor",
              "org.springframework.scheduling.TaskScheduler"
          ]
      },
      {
          "name": "webSocketScopeConfigurer",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "addArgumentResolvers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "addReturnValueHandlers",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "configureClientInboundChannel",
          "parameterTypes": [
              "org.springframework.messaging.simp.config.ChannelRegistration"
          ]
      },
      {
          "name": "configureClientOutboundChannel",
          "parameterTypes": [
              "org.springframework.messaging.simp.config.ChannelRegistration"
          ]
      },
      {
          "name": "configureMessageBroker",
          "parameterTypes": [
              "org.springframework.messaging.simp.config.MessageBrokerRegistry"
          ]
      },
      {
          "name": "configureMessageConverters",
          "parameterTypes": [
              "java.util.List"
          ]
      },
      {
          "name": "configureWebSocketTransport",
          "parameterTypes": [
              "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration"
          ]
      },
      {
          "name": "registerStompEndpoints",
          "parameterTypes": [
              "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
          ]
      }
  ]
},
{
  "name":"org.springframework.web.socket.messaging.DefaultSimpUserRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "findSubscriptions",
          "parameterTypes": [
              "org.springframework.messaging.simp.user.SimpSubscriptionMatcher"
          ]
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "getUser",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getUserCount",
          "parameterTypes": []
      },
      {
          "name": "getUsers",
          "parameterTypes": []
      },
      {
          "name": "onApplicationEvent",
          "parameterTypes": [
              "org.springframework.context.ApplicationEvent"
          ]
      },
      {
          "name": "supportsEventType",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "supportsSourceType",
          "parameterTypes": [
              "java.lang.Class"
          ]
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.socket.messaging.SubProtocolWebSocketHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "afterConnectionClosed",
          "parameterTypes": [
              "org.springframework.web.socket.WebSocketSession",
              "org.springframework.web.socket.CloseStatus"
          ]
      },
      {
          "name": "afterConnectionEstablished",
          "parameterTypes": [
              "org.springframework.web.socket.WebSocketSession"
          ]
      },
      {
          "name": "getSubProtocols",
          "parameterTypes": []
      },
      {
          "name": "handleMessage",
          "parameterTypes": [
              "org.springframework.messaging.Message"
          ]
      },
      {
          "name": "handleMessage",
          "parameterTypes": [
              "org.springframework.web.socket.WebSocketSession",
              "org.springframework.web.socket.WebSocketMessage"
          ]
      },
      {
          "name": "handleTransportError",
          "parameterTypes": [
              "org.springframework.web.socket.WebSocketSession",
              "java.lang.Throwable"
          ]
      },
      {
          "name": "isRunning",
          "parameterTypes": []
      },
      {
          "name": "start",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": [
              "java.lang.Runnable"
          ]
      },
      {
          "name": "supportsPartialMessages",
          "parameterTypes": []
      },
      {
          "name": "toString",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.socket.server.support.WebSocketHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "isRunning",
          "parameterTypes": []
      },
      {
          "name": "start",
          "parameterTypes": []
      },
      {
          "name": "stop",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.springframework.web.util.UrlPathHelper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.util.pattern.PathPatternParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.ws.client.core.WebServiceTemplate"
},
{
  "name":"org.springframework.ws.transport.http.MessageDispatcherServlet"
},
{
  "name":"org.thymeleaf.ITemplateEngine",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.thymeleaf.TemplateEngine",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addDialect",
          "parameterTypes": [
              "java.lang.String",
              "org.thymeleaf.dialect.IDialect"
          ]
      },
      {
          "name": "addDialect",
          "parameterTypes": [
              "org.thymeleaf.dialect.IDialect"
          ]
      },
      {
          "name": "addLinkBuilder",
          "parameterTypes": [
              "org.thymeleaf.linkbuilder.ILinkBuilder"
          ]
      },
      {
          "name": "addMessageResolver",
          "parameterTypes": [
              "org.thymeleaf.messageresolver.IMessageResolver"
          ]
      },
      {
          "name": "addTemplateResolver",
          "parameterTypes": [
              "org.thymeleaf.templateresolver.ITemplateResolver"
          ]
      },
      {
          "name": "clearDialects",
          "parameterTypes": []
      },
      {
          "name": "clearTemplateCache",
          "parameterTypes": []
      },
      {
          "name": "clearTemplateCacheFor",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "getCacheManager",
          "parameterTypes": []
      },
      {
          "name": "getConfiguration",
          "parameterTypes": []
      },
      {
          "name": "getDecoupledTemplateLogicResolver",
          "parameterTypes": []
      },
      {
          "name": "getDialects",
          "parameterTypes": []
      },
      {
          "name": "getDialectsByPrefix",
          "parameterTypes": []
      },
      {
          "name": "getEngineContextFactory",
          "parameterTypes": []
      },
      {
          "name": "getLinkBuilders",
          "parameterTypes": []
      },
      {
          "name": "getMessageResolvers",
          "parameterTypes": []
      },
      {
          "name": "getTemplateResolvers",
          "parameterTypes": []
      },
      {
          "name": "isInitialized",
          "parameterTypes": []
      },
      {
          "name": "process",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Set",
              "org.thymeleaf.context.IContext"
          ]
      },
      {
          "name": "process",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Set",
              "org.thymeleaf.context.IContext",
              "java.io.Writer"
          ]
      },
      {
          "name": "process",
          "parameterTypes": [
              "java.lang.String",
              "org.thymeleaf.context.IContext"
          ]
      },
      {
          "name": "process",
          "parameterTypes": [
              "java.lang.String",
              "org.thymeleaf.context.IContext",
              "java.io.Writer"
          ]
      },
      {
          "name": "process",
          "parameterTypes": [
              "org.thymeleaf.TemplateSpec",
              "org.thymeleaf.context.IContext"
          ]
      },
      {
          "name": "process",
          "parameterTypes": [
              "org.thymeleaf.TemplateSpec",
              "org.thymeleaf.context.IContext",
              "java.io.Writer"
          ]
      },
      {
          "name": "processThrottled",
          "parameterTypes": [
              "java.lang.String",
              "java.util.Set",
              "org.thymeleaf.context.IContext"
          ]
      },
      {
          "name": "processThrottled",
          "parameterTypes": [
              "java.lang.String",
              "org.thymeleaf.context.IContext"
          ]
      },
      {
          "name": "processThrottled",
          "parameterTypes": [
              "org.thymeleaf.TemplateSpec",
              "org.thymeleaf.context.IContext"
          ]
      },
      {
          "name": "setAdditionalDialects",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setCacheManager",
          "parameterTypes": [
              "org.thymeleaf.cache.ICacheManager"
          ]
      },
      {
          "name": "setDecoupledTemplateLogicResolver",
          "parameterTypes": [
              "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
          ]
      },
      {
          "name": "setDialect",
          "parameterTypes": [
              "org.thymeleaf.dialect.IDialect"
          ]
      },
      {
          "name": "setDialects",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setDialectsByPrefix",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setEngineContextFactory",
          "parameterTypes": [
              "org.thymeleaf.context.IEngineContextFactory"
          ]
      },
      {
          "name": "setLinkBuilder",
          "parameterTypes": [
              "org.thymeleaf.linkbuilder.ILinkBuilder"
          ]
      },
      {
          "name": "setLinkBuilders",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setMessageResolver",
          "parameterTypes": [
              "org.thymeleaf.messageresolver.IMessageResolver"
          ]
      },
      {
          "name": "setMessageResolvers",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setTemplateResolver",
          "parameterTypes": [
              "org.thymeleaf.templateresolver.ITemplateResolver"
          ]
      },
      {
          "name": "setTemplateResolvers",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "threadIndex",
          "parameterTypes": []
      }
  ]
},
{
  "name":"org.thymeleaf.extras.springsecurity6.dialect.SpringSecurityDialect"
},
{
  "name":"org.thymeleaf.spring6.ISpringTemplateEngine",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.thymeleaf.spring6.SpringTemplateEngine",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods": [
      {
          "name": "setMessageSource",
          "parameterTypes": [
              "org.springframework.context.MessageSource"
          ]
      },
      {
          "name": "setTemplateEngineMessageSource",
          "parameterTypes": [
              "org.springframework.context.MessageSource"
          ]
      }
  ]
},
{
  "name":"org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.thymeleaf.spring6.view.ThymeleafViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.thymeleaf.templatemode.TemplateMode"
},
{
  "name":"org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "addTemplateAlias",
          "parameterTypes": [
              "java.lang.String",
              "java.lang.String"
          ]
      },
      {
          "name": "clearTemplateAliases",
          "parameterTypes": []
      },
      {
          "name": "getCSSTemplateModePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getCSSTemplateModePatterns",
          "parameterTypes": []
      },
      {
          "name": "getCacheTTLMs",
          "parameterTypes": []
      },
      {
          "name": "getCacheablePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getCacheablePatterns",
          "parameterTypes": []
      },
      {
          "name": "getCharacterEncoding",
          "parameterTypes": []
      },
      {
          "name": "getForceSuffix",
          "parameterTypes": []
      },
      {
          "name": "getForceTemplateMode",
          "parameterTypes": []
      },
      {
          "name": "getHtmlTemplateModePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getHtmlTemplateModePatterns",
          "parameterTypes": []
      },
      {
          "name": "getJavaScriptTemplateModePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getJavaScriptTemplateModePatterns",
          "parameterTypes": []
      },
      {
          "name": "getNonCacheablePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getNonCacheablePatterns",
          "parameterTypes": []
      },
      {
          "name": "getPrefix",
          "parameterTypes": []
      },
      {
          "name": "getRawTemplateModePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getRawTemplateModePatterns",
          "parameterTypes": []
      },
      {
          "name": "getSuffix",
          "parameterTypes": []
      },
      {
          "name": "getTemplateAliases",
          "parameterTypes": []
      },
      {
          "name": "getTemplateMode",
          "parameterTypes": []
      },
      {
          "name": "getTextTemplateModePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getTextTemplateModePatterns",
          "parameterTypes": []
      },
      {
          "name": "getXmlTemplateModePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getXmlTemplateModePatterns",
          "parameterTypes": []
      },
      {
          "name": "isCacheable",
          "parameterTypes": []
      },
      {
          "name": "setCSSTemplateModePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setCacheTTLMs",
          "parameterTypes": [
              "java.lang.Long"
          ]
      },
      {
          "name": "setCacheable",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setCacheablePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setCharacterEncoding",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setForceSuffix",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setForceTemplateMode",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setHtmlTemplateModePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setJavaScriptTemplateModePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setNonCacheablePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setPrefix",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setRawTemplateModePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setSuffix",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setTemplateAliases",
          "parameterTypes": [
              "java.util.Map"
          ]
      },
      {
          "name": "setTemplateMode",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setTemplateMode",
          "parameterTypes": [
              "org.thymeleaf.templatemode.TemplateMode"
          ]
      },
      {
          "name": "setTextTemplateModePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setXmlTemplateModePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      }
  ]
},
{
  "name":"org.thymeleaf.templateresolver.AbstractTemplateResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods": [
      {
          "name": "getCheckExistence",
          "parameterTypes": []
      },
      {
          "name": "getName",
          "parameterTypes": []
      },
      {
          "name": "getOrder",
          "parameterTypes": []
      },
      {
          "name": "getResolvablePatternSpec",
          "parameterTypes": []
      },
      {
          "name": "getResolvablePatterns",
          "parameterTypes": []
      },
      {
          "name": "getUseDecoupledLogic",
          "parameterTypes": []
      },
      {
          "name": "resolveTemplate",
          "parameterTypes": [
              "org.thymeleaf.IEngineConfiguration",
              "java.lang.String",
              "java.lang.String",
              "java.util.Map"
          ]
      },
      {
          "name": "setCheckExistence",
          "parameterTypes": [
              "boolean"
          ]
      },
      {
          "name": "setName",
          "parameterTypes": [
              "java.lang.String"
          ]
      },
      {
          "name": "setOrder",
          "parameterTypes": [
              "java.lang.Integer"
          ]
      },
      {
          "name": "setResolvablePatterns",
          "parameterTypes": [
              "java.util.Set"
          ]
      },
      {
          "name": "setUseDecoupledLogic",
          "parameterTypes": [
              "boolean"
          ]
      }
  ]
},
{
  "name":"org.thymeleaf.templateresolver.ITemplateResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.webjars$WebJarAssetLocator"
},
{
  "name":"org.webjars.WebJarAssetLocator"
},
{
  "name":"org.xnio.SslClientAuthMode"
},
{
  "name":"reactor.core.publisher$Flux"
},
{
  "name":"reactor.core.publisher$Mono"
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.core.publisher.Mono"
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name":"reactor.tools.agent$ReactorDebugAgent"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"reactor.util.lang$NonNullApi"
},
{
  "name":"reactor.util.lang.NonNullApi"
},
{
  "name":"scala$Option"
},
{
  "name":"scala.Option"
},
{
  "name":"sun.java2d.marlin.DMarlinRenderingEngine",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.reflect.ReflectionFactory",
  "methods": [
      {
          "name": "getReflectionFactory",
          "parameterTypes": []
      },
      {
          "name": "newConstructorForSerialization",
          "parameterTypes": [
              "java.lang.Class",
              "java.lang.reflect.Constructor"
          ]
      }
  ]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DRBG",
  "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$DualFormatJKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SecureRandom",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.certpath.PKIXCertPathValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA384withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA512withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
    {
        "name": "sun.security.x509.SubjectAlternativeNameExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.SubjectKeyIdentifierExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "void",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "weblogic.websocket.tyrus$TyrusServletWriter"
    },
    {
        "name": "weblogic.websocket.tyrus.TyrusServletWriter"
    },
    {
        "name": "zipkin2.reporter.Sender"
    }
]
